{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0},{"_id":"themes/next/source/images/BaiduSafeInput1.1.exe","path":"images/BaiduSafeInput1.1.exe","modified":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0}],"Cache":[{"_id":"source/404.md","shasum":"4c694b948cc61020be6774960b030f3c3a2e74fd","modified":1461342426564},{"_id":"source/_posts/Date、String、Calendar三种时间类型的转换.md","shasum":"715ca078398f91b16cf9090920b754270137448c","modified":1461342426567},{"_id":"source/_posts/HTML5应用之文件拖拽上传.md","shasum":"730782f28c787a7bf41ce009f775bbcaee6055ce","modified":1461342426576},{"_id":"source/_posts/Java程序员的就业指导.md","shasum":"11e038d4564269ee8563dde32606d10e1157cf6c","modified":1461342426576},{"_id":"source/_posts/hello-world.md","shasum":"94da445cf40727689a120377e653ba867a21abe8","modified":1461344570651},{"_id":"source/_posts/SpringMVC Controller接收List Map或List Object.md","shasum":"075ee5bf608bbc58233675c9726202a147d70259","modified":1461342426576},{"_id":"source/_posts/test-md.md","shasum":"7008f30815afa5eb58c09b864bfd09104b73f6a2","modified":1461345543983},{"_id":"source/_posts/如何成为一个牛掰的Java大神.md","shasum":"e3d8d6e0cb6d38c3fc3e5e4abd936e295e86434a","modified":1461342426591},{"_id":"source/_posts/新的开始.md","shasum":"c9c610a0a9d677ee329f16467f8332f2f0a5f40d","modified":1461342426591},{"_id":"source/_posts/用Hexo与GitHub打造属于自己的博客.md","shasum":"1a1aec31fe426a0bda6bbc9d498296eab6b4525e","modified":1461342426591},{"_id":"source/_posts/网站后台页面左侧收缩折叠效果.md","shasum":"184974f43fd71fa5bc602318b768756fc9a93858","modified":1461342426591},{"_id":"source/about/index.md","shasum":"c3fe57d960536e6c66a41333b0e51082cf88430a","modified":1461342426607},{"_id":"source/categories/index.md","shasum":"f6b05f97bed3a2acfbe0287536d3902991748c58","modified":1461342426607},{"_id":"source/scaffolds/draft.md","shasum":"9df7cdb0f3d439e222a8f466e416e70a39c4a9f3","modified":1461342426607},{"_id":"source/scaffolds/page.md","shasum":"67e8c4608530e28b162ab869de6fd5aa274c9ab3","modified":1461342426607},{"_id":"source/scaffolds/post.md","shasum":"8b4799da35dad6202f539ad22a62db3d85583b21","modified":1461342426607},{"_id":"source/search/index.md","shasum":"569876de89dff5211a5448b1bb65a5857173cf3c","modified":1461342426607},{"_id":"source/tags/index.md","shasum":"a59df0a497bf9f98fe3e6c8d9e9022e1c5795205","modified":1461342426607},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461378555999},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461378555999},{"_id":"themes/next/source/css/_mixins/Mist.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461378556268},{"_id":"themes/next/source/css/_mixins/Muse.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461378556268},{"_id":"themes/next/source/css/_mixins/custom.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461378556268},{"_id":"themes/next/source/css/_variables/Muse.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461378556315},{"_id":"themes/next/source/css/_variables/custom.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461378556330},{"_id":"themes/next/README.en.md","shasum":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1461378555867},{"_id":"themes/next/README.md","shasum":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1461378555867},{"_id":"themes/next/_config.yml","shasum":"39a22a6ee3eef7d911bb123c90eaac3fe9354c9b","modified":1461383902730},{"_id":"themes/next/_config.yml_bak","shasum":"22f3f4adbc433badb6dc089e60c9fb994dcb0bd3","modified":1461379073984},{"_id":"themes/next/bower.json","shasum":"da39b00fcdf2e7a42af412de0a4d3617cc6d7084","modified":1461378555883},{"_id":"themes/next/gulpfile.coffee","shasum":"4e8c1082fa82e383494ff5b5963b7936d9c7bb2e","modified":1461378555883},{"_id":"themes/next/languages/de.yml","shasum":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1461378555883},{"_id":"themes/next/languages/default.yml","shasum":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1461378555898},{"_id":"themes/next/languages/en.yml","shasum":"df81ab6b1cf3c88ed053d3766381cd12eb659fe3","modified":1461378555898},{"_id":"themes/next/languages/fr-FR.yml","shasum":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1461378555898},{"_id":"themes/next/languages/ja.yml","shasum":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1461378555898},{"_id":"themes/next/languages/pt.yml","shasum":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1461378555898},{"_id":"themes/next/languages/ru.yml","shasum":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1461378555914},{"_id":"themes/next/languages/zh-Hans.yml","shasum":"dc5a7a47c03d28e5c13310f17f99c3154682194d","modified":1461381131747},{"_id":"themes/next/languages/zh-hk.yml","shasum":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1461378555914},{"_id":"themes/next/languages/zh-tw.yml","shasum":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1461378555914},{"_id":"themes/next/layout/_layout.swig","shasum":"1138b849e1240249480849cc2b6c6d09b28207a5","modified":1461378555914},{"_id":"themes/next/layout/_macro/post-collapse.swig","shasum":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1461378555930},{"_id":"themes/next/layout/_macro/post.swig","shasum":"74e316a693166969af1de1eb23cd8077dc922963","modified":1461378555930},{"_id":"themes/next/layout/_macro/reward.swig","shasum":"05cad11b3efcb8b7e74677bd7c13ad53d268476a","modified":1461378555930},{"_id":"themes/next/layout/_macro/sidebar.swig","shasum":"8cd78f0f934318524393fcb26dbdff9be4df70b9","modified":1461378555930},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","shasum":"d569af20d20a960d534a5b60f90c20fef519d351","modified":1461378555930},{"_id":"themes/next/layout/_partials/comments.swig","shasum":"325dd5923d845a539fc0524ca72ce40edd1e516a","modified":1461378555945},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","shasum":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1461378555945},{"_id":"themes/next/layout/_partials/footer.swig","shasum":"27669118b957e8a39d843b63dddf561c9d62b336","modified":1461378555945},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","shasum":"b83439cfca7b2c81846cd35596e27381ea4045e9","modified":1461378555945},{"_id":"themes/next/layout/_partials/head.swig","shasum":"d5eadfe13cd28aa4626a1b17e18deaafe0a0452e","modified":1461378555945},{"_id":"themes/next/layout/_partials/header.swig","shasum":"b3f4f07f03bedd615039934b44d552b91e2a4a1d","modified":1461378555962},{"_id":"themes/next/layout/_partials/pagination.swig","shasum":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1461378555965},{"_id":"themes/next/layout/_partials/search/localsearch.swig","shasum":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1461378555967},{"_id":"themes/next/layout/_partials/search/swiftype.swig","shasum":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1461378555967},{"_id":"themes/next/layout/_partials/search/tinysou.swig","shasum":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1461378555967},{"_id":"themes/next/layout/_partials/search.swig","shasum":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1461378555967},{"_id":"themes/next/layout/_partials/share/add-this.swig","shasum":"bf8e9223a40748b2e3ef77d753a8e1dbbce8095e","modified":1461378555967},{"_id":"themes/next/layout/_partials/share/baidushare.swig","shasum":"3fdde03f45a80f7a85097a40b40358adde618fc7","modified":1461378555983},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","shasum":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1461378555983},{"_id":"themes/next/layout/_partials/share/jiathis.swig","shasum":"12684840de632eb16e53ffa863166306a756fd4f","modified":1461378555983},{"_id":"themes/next/layout/_scripts/baidu-push.swig","shasum":"c5db707b46eac6a5df1d2a77f8556945a66fd181","modified":1461378555999},{"_id":"themes/next/layout/_scripts/boostrap.swig","shasum":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1461378555999},{"_id":"themes/next/layout/_scripts/commons.swig","shasum":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1461378555999},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","shasum":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1461378555999},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","shasum":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1461378555999},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","shasum":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1461378556014},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","shasum":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1461378556014},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","shasum":"096e7a6958b3bcacaa94361266832871ccb989c0","modified":1461378556014},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","shasum":"61347b9cf5c42a02f28cda4b6d920d6d17099d44","modified":1461378556014},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","shasum":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1461378556030},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","shasum":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1461378556030},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","shasum":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1461378555999},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","shasum":"c1186e609d4810ebfb3e675e9045b023a557d1db","modified":1461378556030},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","shasum":"2338be12ffee58bc08197cb9da8aaf31737aaf5c","modified":1461378556045},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","shasum":"8ba01f1ac07fbca62a4b00f5a0a3a506122c1530","modified":1461378556030},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","shasum":"aebc73513c9cbbbbda2935e2eb18e09bb1c24bf8","modified":1461378556045},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","shasum":"5bd98c26cc188a2a30504d1330a0eaae34034db0","modified":1461378556067},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","shasum":"4a5c6df1579a4ca72ed17f7dbd6d16a509aa7dc8","modified":1461378556067},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","shasum":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1461378556067},{"_id":"themes/next/layout/_scripts/vendors.swig","shasum":"c9d45628330ce8bf5fbe71c9f131c7d75334c1c4","modified":1461378556083},{"_id":"themes/next/layout/archive.swig","shasum":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1461378556083},{"_id":"themes/next/layout/category.swig","shasum":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1461378556083},{"_id":"themes/next/layout/index.swig","shasum":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1461378556083},{"_id":"themes/next/layout/page.swig","shasum":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1461378556083},{"_id":"themes/next/layout/post.swig","shasum":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1461378556099},{"_id":"themes/next/layout/tag.swig","shasum":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1461378556099},{"_id":"themes/next/package.json","shasum":"95eaba1607544965e432d56406bae391dd11bcbb","modified":1461378556099},{"_id":"themes/next/scripts/merge-configs.js","shasum":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1461378556099},{"_id":"themes/next/scripts/tags/center-quote.js","shasum":"99b66949f18398689b904907af23c013be1b978f","modified":1461378556099},{"_id":"themes/next/scripts/tags/full-image.js","shasum":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1461378556114},{"_id":"themes/next/scripts/tags/group-pictures.js","shasum":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1461378556114},{"_id":"themes/next/source/css/_common/components/buttons.styl","shasum":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1461378556114},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","shasum":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1461378556114},{"_id":"themes/next/source/css/_common/components/comments.styl","shasum":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1461378556130},{"_id":"themes/next/source/css/_common/components/components.styl","shasum":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1461378556130},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","shasum":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1461378556130},{"_id":"themes/next/source/css/_common/components/header/header.styl","shasum":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1461378556130},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","shasum":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1461378556130},{"_id":"themes/next/source/css/_common/components/header/menu.styl","shasum":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1461378556130},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","shasum":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1461378556146},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","shasum":"1727702eac5d326b5c81a667944a245016668231","modified":1461378556146},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","shasum":"4f7dfc2826a95a0d571976d9084b7e7175d99b0f","modified":1461378556146},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","shasum":"12e366f04497e3f44388fd40111a03e02f7c26af","modified":1461378556146},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","shasum":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1461378556146},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","shasum":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1461378556146},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","shasum":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1461378556162},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","shasum":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1461378556165},{"_id":"themes/next/source/css/_common/components/pagination.styl","shasum":"88559b13ce94311405b170a0506ded91273beceb","modified":1461378556167},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","shasum":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1461378556167},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","shasum":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1461378556167},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","shasum":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1461378556167},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","shasum":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1461378556167},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","shasum":"ca20affaeaf33c0904cb6356864fc6b78e95f447","modified":1461378556167},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","shasum":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1461378556183},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","shasum":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1461378556183},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","shasum":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1461378556183},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","shasum":"758d64ad65f718537ab5bfe5592a626abc40987e","modified":1461378556183},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","shasum":"01567edaea6978628aa5521a122a85434c418bfd","modified":1461378556183},{"_id":"themes/next/source/css/_common/components/post/post.styl","shasum":"a1e83e7cd686239d75caa12b7e74d69f3e1d2d90","modified":1461378556183},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","shasum":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1461378556183},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","shasum":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1461378556199},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","shasum":"70407054dbb5180c69e50ea2655d32835494394e","modified":1461378556199},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","shasum":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1461378556199},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","shasum":"1153bb71edf253765145559674390e16dd67c633","modified":1461378556199},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","shasum":"394888efec32749b353292a59ec7f1b609d6325e","modified":1461378556199},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","shasum":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1461378556199},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","shasum":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1461378556215},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","shasum":"99c4b7d1459569cda394c733845d368008a180bf","modified":1461378556215},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","shasum":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1461378556215},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","shasum":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1461378556215},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","shasum":"dd941824210733588841897457e0cc9697ca5608","modified":1461378556215},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","shasum":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1461378556215},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","shasum":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1461378556230},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","shasum":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1461378556230},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","shasum":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1461378556230},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","shasum":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1461378556230},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","shasum":"dcb4548d07cbb38b645b1753cf3ee7157e16921a","modified":1461378556230},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","shasum":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1461378556230},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","shasum":"7bd182d918f3117335a5ee87a1b544e6d2b54d7d","modified":1461378556246},{"_id":"themes/next/source/css/_common/outline/outline.styl","shasum":"12662536c7a07fff548abe94171f34b768dd610f","modified":1461378556246},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","shasum":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1461378556246},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","shasum":"302fca2d38d0175f5b5c7c42bc80b5a87404a50d","modified":1461378556246},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","shasum":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1461378556246},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","shasum":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1461378556262},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","shasum":"d110befc142dbb881c4fdcb94df65ed2f603f1c1","modified":1461378556265},{"_id":"themes/next/source/css/_custom/custom.styl","shasum":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1461378556268},{"_id":"themes/next/source/css/_mixins/Pisces.styl","shasum":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1461378556268},{"_id":"themes/next/source/css/_mixins/base.styl","shasum":"10ca6744a8594c1a085b50120f4ed0a1ef433f40","modified":1461378556268},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","shasum":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1461378556268},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","shasum":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1461378556268},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","shasum":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1461378556268},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","shasum":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1461378556284},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","shasum":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1461378556284},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","shasum":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1461378556284},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","shasum":"5187512cc4b2ce095230928c7046e0b26c3897bd","modified":1461378556284},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","shasum":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1461378556284},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","shasum":"124b540f059fd1ed13514362007cfc70355278c6","modified":1461378556284},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","shasum":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1461378556299},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","shasum":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1461378556299},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","shasum":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1461378556299},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","shasum":"f70fa81275eb4e0ea5e5a740b7a35539c6ffa9ba","modified":1461378556299},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","shasum":"c9875c010bebd77b4f59d459a10455fceb0a66a1","modified":1461378556299},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","shasum":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1461378556299},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","shasum":"2182a6da3434a6fd4d03ab1592c645d3d3c88500","modified":1461378556299},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","shasum":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1461378556315},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","shasum":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1461378556315},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","shasum":"7e8da9aa4b0ef05f8100bdb6998b6db6e4d39639","modified":1461378556315},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","shasum":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1461378556315},{"_id":"themes/next/source/css/_variables/Mist.styl","shasum":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1461378556315},{"_id":"themes/next/source/css/_variables/Pisces.styl","shasum":"6da593f19a9c8e76b43bc05172923d82b2aefa03","modified":1461378556315},{"_id":"themes/next/source/css/_variables/base.styl","shasum":"ea6e519065702dfdb1dc299f85411b9ee2bcf4ce","modified":1461378556330},{"_id":"themes/next/source/css/_variables/default.styl","shasum":"17779fa6fa3c9e1262ba100a86a8dec730c2f312","modified":1461378556330},{"_id":"themes/next/source/css/main.styl","shasum":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1461378556330},{"_id":"themes/next/source/images/avatar.jpg","shasum":"cc7bd3acd034f0bacb53b0c57e7172d63f8486cf","modified":1461381884396},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","shasum":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1461378556330},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","shasum":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1461378556346},{"_id":"themes/next/source/images/cc-by-nc.svg","shasum":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1461378556346},{"_id":"themes/next/source/images/cc-by-nd.svg","shasum":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1461378556346},{"_id":"themes/next/source/images/cc-by-sa.svg","shasum":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1461378556346},{"_id":"themes/next/source/images/cc-by.svg","shasum":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1461378556346},{"_id":"themes/next/source/images/cc-zero.svg","shasum":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1461378556363},{"_id":"themes/next/source/images/loading.gif","shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1461378556364},{"_id":"themes/next/source/images/placeholder.gif","shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1461378556365},{"_id":"themes/next/source/images/quote-l.svg","shasum":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1461378556368},{"_id":"themes/next/source/images/quote-r.svg","shasum":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1461378556368},{"_id":"themes/next/source/images/searchicon.png","shasum":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1461378556368},{"_id":"themes/next/source/js/src/affix.js","shasum":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1461378556368},{"_id":"themes/next/source/js/src/bootstrap.js","shasum":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1461378556383},{"_id":"themes/next/source/js/src/hook-duoshuo.js","shasum":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1461378556383},{"_id":"themes/next/source/js/src/motion.js","shasum":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1461378556399},{"_id":"themes/next/source/js/src/post-details.js","shasum":"b8c0b5563cc6edbac82ed5a4f43f72800029ea87","modified":1461378556399},{"_id":"themes/next/source/js/src/schemes/pisces.js","shasum":"a9d064d600ee35acd66508167e1ac8c6cfdbdcd8","modified":1461378556399},{"_id":"themes/next/source/js/src/scrollspy.js","shasum":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1461378556415},{"_id":"themes/next/source/js/src/utils.js","shasum":"14521498ba62a9a4050b86fb1eae0babd5b88c8a","modified":1461378556415},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1461378556430},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1461378556430},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1461378556430},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1461378556430},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1461378556430},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1461378556430},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1461378556430},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","shasum":"6394c48092085788a8c0ef72670b0652006231a1","modified":1461378556430},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","shasum":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1461378556446},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","shasum":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1461378556446},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","shasum":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1461378556446},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","shasum":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1461378556464},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","shasum":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1461378556468},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","shasum":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1461378556468},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","shasum":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1461378556484},{"_id":"themes/next/source/vendors/fastclick/LICENSE","shasum":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1461378556484},{"_id":"themes/next/source/vendors/fastclick/README.md","shasum":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1461378556499},{"_id":"themes/next/source/vendors/fastclick/bower.json","shasum":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1461378556499},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","shasum":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1461378556499},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","shasum":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1461378556515},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","shasum":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1461378556530},{"_id":"themes/next/source/vendors/font-awesome/bower.json","shasum":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1461378556530},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","shasum":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1461378556530},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","shasum":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1461378556530},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","shasum":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1461378556546},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","shasum":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1461378556584},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","shasum":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1461378556615},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","shasum":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1461378556631},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","shasum":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1461378556631},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","shasum":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1461378556631},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","shasum":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1461378556671},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","shasum":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1461378556687},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","shasum":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1461378556687},{"_id":"themes/next/source/vendors/velocity/bower.json","shasum":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1461378556702},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","shasum":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1461378556718},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","shasum":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1461378556734},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","shasum":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1461378556734},{"_id":"themes/next/test/helpers.js","shasum":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1461378556749},{"_id":"themes/next/test/intern.js","shasum":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1461378556749},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","shasum":"0112e96f327d413938d37c1693806f468ffdbace","modified":1461378556546},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","shasum":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1461378556568},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","shasum":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1461378556584},{"_id":"themes/next/source/vendors/jquery/index.js","shasum":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1461378556615},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","shasum":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1461378556584},{"_id":"themes/next/source/vendors/velocity/velocity.js","shasum":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1461378556702},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","shasum":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1461378556568},{"_id":"themes/next/source/images/BaiduSafeInput1.1.exe","shasum":"064c8e7e5b512248898457a41ff229828d1aa791","modified":1461382778449},{"_id":"public/vendors/velocity/velocity.ui.min.js","modified":1461384425276,"shasum":"ed5e534cd680a25d8d14429af824f38a2c7d9908"},{"_id":"public/vendors/velocity/velocity.ui.js","modified":1461384425276,"shasum":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df"},{"_id":"public/vendors/velocity/velocity.min.js","modified":1461384425292,"shasum":"2f1afadc12e4cf59ef3b405308d21baa97e739c6"},{"_id":"public/vendors/velocity/velocity.js","modified":1461384425292,"shasum":"9f08181baea0cc0e906703b7e5df9111b9ef3373"},{"_id":"public/vendors/velocity/bower.json","modified":1461384425292,"shasum":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409"},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1461384425307,"shasum":"214dad442a92d36af77ed0ca1d9092b16687f02f"},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","modified":1461384425307,"shasum":"38628e75e4412cc6f11074e03e1c6d257aae495b"},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","modified":1461384425307,"shasum":"0e9a81785a011c98be5ea821a8ed7d411818cfd1"},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","modified":1461384425323,"shasum":"481fd478650e12b67c201a0ea41e92743f8b45a3"},{"_id":"public/vendors/jquery_lazyload/bower.json","modified":1461384425323,"shasum":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53"},{"_id":"public/vendors/jquery_lazyload/README.html","modified":1461384425323,"shasum":"1eeb7414f97f8ac1f91c19eed31ebba591df787d"},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","modified":1461384425361,"shasum":"0bd87f225f3d850b299f68efc2ffafce870c0333"},{"_id":"public/vendors/jquery/index.js","modified":1461384425393,"shasum":"41b4bfbaa96be6d1440db6e78004ade1c134e276"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1461384425408,"shasum":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1461384425408,"shasum":"507970402e328b2baeb05bde73bf9ded4e2c3a2d"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1461384425408,"shasum":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1461384425408,"shasum":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1461384425424,"shasum":"b3c2f08e73320135b69c23a3908b87a12053a2f6"},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","modified":1461384425424,"shasum":"0112e96f327d413938d37c1693806f468ffdbace"},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","modified":1461384425441,"shasum":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22"},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","modified":1461384425446,"shasum":"1573904b82807abbb32c97a3632c6c6808eaac50"},{"_id":"public/vendors/font-awesome/css/font-awesome.css","modified":1461384425446,"shasum":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7"},{"_id":"public/vendors/font-awesome/bower.json","modified":1461384425446,"shasum":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad"},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","modified":1461384425446,"shasum":"ed80b43dbc7e3009b2f436741b9796df8eb3be02"},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","modified":1461384425446,"shasum":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18"},{"_id":"public/vendors/fastclick/lib/fastclick.js","modified":1461384425446,"shasum":"06cef196733a710e77ad7e386ced6963f092dc55"},{"_id":"public/vendors/fastclick/bower.json","modified":1461384425462,"shasum":"4dcecf83afddba148464d5339c93f6d0aa9f42e9"},{"_id":"public/vendors/fastclick/README.html","modified":1461384425462,"shasum":"4a6074903daa9004301ef30a6fb96556ba3eab60"},{"_id":"public/vendors/fastclick/LICENSE","modified":1461384425477,"shasum":"6f474ea75c42442da7bbcf2e9143ce98258efd8d"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","modified":1461384425477,"shasum":"53360764b429c212f424399384417ccc233bb3be"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","modified":1461384425477,"shasum":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","modified":1461384425477,"shasum":"5f163444617b6cf267342f06ac166a237bb62df9"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1461384425493,"shasum":"53e194f4a72e649c04fb586dd57762b8c022800b"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1461384425493,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1461384425493,"shasum":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1461384425493,"shasum":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1461384425493,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1461384425508,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","modified":1461384425508,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","modified":1461384425508,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","modified":1461384425508,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","modified":1461384425508,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","modified":1461384425508,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/vendors/fancybox/source/blank.gif","modified":1461384425524,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/js/src/utils.js","modified":1461384425524,"shasum":"a3a3375de818964f4cbed4d0e2c2f97ccee7199e"},{"_id":"public/js/src/scrollspy.js","modified":1461384425524,"shasum":"fe4da1b9fe73518226446f5f27d2831e4426fc35"},{"_id":"public/js/src/schemes/pisces.js","modified":1461384425524,"shasum":"7506e7490c69a200831393c38d25e91c156bd471"},{"_id":"public/js/src/post-details.js","modified":1461384425524,"shasum":"10247c78fe933a0cfcaad22a2a03e7a026864461"},{"_id":"public/js/src/motion.js","modified":1461384425524,"shasum":"269414e84df544a4ccb88519f6abae4943db3c67"},{"_id":"public/js/src/hook-duoshuo.js","modified":1461384425524,"shasum":"a6119070c0119f33e08b29da7d2cce2635eb40a0"},{"_id":"public/js/src/bootstrap.js","modified":1461384425540,"shasum":"39bf93769d9080fa01a9a875183b43198f79bc19"},{"_id":"public/js/src/affix.js","modified":1461384425542,"shasum":"978e0422b5bf1b560236d8d10ebc1adcf66392e3"},{"_id":"public/images/searchicon.png","modified":1461384425545,"shasum":"67727a6a969be0b2659b908518fa6706eed307b8"},{"_id":"public/images/quote-r.svg","modified":1461384425546,"shasum":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41"},{"_id":"public/images/quote-l.svg","modified":1461384425546,"shasum":"cd108d6f44351cadf8e6742565217f88818a0458"},{"_id":"public/images/placeholder.gif","modified":1461384425546,"shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b"},{"_id":"public/images/loading.gif","modified":1461384425546,"shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b"},{"_id":"public/images/cc-zero.svg","modified":1461384425546,"shasum":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d"},{"_id":"public/images/cc-by.svg","modified":1461384425546,"shasum":"e92a33c32d1dac8ed94849b2b4e6456e887efe70"},{"_id":"public/images/cc-by-sa.svg","modified":1461384425546,"shasum":"70c1535f43e54e5ff35ca81419e77e4c0c301398"},{"_id":"public/images/cc-by-nd.svg","modified":1461384425561,"shasum":"42cd73da328077ccc92f859bb8f3cf621b3484f8"},{"_id":"public/images/cc-by-nc.svg","modified":1461384425561,"shasum":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab"},{"_id":"public/images/cc-by-nc-sa.svg","modified":1461384425561,"shasum":"6f55543d1fb9cbc436c101d24f802dec7b41efc3"},{"_id":"public/images/cc-by-nc-nd.svg","modified":1461384425561,"shasum":"bc3588c9b2d7c68830524783120ff6cf957cf668"},{"_id":"public/images/avatar.jpg","modified":1461384425561,"shasum":"cc7bd3acd034f0bacb53b0c57e7172d63f8486cf"},{"_id":"public/images/BaiduSafeInput1.1.exe","modified":1461384425577,"shasum":"064c8e7e5b512248898457a41ff229828d1aa791"},{"_id":"public/css/main.css","modified":1461384426095,"shasum":"e4cbbbf349873b704266debb073a496ac58c0314"},{"_id":"public/404.html","modified":1461384426331,"shasum":"f7c26f8d48c89eccb80975115bb6800105364bee"},{"_id":"public/tags/index.html","modified":1461384426379,"shasum":"18146b0f8a1bb2baa267afb1c9f357d1a681cc9a"},{"_id":"public/search/index.html","modified":1461384426448,"shasum":"662f89239d9ab05cf481f03401fc2ffcd2d40e93"},{"_id":"public/scaffolds/post.html","modified":1461384426494,"shasum":"c152d4c69e2bd96d656822ca75afb922fb26993b"},{"_id":"public/scaffolds/page.html","modified":1461384426547,"shasum":"914ebe223f8ae058bcbb2fe9d69560138df47c8b"},{"_id":"public/scaffolds/draft.html","modified":1461384426579,"shasum":"872ae44d4e757f07fd936ccf2d5ce6dc2371c874"},{"_id":"public/categories/index.html","modified":1461384426647,"shasum":"dcac5d3feb4f758f31d3bd966e0ee1fb75d91b0c"},{"_id":"public/about/index.html","modified":1461384426744,"shasum":"bcf664c1b7e258e795725d0d875d43c3ba807a75"},{"_id":"public/2016/04/23/test-md/index.html","modified":1461384426811,"shasum":"d4e5731bcad90a9322d217fd15c157b6595f0715"},{"_id":"public/2016/04/23/hello-world/index.html","modified":1461384426880,"shasum":"a6f87c2b252232b6b42b4a89f0f686ee3a6a37bc"},{"_id":"public/2015/12/24/java00003/index.html","modified":1461384426995,"shasum":"d25d00ae94bea757ec4ca36d9306966fae66f56c"},{"_id":"public/2015/12/24/java00002/index.html","modified":1461384427079,"shasum":"772eed79f0513396277a140316fd2723ccf1989c"},{"_id":"public/2015/12/23/java00001/index.html","modified":1461384427164,"shasum":"5980a5d4535974616109c336171d889fa5134dc7"},{"_id":"public/2015/12/23/spring00001/index.html","modified":1461384427248,"shasum":"7684d14af7108e343801036c55f265dd47dc12d5"},{"_id":"public/2015/08/19/hexo001/index.html","modified":1461384427311,"shasum":"12a9e9cedfc32179f6e3af74bbff30e2e91f44a5"},{"_id":"public/2015/08/18/dropPic/index.html","modified":1461384427395,"shasum":"318fd40bada47bb1d8a2506dc110a2590941375d"},{"_id":"public/2015/08/15/hexo-writing/index.html","modified":1461384427480,"shasum":"952b0c15d6de2497f88f852a35654367de7b3507"},{"_id":"public/2015/08/02/hexo001/index.html","modified":1461384427549,"shasum":"896210d74d178259bfe5667951c28a23e8d385ee"},{"_id":"public/archives/index.html","modified":1461384427649,"shasum":"c43211bf2abede1ba7be9fe74566f878a4246f4f"},{"_id":"public/archives/2015/index.html","modified":1461384427749,"shasum":"068681b1f08542a4b83985892bc6cf444eb62126"},{"_id":"public/archives/2015/08/index.html","modified":1461384427827,"shasum":"c3a3124d79a701d95f143e06a9380505c300f1ec"},{"_id":"public/archives/2015/12/index.html","modified":1461384427896,"shasum":"e02598806ce3ee609d11b35a8213933d9eb9322b"},{"_id":"public/archives/2016/index.html","modified":1461384427965,"shasum":"b7a0a0c1a24cbb5df8da1228e204a95dbf0cbc77"},{"_id":"public/archives/2016/04/index.html","modified":1461384428028,"shasum":"16b28a751da678d689916d4453699945975ad200"},{"_id":"public/categories/html/index.html","modified":1461384428081,"shasum":"658d41172f83678eef4340941ff0a0d9a10e41cc"},{"_id":"public/categories/Hexo/index.html","modified":1461384428128,"shasum":"7b32daafe2fc112deb620344890cad11671dd41e"},{"_id":"public/categories/hexo/index.html","modified":1461384428197,"shasum":"d54a277fffb70d8f43efa3414708040e2da6c10e"},{"_id":"public/categories/java/index.html","modified":1461384428251,"shasum":"1e6b32a918bbc70fe36aeb13276fa83e01db25cc"},{"_id":"public/categories/Spring/index.html","modified":1461384428303,"shasum":"7634cb4acb910d3e7ede7ceb684440ae80b8d727"},{"_id":"public/categories/Java/index.html","modified":1461384428351,"shasum":"31c1ad8f3802af518bb8397cd60ebe53d8ab3178"},{"_id":"public/index.html","modified":1461384428467,"shasum":"25b609731b2725a8e3d9bdeef2dc4f8f5cc76e99"},{"_id":"public/tags/html/index.html","modified":1461384428514,"shasum":"a3eab9a6caf76dd7e610800bda631cebeedbce0a"},{"_id":"public/tags/Hexo/index.html","modified":1461384428567,"shasum":"5aeffc6346f45fda613b4eb668ff7429fc38fa59"},{"_id":"public/tags/hexo/index.html","modified":1461384428630,"shasum":"d9cda496ba0986cc629a899c3e8837bcd0bb2bdd"},{"_id":"public/tags/java/index.html","modified":1461384428714,"shasum":"a87a944311e0bd1655a6c0ad8d293d0496f1886f"},{"_id":"public/tags/Spring/index.html","modified":1461384428768,"shasum":"054968c4f8b21a96028a8512a56e652715e7a3bb"},{"_id":"public/tags/html5/index.html","modified":1461384428830,"shasum":"19eea7344320e09e3daa06574714a7551cb2e7cf"},{"_id":"public/tags/Java/index.html","modified":1461384428883,"shasum":"6420c8f0b6a31ed288d918a8a3d56634c182156c"}],"Category":[{"name":"html","_id":"cincmjy8i0009ogo02xdr0fzv"},{"name":"Hexo","_id":"cincmjy8i000eogo0a6f9sz67"},{"name":"hexo","_id":"cincmjy8y000jogo00e59xe5h"},{"name":"java","_id":"cincmjy8y000oogo0ivfgac3u"},{"name":"Spring","_id":"cincmjy9d000vogo0hnu0l9a2"},{"name":"Java","_id":"cincmjy9d0018ogo0suv9oetu"}],"Data":[],"Page":[{"layout":"default","_content":"<html>\n    <head>\n         <meta charset=\"UTF-8\" />\n         <title>404</title>                                                                                                                                        \n    </head>\n    <body>\n         <script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"></script>\n    </body>\n</html>","source":"404.md","raw":"---\nlayout: default\n---\n<html>\n    <head>\n         <meta charset=\"UTF-8\" />\n         <title>404</title>                                                                                                                                        \n    </head>\n    <body>\n         <script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"></script>\n    </body>\n</html>","date":"2016-04-22T16:27:06.564Z","updated":"2016-04-22T16:27:06.564Z","path":"404.html","title":"","comments":1,"_id":"cincmjy540000ogo0gr3maa8m"},{"layout":"tags","title":"tags","_content":"","source":"tags/index.md","raw":"layout: tags\ntitle: tags\n---","date":"2016-04-22T16:56:29.524Z","updated":"2016-04-22T16:27:06.607Z","path":"tags/index.html","comments":1,"_id":"cincmjy7g0001ogo0ukifa5nw"},{"layout":"search","title":"search","_content":"","source":"search/index.md","raw":"layout: search\ntitle: search\n----","date":"2016-04-22T16:27:06.607Z","updated":"2016-04-22T16:27:06.607Z","path":"search/index.html","comments":1,"_id":"cincmjy7g0002ogo04lokzyys"},{"title":"[object Object]","date":"2016-04-22T16:27:06.607Z","tags":null,"_content":"","source":"scaffolds/post.md","raw":"title: {{ title }}\ndate: {{ date }}\ntags:\n---\n","updated":"2016-04-22T16:27:06.607Z","path":"scaffolds/post.html","comments":1,"layout":"page","_id":"cincmjy7g0003ogo0gcet2pon"},{"title":"[object Object]","date":"2016-04-22T16:27:06.607Z","_content":"","source":"scaffolds/page.md","raw":"title: {{ title }}\ndate: {{ date }}\n---\n","updated":"2016-04-22T16:27:06.607Z","path":"scaffolds/page.html","comments":1,"layout":"page","_id":"cincmjy7w0004ogo0x7soqdza"},{"title":"[object Object]","tags":null,"_content":"","source":"scaffolds/draft.md","raw":"title: {{ title }}\ntags:\n---\n","date":"2016-04-22T16:27:06.607Z","updated":"2016-04-22T16:27:06.607Z","path":"scaffolds/draft.html","comments":1,"layout":"page","_id":"cincmjy8c0005ogo09vxt0i33"},{"layout":"categories","title":"categories","_content":"","source":"categories/index.md","raw":"layout: categories\ntitle: categories\n---","date":"2016-04-22T16:56:19.612Z","updated":"2016-04-22T16:27:06.607Z","path":"categories/index.html","comments":1,"_id":"cincmjy8e0006ogo0j4waxyyw"},{"title":"Resume","layout":"post","date":"2015-08-09T07:23:59.000Z","_content":"# 陈文东(810196858@qq.com)\n## 个人信息\n - 本科/五邑大学大学(2011.9-2015.7)/电子信息工程\n - 工作年限：1年\n - 技术博客：http://www.dongxiaoxia.xyz\n - 地点：广州\n \n## 工作经历\n### 宇宙中心\n#### XXXX项目（2013.10-至今）\n - XXXXXXXXXXXXXXXXX\n - XXXXXXXXXXXXXXXXXX\n - XXXXXXX\n - XXXXXXXXXXXXXXXXXXXXXX \n \n## 技能列表\n熟悉：Android/Java\n了解：C#/WP，Python，HTML, Markdown等","source":"about/index.md","raw":"title: Resume  \nlayout: post  \ndate: 2015-08-09 15:23:59\n---\n# 陈文东(810196858@qq.com)\n## 个人信息\n - 本科/五邑大学大学(2011.9-2015.7)/电子信息工程\n - 工作年限：1年\n - 技术博客：http://www.dongxiaoxia.xyz\n - 地点：广州\n \n## 工作经历\n### 宇宙中心\n#### XXXX项目（2013.10-至今）\n - XXXXXXXXXXXXXXXXX\n - XXXXXXXXXXXXXXXXXX\n - XXXXXXX\n - XXXXXXXXXXXXXXXXXXXXXX \n \n## 技能列表\n熟悉：Android/Java\n了解：C#/WP，Python，HTML, Markdown等","updated":"2016-04-22T16:27:06.607Z","path":"about/index.html","comments":1,"_id":"cincmjy8h0007ogo055adtk5r"}],"Post":[{"title":"网站后台页面左侧收缩折叠效果","date":"2015-08-19T15:11:44.000Z","_content":"\n```\n<html>\n<head>\n<meta http-equiv=Content-Type content=\"text/html; charset=utf-8\">\n<title>网站后台页面左侧收缩折叠效果 - 源码之家</title>\n<style type=\"text/css\">\n*{margin:0;padding:0;list-style-type:none; font-size:12px}\n</style>\n<script type=\"text/javascript\">\nfunction switchSysBar(){\n\tif(switchPoint.innerText==3){\n\t\tswitchPoint.innerText=4\n\t\tdocument.all(\"frmtitle\").style.display=\"none\"\n\t}else{\n\t\tswitchPoint.innerText=3\n\t\tdocument.all(\"frmtitle\").style.display=\"\"\n\t}\n}\n\nfunction switchSysBarInfo(){\n\tswitchPoint.innerText=3\n\tdocument.all(\"frmtitle\").style.display=\"\"\n}\n</script>\n</head>\n<body>\n\n\t<table width=\"100%\" height=\"100%\" border=0 cellpadding=\"0\" cellSpacing=0 style=\"background:#000;\">\n\t\t<tr>\n\t\t\t<td height=\"80\" style=\"font-size:28px; color:#FFF;text-align:center;font-weight:800;\">顶部导航</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td height=\"100%\" bgcolor=\"#ffffff\">\n\t\t\t\t<table width=\"100%\" height=\"100%\" cellpadding=\"0\" cellSpacing=0 border=0 borderColor=\"#000\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr> \n\t\t\t\t\t\t\t<td width=\"200\" id=\"frmtitle\" style=\"font-size:28px;text-align:center;font-weight:800;\">左侧列表</td>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<td bgcolor=\"#000\" onClick=\"switchSysBar()\" style=\"height:100%;width:12px;text-align:center;cursor:pointer;\">\n\t\t\t\t\t\t\t\t<span id=\"switchPoint\" title=\"打开/关闭左边导航栏\" style=\"color:#666;cursor:hand;font-family:Webdings;font-size:12px;\">3</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<td style=\"font-size:28px;text-align:center;font-weight:800;\">\n\t\t\t\t\t\t     \n\t\t\t\t\t\t\t\t<h2 style=\"font-size:20px;color:#000;\">右侧正文部分</h2>\n                                \n       <div style=\"text-align:center;\">\n<p>来源：<a href=\"http://www.mycodes.net/\" target=\"_blank\">源码之家</a></p>\n</div>                         \n                                \n                                </td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\n</body>\n</html>\n```","source":"_posts/网站后台页面左侧收缩折叠效果.md","raw":"title: 网站后台页面左侧收缩折叠效果\ndate: 2015-08-19 23:11:44\npermalink: hexo001\ntags:\n- html\ncategories:\n- html\n\n---\n\n```\n<html>\n<head>\n<meta http-equiv=Content-Type content=\"text/html; charset=utf-8\">\n<title>网站后台页面左侧收缩折叠效果 - 源码之家</title>\n<style type=\"text/css\">\n*{margin:0;padding:0;list-style-type:none; font-size:12px}\n</style>\n<script type=\"text/javascript\">\nfunction switchSysBar(){\n\tif(switchPoint.innerText==3){\n\t\tswitchPoint.innerText=4\n\t\tdocument.all(\"frmtitle\").style.display=\"none\"\n\t}else{\n\t\tswitchPoint.innerText=3\n\t\tdocument.all(\"frmtitle\").style.display=\"\"\n\t}\n}\n\nfunction switchSysBarInfo(){\n\tswitchPoint.innerText=3\n\tdocument.all(\"frmtitle\").style.display=\"\"\n}\n</script>\n</head>\n<body>\n\n\t<table width=\"100%\" height=\"100%\" border=0 cellpadding=\"0\" cellSpacing=0 style=\"background:#000;\">\n\t\t<tr>\n\t\t\t<td height=\"80\" style=\"font-size:28px; color:#FFF;text-align:center;font-weight:800;\">顶部导航</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td height=\"100%\" bgcolor=\"#ffffff\">\n\t\t\t\t<table width=\"100%\" height=\"100%\" cellpadding=\"0\" cellSpacing=0 border=0 borderColor=\"#000\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr> \n\t\t\t\t\t\t\t<td width=\"200\" id=\"frmtitle\" style=\"font-size:28px;text-align:center;font-weight:800;\">左侧列表</td>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<td bgcolor=\"#000\" onClick=\"switchSysBar()\" style=\"height:100%;width:12px;text-align:center;cursor:pointer;\">\n\t\t\t\t\t\t\t\t<span id=\"switchPoint\" title=\"打开/关闭左边导航栏\" style=\"color:#666;cursor:hand;font-family:Webdings;font-size:12px;\">3</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<td style=\"font-size:28px;text-align:center;font-weight:800;\">\n\t\t\t\t\t\t     \n\t\t\t\t\t\t\t\t<h2 style=\"font-size:20px;color:#000;\">右侧正文部分</h2>\n                                \n       <div style=\"text-align:center;\">\n<p>来源：<a href=\"http://www.mycodes.net/\" target=\"_blank\">源码之家</a></p>\n</div>                         \n                                \n                                </td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\n</body>\n</html>\n```","slug":"hexo001","published":1,"updated":"2016-04-22T16:27:06.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cincmjy8i0008ogo0kvcgpg1x"},{"title":"用Hexo与Github打造属于自己的博客","date":"2015-08-02T12:22:44.000Z","_content":"根据转载：{% link 粉丝日志 http://blog.fens.me/hexo-blog-github/ true 粉丝日志 %}修改\n## Hexo介绍\n\n&emsp;&emsp;Hexo是一个简单的、轻量的、基于Node的一个静态博客框架。通过Hexo我们可以快速创建自己的博客，仅需要几条命令就可以完成。发布时，Hexo可以部署在自己的Node服务器上面，也可以部署github上面。对于个人用户来说，部署在github上好处颇多，不仅可以省去服务器的成本，还可以减少各种系统运维的麻烦事(系统管理、备份、网络)。所以，基于github的个人站点，正在开始流行起来….\n&emsp;&emsp;Hexo的官方网站：http://hexo.io/\n## Hexo安装\n### 安装Git\n&emsp;&emsp;自行百度\n### 安装node.js\n&emsp;&emsp;node.js官网https://nodejs.org/\n### 安装Hexo\n&emsp;&emsp;命令行输入*npm install -g hexo*，等待安装完成。\n\n&emsp;&emsp;可能会出现下载不了的问题，可以设置npm国内镜像。镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:\n1. 通过config命令\nnpm config set registry https://registry.npm.taobao.org \nnpm info underscore （如果上面配置正确这个命令会有字符串response）\n2. 命令行指定\nnpm --registry https://registry.npm.taobao.org info underscore \n3. 编辑 ~/.npmrc 加入下面内容\nregistry = https://registry.npm.taobao.org\n搜索镜像: https://npm.taobao.org\n\n&emsp;&emsp;建立或使用镜像,参考: https://github.com/cnpm/cnpmjs.org\n\n&emsp;&emsp;安装成功后在命令行输入hexo可以查看hexo的命令。\n\n## Hexo使用\n&emsp;&emsp;hexo使用超级简单，仅仅几个命令还就可以运行博客的各种操作。下面列出了hexo使用的一个简单流程与命令。\n1. 创建项目主目录\n&emsp;&emsp;可以在电脑上任意创建作为hexo博客项目的文件夹，以后所有的hexo操作都要cd到项目文件夹根目录下运行。\n3. 运行命令hexo init\n&emsp;&emsp;我们看到当前在目录下，出现项目的各个文件夹与文。\n4. 运行命令hexo g\n&emsp;&emsp;在本地目录下，会生成一个public的目录，里面包括了所有静态化的文件。\n&emsp;&emsp;要说明的一点是hexo的静态博客框架，那什么是静态博客呢？静态博客，是只包含html, javascript, css文件的网站，没有动态的脚本。虽然我们是用Node进行的开发，但博客的发布后就与Node无关了。在发布之前，我们要通过一条命令，把所有的文章都做静态化处理，就是生成对应的html, javascript, css，使得所有的文章都是由静态文件组成的。\n5. 运行命令npm install\n&emsp;&emsp;注意不要漏了运行*npm install*命令，否则hexo s命令将报错。\n6. 运行命令hexo s\n&emsp;&emsp;在命令行窗口会提示：Hexo is running iat http://localhost:4000 Press Ctrl+C to stop.。这时我们就可以打开连接访问我们的博客了。\n\n&emsp;&emsp;是不是很简单呢！接下来，我们要对Hexo做更全面的了解，才能做出个性化的博客。\n\n## 部署Hexo到github\n### 配置Git\n&emsp;&emsp;Git是分布式的代码管理工具，远程的代码管理是基于SSH的，所以要使用远程的Git则需要SSH的配置。github的SSH配置如下：\n1. 设置Git的user name和email：\n$ git config --global user.name \"dongxiaoxia\"\n$ git config --global user.email \"dongxiaoxia@example.com\"\n2. 生成SSH密钥过程：\n查看是否已经有了ssh密钥：cd ~/.ssh\n如果没有密钥则不会有此文件夹，有则备份删除\n2. 生成密钥：\n运行命令$ ssh-keygen -t rsa -C “dongxiaoxia@example.com”\n文件夹默认，输入两次密码即可。\nYour identification has been saved in /home/tekkub/.ssh/id_rsa.\nYour public key has been saved in /home/tekkub/.ssh/id_rsa.pub.\nThe key fingerprint is:\n………………\n最后得到了两个文件：id_rsa和id_rsa.pub\n4. 在github上添加ssh密钥：\n这要添加的是“id_rsa.pub”里面的公钥。登录github，打开项目主页，在setting页面上找到SSH KEY设置，然后添加ssh，标题随意。\n5. 接着打开git ，输入命令*$ ssh -T git@github.com*测试连接是否成功。\n\n### 部署到github\n&emsp;&emsp;首先在github上创建一个项目dongxiaoxia.github.io，项目地址为https://github.com/dongxiaoxia.dongxiaoxia.github.io 。这里dongxiaoxia为用户名，项目名称必须为username.github.io.\n&emsp;&emsp;编辑全局配置文件：_config.yml，找到deploy的部分，设置github的项目地址。\n+ deploy:\n  type: git\n  repository: https://github.com/dongxiaoxia/dongxiaoxia.github.io.git\n  branch: master\n  \n&emsp;&emsp;然后通过命令hexo d部署\n&emsp;&emsp;如果提示count not find github，则deploy的type改成git，然后运行命令npm install hexo-deployer-git --save 再 hexo d。\n\n&emsp;&emsp;就这样这个静态的web网站就被部署到了github,点击”Settings”，找到GitHub Pages，提示“Your site is published at http://dongxiaoxia.github.io ”，打开网页http://dongxiaoxia.github.io ，就是我们刚刚发布的站点。\n## 绑定域名\n&emsp;&emsp;首先得有一个自己的域名，如果没有则可以跳过这步。\n1. 在域名解析页面设置主机记录，类型为CNAME，到dongxiaoxia.github.io。\n2. 在项目根目录上新建一个文件CNAME，文件内容为域名如www.dongxiaoxia.xyz。\n3. 然后通过浏览器打开www.dongxiaoxia.xyz就可以直接访问博客站点了。\n\n&emsp;&emsp;到这里为止，博客的搭建与Hexo的基本操作都已经掌握啦！剩下的就是怎么去搭建自己独一无二的博客了。\n\n\n\n\n\n","source":"_posts/用Hexo与GitHub打造属于自己的博客.md","raw":"title: 用Hexo与Github打造属于自己的博客\ndate: 2015-08-02 20:22:44\npermalink: hexo001\ntags:\n- Hexo\ncategories:\n- Hexo\n\n---\n根据转载：{% link 粉丝日志 http://blog.fens.me/hexo-blog-github/ true 粉丝日志 %}修改\n## Hexo介绍\n\n&emsp;&emsp;Hexo是一个简单的、轻量的、基于Node的一个静态博客框架。通过Hexo我们可以快速创建自己的博客，仅需要几条命令就可以完成。发布时，Hexo可以部署在自己的Node服务器上面，也可以部署github上面。对于个人用户来说，部署在github上好处颇多，不仅可以省去服务器的成本，还可以减少各种系统运维的麻烦事(系统管理、备份、网络)。所以，基于github的个人站点，正在开始流行起来….\n&emsp;&emsp;Hexo的官方网站：http://hexo.io/\n## Hexo安装\n### 安装Git\n&emsp;&emsp;自行百度\n### 安装node.js\n&emsp;&emsp;node.js官网https://nodejs.org/\n### 安装Hexo\n&emsp;&emsp;命令行输入*npm install -g hexo*，等待安装完成。\n\n&emsp;&emsp;可能会出现下载不了的问题，可以设置npm国内镜像。镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:\n1. 通过config命令\nnpm config set registry https://registry.npm.taobao.org \nnpm info underscore （如果上面配置正确这个命令会有字符串response）\n2. 命令行指定\nnpm --registry https://registry.npm.taobao.org info underscore \n3. 编辑 ~/.npmrc 加入下面内容\nregistry = https://registry.npm.taobao.org\n搜索镜像: https://npm.taobao.org\n\n&emsp;&emsp;建立或使用镜像,参考: https://github.com/cnpm/cnpmjs.org\n\n&emsp;&emsp;安装成功后在命令行输入hexo可以查看hexo的命令。\n\n## Hexo使用\n&emsp;&emsp;hexo使用超级简单，仅仅几个命令还就可以运行博客的各种操作。下面列出了hexo使用的一个简单流程与命令。\n1. 创建项目主目录\n&emsp;&emsp;可以在电脑上任意创建作为hexo博客项目的文件夹，以后所有的hexo操作都要cd到项目文件夹根目录下运行。\n3. 运行命令hexo init\n&emsp;&emsp;我们看到当前在目录下，出现项目的各个文件夹与文。\n4. 运行命令hexo g\n&emsp;&emsp;在本地目录下，会生成一个public的目录，里面包括了所有静态化的文件。\n&emsp;&emsp;要说明的一点是hexo的静态博客框架，那什么是静态博客呢？静态博客，是只包含html, javascript, css文件的网站，没有动态的脚本。虽然我们是用Node进行的开发，但博客的发布后就与Node无关了。在发布之前，我们要通过一条命令，把所有的文章都做静态化处理，就是生成对应的html, javascript, css，使得所有的文章都是由静态文件组成的。\n5. 运行命令npm install\n&emsp;&emsp;注意不要漏了运行*npm install*命令，否则hexo s命令将报错。\n6. 运行命令hexo s\n&emsp;&emsp;在命令行窗口会提示：Hexo is running iat http://localhost:4000 Press Ctrl+C to stop.。这时我们就可以打开连接访问我们的博客了。\n\n&emsp;&emsp;是不是很简单呢！接下来，我们要对Hexo做更全面的了解，才能做出个性化的博客。\n\n## 部署Hexo到github\n### 配置Git\n&emsp;&emsp;Git是分布式的代码管理工具，远程的代码管理是基于SSH的，所以要使用远程的Git则需要SSH的配置。github的SSH配置如下：\n1. 设置Git的user name和email：\n$ git config --global user.name \"dongxiaoxia\"\n$ git config --global user.email \"dongxiaoxia@example.com\"\n2. 生成SSH密钥过程：\n查看是否已经有了ssh密钥：cd ~/.ssh\n如果没有密钥则不会有此文件夹，有则备份删除\n2. 生成密钥：\n运行命令$ ssh-keygen -t rsa -C “dongxiaoxia@example.com”\n文件夹默认，输入两次密码即可。\nYour identification has been saved in /home/tekkub/.ssh/id_rsa.\nYour public key has been saved in /home/tekkub/.ssh/id_rsa.pub.\nThe key fingerprint is:\n………………\n最后得到了两个文件：id_rsa和id_rsa.pub\n4. 在github上添加ssh密钥：\n这要添加的是“id_rsa.pub”里面的公钥。登录github，打开项目主页，在setting页面上找到SSH KEY设置，然后添加ssh，标题随意。\n5. 接着打开git ，输入命令*$ ssh -T git@github.com*测试连接是否成功。\n\n### 部署到github\n&emsp;&emsp;首先在github上创建一个项目dongxiaoxia.github.io，项目地址为https://github.com/dongxiaoxia.dongxiaoxia.github.io 。这里dongxiaoxia为用户名，项目名称必须为username.github.io.\n&emsp;&emsp;编辑全局配置文件：_config.yml，找到deploy的部分，设置github的项目地址。\n+ deploy:\n  type: git\n  repository: https://github.com/dongxiaoxia/dongxiaoxia.github.io.git\n  branch: master\n  \n&emsp;&emsp;然后通过命令hexo d部署\n&emsp;&emsp;如果提示count not find github，则deploy的type改成git，然后运行命令npm install hexo-deployer-git --save 再 hexo d。\n\n&emsp;&emsp;就这样这个静态的web网站就被部署到了github,点击”Settings”，找到GitHub Pages，提示“Your site is published at http://dongxiaoxia.github.io ”，打开网页http://dongxiaoxia.github.io ，就是我们刚刚发布的站点。\n## 绑定域名\n&emsp;&emsp;首先得有一个自己的域名，如果没有则可以跳过这步。\n1. 在域名解析页面设置主机记录，类型为CNAME，到dongxiaoxia.github.io。\n2. 在项目根目录上新建一个文件CNAME，文件内容为域名如www.dongxiaoxia.xyz。\n3. 然后通过浏览器打开www.dongxiaoxia.xyz就可以直接访问博客站点了。\n\n&emsp;&emsp;到这里为止，博客的搭建与Hexo的基本操作都已经掌握啦！剩下的就是怎么去搭建自己独一无二的博客了。\n\n\n\n\n\n","slug":"hexo001","published":1,"updated":"2016-04-22T16:27:06.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cincmjy8i000dogo0dh0tnpgf"},{"title":"Markdown写作常用语法","date":"2015-08-14T16:04:12.000Z","_content":"这是**新的开始**，我用hexo创建了第一篇文章。\n\n\n# 标题\n+ 使用 # 表示标题，一级标题使用一个 # ，二级标题使用两个 ## ，以此类推，共有六级标题。\n+ 使用 ===== 表示高阶标题，使用 --------- 表示次阶标题。\n\n  示例：\n<pre><code># 这是一级标题  \n## 这是二级标题  \n### 这是三级标题  \n###### 这是六级标题  \n这是一级标题  \n========  \n这是二级标题  \n--------------</code></pre>\n\n  页面显示：\n> # 这是一级标题\n## 这是二级标题\n### 这是三级标题\n###### 这是六级标题\n这是一级标题\n========\n这是二级标题\n\n  注意：\n\t+ #和标题之间加一个空格。\n\t+ ==== 和 ---- 表示标题时，大于等于2个都可以表示。\n\n\n\n\n\n------------------------------\n\n------------------------------\n\n------------------------------\n\n------------------------------\n\n\n\n\n\n\n\n\n\n\n\n\n# 引用\n    使用 > 表示引用， >> 表示引用里面再套一层引用，依次类推。\n**示例**：\n<pre><code> > 这是一级引用\n>> 这是二级引用\n>>> 这是三级引用\n\n>这是一级引用</code></pre>\n\t\n**页面显示**：\n> 这是一级引用\n>> 这是二级引用\n>>> 这是三级引用\n\n>这是一级引用\n\n**注意**：\n+ 如果 > 和 >> 嵌套使用的话，从 >> 退到 > 时，必须之间要加一个空格或者 > 作为过渡，否则默认为下一行和上一行是同一级别的引用。\n+ 引用标记里可以使用其他标记，如：有序列表或无序列表标记，代码标记等。\n------------------------------\n# 代码块\n　　使用\\`\\`\\`表示代码块。\n\n　　**示例**：\n　　\\`\\`\\`javascript\n　　var canvas = document.getElementById(\"canvas\");\n　　var context = canvas.getContext(\"2d\");\n　　\\`\\`\\`</code></pre>\n\n　　**页面显示**：\n　　```javascript\n　　var canvas = document.getElementById(\"canvas\");\n　　var context = canvas.getContext(\"2d\");\n　　```\n\n　　**示例**：\n　　　　这是\\`javascript\\`代码\n　　**页面显示**：\n　　　　这是`javascript`代码\n\n　　**注意**：\n+ \\`这个符号是在 Esc 键下面，切换到英文下即可。\n+ \\`\\`\\`后面的 javascript 表示此段代码为javascript代码，Markdown会自行使用javascript代码颜色渲染。\n\n## **Code Block**\n在文章中插入代码。\n  \n### **快捷方式**：code\n\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n### **普通的代码块**\n{% codeblock %}\n{% codeblock %}\n{% endcodeblock %}\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n{% codeblock %}\n{% endcodeblock %}\n{% endcodeblock %}\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n指定语言\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n附加说明\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\nArray.map\narray.map(callback[, thisArg])\n附加说明和网址\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n_.compactUnderscore.js\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n\n\n------------------------------\n# 列表\n　　使用`1. 2. 3. `表示有序列表，使用`*`或`-`或`+`表示无序列表。\n　　**示例1**：\n　　有序列表：\n\n　　1\\. 第一点\n　　2\\. 第二点\n　　4\\. 第三点\n\n　　**页面显示**：\n1. 第一点\n2. 第二点\n4. 第三点\n\n　　**示例2**：\n　　无序列表：\n\\+ 呵呵\n  　　\\* 嘉嘉\n  　　\\- 嘻嘻\n 　　 \\- 吼吼\n   　　　　 \\- 嘎嘎\n   　　　　 \\+ 桀桀\n\\* 哈哈\n　　**页面显示**：\n+ 呵呵\n  * 嘉嘉\n  - 嘻嘻\n  - 吼吼\n    - 嘎嘎\n    + 桀桀\n* 哈哈\n\n　　**注意**：\n+ 无序列表或有序列表标记和后面的文字之间要有一个空格隔开。\n+ 有序列表标记不是按照你写的数字进行显示的，而是根据当前有序列表标记所在位置显示的，如示例1所示。\n+ 无序列表的项目符号是按照实心圆、空心圆、实心方格的层级关系递进的，如例2所示。通常情况下，同一层级使用同一种标记表示，便于自己查看和管理。\n------------------------------\n# 粗体和斜体\n　　使用 `**` 或者 `__` 表示粗体。\n　　使用 `*` 或者 `_` 表示斜体。\n\n　　**示例**：\n　　　　\\*\\*粗体1\\*\\*　　\\_\\_粗体2\\_\\_\n　　　　\\*斜体1\\*　　\\_斜体2\\_\n\t\n　　**页面显示**：\n　　　　**粗体1**　　__粗体2__\n　　　　*斜体1*　　_斜体2_\n\n　　**注意**：\n　　前后的 * 或 _ 与要 加粗或倾斜 的字体之间不能有空格。\n\n------------------------------\n# 表格\n+ ------: 为右对齐。\n+ :------ 为左对齐。\n+ :------: 为居中对齐。\n+ ------- 为使用默认居中对齐。\n\n　　**示例**：\n\n\n\n\n\n```\n|         序号    |    交易名    |    交易说明    |    备注    |\n|    ------: |    :-------:    |    :---------   |    ------    |\n|    1    |    prfcfg    |    菜单配置    |    可以通过此交易查询到所有交易码和菜单的对应关系    |\n|    2    |    gentmo    |    编译所有交易    |    |\n|    100000    |    sysdba    |    数据库表模型汇总    |    |\n```\t\n　　**页面显示**：\n\n\n|         序号    |    交易名    |    交易说明    |    备注    |\n|------:|:-------:|:---------|------|\n|    1    |    prfcfg    |    菜单配置    |    可以通过此交易查询到所有交易码和菜单的对应关系    |\n|    2    |    gentmo    |    编译所有交易    |    |\n|    100000    |    sysdba    |    数据库表模型汇总    |    |\n\n　　**注意**：\n+ 每个Markdown解析器都不一样，可能左右居中对齐方式的表示方式不一样。\n+ 可以使用`<table>`标签\n\n---\n# 分割线\n　　使用 `---` 或者 `***` 或者 `* * *` 表示水平分割线。\n　　**示例**：\n\n\n\\-\\-\\-\n 　　\n\n\\*\\*\\*\n 　　\n\n\\* \\* \\*\n\n　　**页面显示**：\n\n\n\n---\n 　　\n\n***\n 　　\n\n* * *\n　　**注意**：\n+ 只要 * 或者 - 大于等于三个就可组成一条平行线。\n+ 使用 --- 作为水平分割线时，要在它的前后都空一行，防止 --- 被当成标题标记的表示方式。\n* * *\n# 链接\n　　使用 `[](link \"Optional title\")` 表示行内链接。其中：\n* [] 内的内容为要添加链接的文字。\n* link 为链接地址。\n* Optional title 为显示标题。显示效果为在你将鼠标放到链接上后，会显示一个小框提示，提示的内容就是 Optional title 里的内容。\n\n　　**示例**：\n\n　　`这是我的博客地址：[Hello World](http://www.dongxiaoxia.xyz \"Hello World\" )`\n\n　　`这是我的博客地址：[Hello World][1]`\n\n　　`[1]:http://www.dongxiaoxia.xyz \"Hello World\" `\n\n　　**页面显示**：\n\n　　这是我的博客地址：[Hello World](http://www.dongxiaoxia.xyz \"Hello World\" )\n\n　　这是我的博客地址：[Hello World][1]\n[1]:http://www.dongxiaoxia.xyz \"Hello World\" \n　　**注意**：\n+ 参考式链接和行内链接的效果是一样的，各有利弊。行内连接清晰易懂，可以清楚的知道链接的地址，但是不便于多次利用。参考式链接可以重复使用，但不能即刻知道链接的地址。\n+ 是在本窗口打开链接还是新建一个窗口还待研究。\n+ Markdown是支持HTML语法的，所以可以直接使用`<a>`标签,例如`<a href=\"http://www.dongxiaoxia.xyz\">Hello World</a>`，显示<a href=\"http://www.dongxiaoxia.xyz\">Hello World</a>。\n+ 如果想直接显示链接地址，可以使用`<http://www.dongxiaoxia.xyz>`写法，显示<http://www.dongxiaoxia.xyz>\n+ 还可以连`<>`都省略，直接使用http://www.dongxiaoxia.xyz 写法，显示http://www.dongxiaoxia.xyz ，注意链接后面接一个空格。\n------------------------------\n# 导入图片\n　　使用 `![Alt text](/path/to/img.jpg \"Optional title\")` 导入图片。其中：\n+ Alt text 为如果图片无法显示时显示的文字；\n+ /path/to/img.jpg 为图片所在路径；\n+ Optional title 为显示标题。显示效果为在你将鼠标放到图片上后，会显示一个小框提示，提示的内容就是 Optional title 里的内容。\n\n　　**示例**：\n\n![Markdown](/img/touxiang.jpg \"这是我的头像，帅不帅\")\n\n　　**注意**：\n+ 导入的图片路径可以使用绝对路径也可以使用相对路径，建议使用相对路径。\n+ 我通常的做法是Markdown文档的同级目录下建立一个pictures文件夹，里面放置所有所需的图片，如果图片多的话，你也可以在pictures文件夹里建立子文件夹归类\n***\n# 反斜杠\n　　使用` \\ `表示反斜杠。在你不想显示Markdown标记时可以使用反斜杠。\n　　**示例**：\n　　　　\\\\\\*这里不会显示斜体\\\\\\*\n\n　　**页面显示**：\n　　　　\\*这里不会显示斜体\\*\n***\n# 空格\n　　Markdown语法会忽略首行开头的空格，如果要体现出首行开头空两个的效果，可以使用**全角符号下的空格**，windows下使用`shift+空格`切换。\n***\n# 删除线\n　　使用`~~`表示删除线。\n　　**示例**：\n　　　　\\~\\~这是一条删除线\\~\\~\n\n　　**页面显示**：\n　　　　~~这是一条删除线~~\n***\n# 页内跳转\n　　使用html代码实现页内跳转。在要跳转到的位置定义个锚`<span id = \"jump\">hehe</span>`，然后使用`[你好](#jump)`将`你好`设置为一单击即跳转到`hehe`所在位置的效果。\n　　**示例**：\n　　　　`[你好](#jump)`\n　　　　`<span id = \"jump\">hehe</span>`\n\n　　**页面显示**：\n　　　　[你好](#jump)\n　　　　<span id = \"jump\">hehe</span>\n***\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{% post_path slug %}\nhttp://www.cnblogs.com/crazyant007/p/4220066.html?utm_source=tuicool\n{% post_link slug [title] %}\n\n\n***\n参考http://www.cnblogs.com/crazyant007/p/4220066.html?utm_source=tuicool 改写","source":"_posts/新的开始.md","raw":"title: Markdown写作常用语法\ndate: 2015-08-15 00:04:12\npermalink: hexo-writing\ntags:\n- hexo\ncategories:\n- hexo\n---\n这是**新的开始**，我用hexo创建了第一篇文章。\n\n\n# 标题\n+ 使用 # 表示标题，一级标题使用一个 # ，二级标题使用两个 ## ，以此类推，共有六级标题。\n+ 使用 ===== 表示高阶标题，使用 --------- 表示次阶标题。\n\n  示例：\n<pre><code># 这是一级标题  \n## 这是二级标题  \n### 这是三级标题  \n###### 这是六级标题  \n这是一级标题  \n========  \n这是二级标题  \n--------------</code></pre>\n\n  页面显示：\n> # 这是一级标题\n## 这是二级标题\n### 这是三级标题\n###### 这是六级标题\n这是一级标题\n========\n这是二级标题\n\n  注意：\n\t+ #和标题之间加一个空格。\n\t+ ==== 和 ---- 表示标题时，大于等于2个都可以表示。\n\n\n\n\n\n------------------------------\n\n------------------------------\n\n------------------------------\n\n------------------------------\n\n\n\n\n\n\n\n\n\n\n\n\n# 引用\n    使用 > 表示引用， >> 表示引用里面再套一层引用，依次类推。\n**示例**：\n<pre><code> > 这是一级引用\n>> 这是二级引用\n>>> 这是三级引用\n\n>这是一级引用</code></pre>\n\t\n**页面显示**：\n> 这是一级引用\n>> 这是二级引用\n>>> 这是三级引用\n\n>这是一级引用\n\n**注意**：\n+ 如果 > 和 >> 嵌套使用的话，从 >> 退到 > 时，必须之间要加一个空格或者 > 作为过渡，否则默认为下一行和上一行是同一级别的引用。\n+ 引用标记里可以使用其他标记，如：有序列表或无序列表标记，代码标记等。\n------------------------------\n# 代码块\n　　使用\\`\\`\\`表示代码块。\n\n　　**示例**：\n　　\\`\\`\\`javascript\n　　var canvas = document.getElementById(\"canvas\");\n　　var context = canvas.getContext(\"2d\");\n　　\\`\\`\\`</code></pre>\n\n　　**页面显示**：\n　　```javascript\n　　var canvas = document.getElementById(\"canvas\");\n　　var context = canvas.getContext(\"2d\");\n　　```\n\n　　**示例**：\n　　　　这是\\`javascript\\`代码\n　　**页面显示**：\n　　　　这是`javascript`代码\n\n　　**注意**：\n+ \\`这个符号是在 Esc 键下面，切换到英文下即可。\n+ \\`\\`\\`后面的 javascript 表示此段代码为javascript代码，Markdown会自行使用javascript代码颜色渲染。\n\n## **Code Block**\n在文章中插入代码。\n  \n### **快捷方式**：code\n\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n### **普通的代码块**\n{% codeblock %}\n{% codeblock %}\n{% endcodeblock %}\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n{% codeblock %}\n{% endcodeblock %}\n{% endcodeblock %}\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n指定语言\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n附加说明\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\nArray.map\narray.map(callback[, thisArg])\n附加说明和网址\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n_.compactUnderscore.js\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n\n\n------------------------------\n# 列表\n　　使用`1. 2. 3. `表示有序列表，使用`*`或`-`或`+`表示无序列表。\n　　**示例1**：\n　　有序列表：\n\n　　1\\. 第一点\n　　2\\. 第二点\n　　4\\. 第三点\n\n　　**页面显示**：\n1. 第一点\n2. 第二点\n4. 第三点\n\n　　**示例2**：\n　　无序列表：\n\\+ 呵呵\n  　　\\* 嘉嘉\n  　　\\- 嘻嘻\n 　　 \\- 吼吼\n   　　　　 \\- 嘎嘎\n   　　　　 \\+ 桀桀\n\\* 哈哈\n　　**页面显示**：\n+ 呵呵\n  * 嘉嘉\n  - 嘻嘻\n  - 吼吼\n    - 嘎嘎\n    + 桀桀\n* 哈哈\n\n　　**注意**：\n+ 无序列表或有序列表标记和后面的文字之间要有一个空格隔开。\n+ 有序列表标记不是按照你写的数字进行显示的，而是根据当前有序列表标记所在位置显示的，如示例1所示。\n+ 无序列表的项目符号是按照实心圆、空心圆、实心方格的层级关系递进的，如例2所示。通常情况下，同一层级使用同一种标记表示，便于自己查看和管理。\n------------------------------\n# 粗体和斜体\n　　使用 `**` 或者 `__` 表示粗体。\n　　使用 `*` 或者 `_` 表示斜体。\n\n　　**示例**：\n　　　　\\*\\*粗体1\\*\\*　　\\_\\_粗体2\\_\\_\n　　　　\\*斜体1\\*　　\\_斜体2\\_\n\t\n　　**页面显示**：\n　　　　**粗体1**　　__粗体2__\n　　　　*斜体1*　　_斜体2_\n\n　　**注意**：\n　　前后的 * 或 _ 与要 加粗或倾斜 的字体之间不能有空格。\n\n------------------------------\n# 表格\n+ ------: 为右对齐。\n+ :------ 为左对齐。\n+ :------: 为居中对齐。\n+ ------- 为使用默认居中对齐。\n\n　　**示例**：\n\n\n\n\n\n```\n|         序号    |    交易名    |    交易说明    |    备注    |\n|    ------: |    :-------:    |    :---------   |    ------    |\n|    1    |    prfcfg    |    菜单配置    |    可以通过此交易查询到所有交易码和菜单的对应关系    |\n|    2    |    gentmo    |    编译所有交易    |    |\n|    100000    |    sysdba    |    数据库表模型汇总    |    |\n```\t\n　　**页面显示**：\n\n\n|         序号    |    交易名    |    交易说明    |    备注    |\n|------:|:-------:|:---------|------|\n|    1    |    prfcfg    |    菜单配置    |    可以通过此交易查询到所有交易码和菜单的对应关系    |\n|    2    |    gentmo    |    编译所有交易    |    |\n|    100000    |    sysdba    |    数据库表模型汇总    |    |\n\n　　**注意**：\n+ 每个Markdown解析器都不一样，可能左右居中对齐方式的表示方式不一样。\n+ 可以使用`<table>`标签\n\n---\n# 分割线\n　　使用 `---` 或者 `***` 或者 `* * *` 表示水平分割线。\n　　**示例**：\n\n\n\\-\\-\\-\n 　　\n\n\\*\\*\\*\n 　　\n\n\\* \\* \\*\n\n　　**页面显示**：\n\n\n\n---\n 　　\n\n***\n 　　\n\n* * *\n　　**注意**：\n+ 只要 * 或者 - 大于等于三个就可组成一条平行线。\n+ 使用 --- 作为水平分割线时，要在它的前后都空一行，防止 --- 被当成标题标记的表示方式。\n* * *\n# 链接\n　　使用 `[](link \"Optional title\")` 表示行内链接。其中：\n* [] 内的内容为要添加链接的文字。\n* link 为链接地址。\n* Optional title 为显示标题。显示效果为在你将鼠标放到链接上后，会显示一个小框提示，提示的内容就是 Optional title 里的内容。\n\n　　**示例**：\n\n　　`这是我的博客地址：[Hello World](http://www.dongxiaoxia.xyz \"Hello World\" )`\n\n　　`这是我的博客地址：[Hello World][1]`\n\n　　`[1]:http://www.dongxiaoxia.xyz \"Hello World\" `\n\n　　**页面显示**：\n\n　　这是我的博客地址：[Hello World](http://www.dongxiaoxia.xyz \"Hello World\" )\n\n　　这是我的博客地址：[Hello World][1]\n[1]:http://www.dongxiaoxia.xyz \"Hello World\" \n　　**注意**：\n+ 参考式链接和行内链接的效果是一样的，各有利弊。行内连接清晰易懂，可以清楚的知道链接的地址，但是不便于多次利用。参考式链接可以重复使用，但不能即刻知道链接的地址。\n+ 是在本窗口打开链接还是新建一个窗口还待研究。\n+ Markdown是支持HTML语法的，所以可以直接使用`<a>`标签,例如`<a href=\"http://www.dongxiaoxia.xyz\">Hello World</a>`，显示<a href=\"http://www.dongxiaoxia.xyz\">Hello World</a>。\n+ 如果想直接显示链接地址，可以使用`<http://www.dongxiaoxia.xyz>`写法，显示<http://www.dongxiaoxia.xyz>\n+ 还可以连`<>`都省略，直接使用http://www.dongxiaoxia.xyz 写法，显示http://www.dongxiaoxia.xyz ，注意链接后面接一个空格。\n------------------------------\n# 导入图片\n　　使用 `![Alt text](/path/to/img.jpg \"Optional title\")` 导入图片。其中：\n+ Alt text 为如果图片无法显示时显示的文字；\n+ /path/to/img.jpg 为图片所在路径；\n+ Optional title 为显示标题。显示效果为在你将鼠标放到图片上后，会显示一个小框提示，提示的内容就是 Optional title 里的内容。\n\n　　**示例**：\n\n![Markdown](/img/touxiang.jpg \"这是我的头像，帅不帅\")\n\n　　**注意**：\n+ 导入的图片路径可以使用绝对路径也可以使用相对路径，建议使用相对路径。\n+ 我通常的做法是Markdown文档的同级目录下建立一个pictures文件夹，里面放置所有所需的图片，如果图片多的话，你也可以在pictures文件夹里建立子文件夹归类\n***\n# 反斜杠\n　　使用` \\ `表示反斜杠。在你不想显示Markdown标记时可以使用反斜杠。\n　　**示例**：\n　　　　\\\\\\*这里不会显示斜体\\\\\\*\n\n　　**页面显示**：\n　　　　\\*这里不会显示斜体\\*\n***\n# 空格\n　　Markdown语法会忽略首行开头的空格，如果要体现出首行开头空两个的效果，可以使用**全角符号下的空格**，windows下使用`shift+空格`切换。\n***\n# 删除线\n　　使用`~~`表示删除线。\n　　**示例**：\n　　　　\\~\\~这是一条删除线\\~\\~\n\n　　**页面显示**：\n　　　　~~这是一条删除线~~\n***\n# 页内跳转\n　　使用html代码实现页内跳转。在要跳转到的位置定义个锚`<span id = \"jump\">hehe</span>`，然后使用`[你好](#jump)`将`你好`设置为一单击即跳转到`hehe`所在位置的效果。\n　　**示例**：\n　　　　`[你好](#jump)`\n　　　　`<span id = \"jump\">hehe</span>`\n\n　　**页面显示**：\n　　　　[你好](#jump)\n　　　　<span id = \"jump\">hehe</span>\n***\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{% post_path slug %}\nhttp://www.cnblogs.com/crazyant007/p/4220066.html?utm_source=tuicool\n{% post_link slug [title] %}\n\n\n***\n参考http://www.cnblogs.com/crazyant007/p/4220066.html?utm_source=tuicool 改写","slug":"hexo-writing","published":1,"updated":"2016-04-22T16:27:06.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cincmjy8y000iogo02bhpsqsy"},{"title":"如何成为一个牛掰的Java大神","date":"2015-12-24T14:17:44.000Z","_content":"\n>来自：HollisChuang's Blog\n\n>链接：http://www.hollischuang.com/archives/489\n\n# 一、基础篇\n\n## 1.1 JVM\n\n### 1.1.1. Java内存模型，Java内存管理，Java堆和栈，垃圾回收\n>http://www.jcp.org/en/jsr/detail?id=133\n\n>http://ifeve.com/jmm-faq/\n\n### 1.1.2. 了解JVM各种参数及调优\n\n### 1.1.3. 学习使用Java工具\n>jps, jstack, jmap, jconsole, jinfo, jhat, javap, …\n\n>http://kenai.com/projects/btrace\n\n>http://www.crashub.org/\n\n>https://github.com/taobao/TProfiler\n\n>https://github.com/CSUG/HouseMD\n\n>http://wiki.cyclopsgroup.org/jmxterm\n\n>https://github.com/jlusdy/TBJMap\n\n### 1.1.4. 学习Java诊断工具\n>http://www.eclipse.org/mat/\n\n>http://visualvm.java.net/oqlhelp.html\n\n### 1.1.5. 自己编写各种outofmemory，stackoverflow程序\n>HeapOutOfMemory\n\n>Young OutOfMemory\n\n>MethodArea OutOfMemory\n\n>ConstantPool OutOfMemory\n\n>DirectMemory OutOfMemory\n\n>Stack OutOfMemory\n\n>Stack OverFlow\n\n### 1.1.6. 使用工具尝试解决以下问题，并写下总结\n>当一个Java程序响应很慢时如何查找问题\n\n>当一个Java程序频繁FullGC时如何解决问题，如何查看垃圾回收日志\n\n>当一个Java应用发生OutOfMemory时该如何解决，年轻代、年老代、永久代解决办法不同，导致原因也不同\n\n### 1.1.7. 参考资料\n>http://docs.oracle.com/javase/specs/jvms/se7/html/\n\n>http://www.cs.umd.edu/~pugh/java/memoryModel/\n\n>http://gee.cs.oswego.edu/dl/jmm/cookbook.html\n\n## 1.2. Java基础知识\n\n### 1.2.1. 阅读源代码\n>java.lang.String\n\n>java.lang.Integer\n\n>java.lang.Long\n\n>java.lang.Enum\n\n>java.math.BigDecimal\n\n>java.lang.ThreadLocal\n\n>java.lang.ClassLoader & java.net.URLClassLoader\n\n>java.util.ArrayList & java.util.LinkedList\n\n>java.util.HashMap & java.util.LinkedHashMap & java.util.TreeMap\n\n>java.util.HashSet & java.util.LinkedHashSet & java.util.TreeSet\n\n### 1.2.2. 熟悉Java中各种变量类型\n### 1.2.3. 熟悉Java String的使用，熟悉String的各种函数\n### 1.2.4. 熟悉Java中各种关键字\n### 1.2.5. 学会使用List，Map，Stack，Queue，Set\n>上述数据结构的遍历\n\n>上述数据结构的使用场景\n\n>Java实现对Array/List排序\n\n>java.uti.Arrays.sort()\n\n>java.util.Collections.sort()\n\n>Java实现对List去重\n\n>Java实现对List去重，并且需要保留数据原始的出现顺序\n\n>Java实现最近最少使用cache，用LinkedHashMap\n\n### 1.2.6. Java IO&Java NIO，并学会使用\n>java.io.*\n\n>java.nio.*\n\n>nio和reactor设计模式\n\n>文件编码，字符集\n\n### 1.2.7. Java反射与javassist\n>反射与工厂模式\n\n>java.lang.reflect.*\n\n### 1.2.8. Java序列化\n>java.io. Serializable\n\n>什么是序列化，为什么序列化\n\n>序列化与单例模式\n\n>google序列化protobuf\n\n### 1.2.9. 虚引用，弱引用，软引用\n>java.lang.ref.*\n\n>实验这些引用的回收\n\n### 1.2.10. 熟悉Java系统属性\n>java.util.Properties\n\n### 1.2.11. 熟悉Annotation用法\n>java.lang.annotation.*\n\n### 1.2.12. JMS\n>javax.jms.*\n\n### 1.2.13. JMX\n>java.lang.management.*\n\n>javax.management.*\n\n### 1.2.14. 泛型和继承，泛型和擦除\n### 1.2.15. 自动拆箱装箱与字节码\n### 1.2.16. 实现Callback\n### 1.2.17. java.lang.Void类使用\n### 1.2.18. Java Agent，premain函数\n>java.lang.instrument\n\n### 1.2.19. 单元测试\n>Junit，http://junit.org/\n\n>Jmockit，https://code.google.com/p/jmockit/\n\n>djUnit，http://works.dgic.co.jp/djunit/\n\n### 1.2.20. Java实现通过正则表达式提取一段文本中的电子邮件，并将@替换为#输出\n>java.lang.util.regex.*\n\n### 1.2.21. 学习使用常用的Java工具库\n>commons.lang, commons.*…\n\n>guava-libraries\n\n>netty\n\n### 1.2.22. 什么是API&SPI\n>http://en.wikipedia.org/wiki/Application_programming_interface\n\n>http://en.wikipedia.org/wiki/Service_provider_interface\n\n### 1.2.23. 参考资料\n>JDK src.zip 源代码\n\n>http://openjdk.java.net/\n\n>http://commons.apache.org/\n\n>https://code.google.com/p/guava-libraries/\n\n>http://netty.io/\n\n>http://stackoverflow.com/questions/2954372/difference-between-spi-and-api\n\n>http://stackoverflow.com/questions/11404230/how-to-implement-the-api-spi-pattern-in-java\n\n## 1.3. Java并发编程\n\n### 1.3.1. 阅读源代码，并学会使用\n\n>java.lang.Thread\n\n>java.lang.Runnable\n\n>java.util.concurrent.Callable\n\n>java.util.concurrent.locks.ReentrantLock\n\n>java.util.concurrent.locks.ReentrantReadWriteLock\n\n>java.util.concurrent.atomic.Atomic*\n\n>java.util.concurrent.Semaphore\n\n>java.util.concurrent.CountDownLatch\n\n>java.util.concurrent.CyclicBarrier\n\n>java.util.concurrent.ConcurrentHashMap\n\n>java.util.concurrent.Executors\n\n### 1.3.2. 学习使用线程池，自己设计线程池需要注意什么\n### 1.3.3. 锁\n>什么是锁，锁的种类有哪些，每种锁有什么特点，适用场景是什么\n\n>在并发编程中锁的意义是什么\n\n### 1.3.4. synchronized的作用是什么，synchronized和lock\n### 1.3.5. sleep和wait\n### 1.3.6. wait和notify\n### 1.3.7. 写一个死锁的程序\n### 1.3.8. 什么是守护线程，守护线程和非守护线程的区别以及用法\n### 1.3.9. volatile关键字的理解\n>C++ volatile关键字和Java volatile关键字\n\n>happens-before语义\n编译器指令重排和CPU指令重排\n>http://en.wikipedia.org/wiki/Memory_ordering\n\n>http://en.wikipedia.org/wiki/Volatile_variable\n\n>http://preshing.com/20130702/the-happens-before-relation/\n\n### 1.3.10. 以下代码是不是线程安全？为什么？如果为count加上volatile修饰是否能够做到线程安全？你觉得该怎么做是线程安全的？\n>```java\npublic class Sample {\nprivate static int count = 0;\npublic static void increment() {\ncount++;\n}\n}\n```\n\n\n### 1.3.11. 解释一下下面两段代码的差别\n>代码1\n>```java\n>public class Sample {\nprivate static int count = 0;\nsynchronized public static void increment() {\ncount++;\n}\n}\n>```\n代码2\n>```java\npublic class Sample {\nprivate static AtomicInteger count = new AtomicInteger(0);\npublic static void increment() {\ncount.getAndIncrement();\n}\n}\n>```\n\n### 1.3.12. 参考资料\n>http://book.douban.com/subject/10484692/\n\n>http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html\n# 二、 进阶篇\n\n## 2.1. Java底层知识\n\n### 2.1.1. 学习了解字节码、class文件格式\n>http://en.wikipedia.org/wiki/Java_class_file\n\n>http://en.wikipedia.org/wiki/Java_bytecode\n\n>http://en.wikipedia.org/wiki/Java_bytecode_instruction_listings\n\n>http://www.csg.ci.i.u-tokyo.ac.jp/~chiba/javassist/\n\n>http://asm.ow2.org/\n\n### 2.1.2. 写一个程序要求实现javap的功能（手工完成，不借助ASM等工具）\n>如Java源代码：\n>```java\n>public static void main(String[] args) {\nint i = 0;\ni += 1;\ni *= 1;\nSystem.out.println(i);\n}\n>```\n编译后读取class文件输出以下代码：\n>```java\npublic static void main(java.lang.String[]);\nCode:\nStack=2, Locals=2, Args_size=1\n0: iconst_0\n1: istore_1\n2: iinc 1, 1\n5: iload_1\n6: iconst_1\n7: imul\n8: istore_1\n9: getstatic #2; //Field java/lang/System.out:Ljava/io/PrintStream;\n12: iload_1\n13: invokevirtual #3; //Method java/io/PrintStream.println:(I)V\n16: return\nLineNumberTable:\nline 4: 0\nline 5: 2\nline 6: 5\nline 7: 9\nline 8: 16\n>```\n\n### 2.1.3. CPU缓存，L1，L2，L3和伪共享\n>http://duartes.org/gustavo/blog/post/intel-cpu-caches/\n\n>http://mechanical-sympathy.blogspot.com/2011/07/false-sharing.html\n### 2.1.4. 什么是尾递归\n### 2.1.5. 熟悉位运算\n>用位运算实现加、减、乘、除、取余\n### 2.1.6. 参考资料\n>http://book.douban.com/subject/1138768/\n\n>http://book.douban.com/subject/6522893/\n\n>http://en.wikipedia.org/wiki/Java_class_file\n\n>http://en.wikipedia.org/wiki/Java_bytecode\n\n>http://en.wikipedia.org/wiki/Java_bytecode_instruction_listings\n## 2.2. 设计模式\n\n### 2.2.1. 实现AOP\n>#### CGLIB和InvocationHandler的区别\n>>http://cglib.sourceforge.net/\n\n>#### 动态代理模式\n>#### Javassist实现AOP\n>>http://www.csg.ci.i.u-tokyo.ac.jp/~chiba/javassist/\n>#### ASM实现AOP\n>>http://asm.ow2.org/\n\n### 2.2.2. 使用模板方法设计模式和策略设计模式实现IOC\n### 2.2.3. 不用synchronized和lock，实现线程安全的单例模式\n### 2.2.4. nio和reactor设计模式\n### 2.2.5. 参考资料\n>http://asm.ow2.org/\n\n>http://cglib.sourceforge.net/\n\n>http://www.javassist.org/\n\n## 2.3. 网络编程知识\n### 2.3.1. Java RMI，Socket，HttpClient\n### 2.3.2. 用Java写一个简单的静态文件的HTTP服务器\n>实现客户端缓存功能，支持返回304\n\n>实现可并发下载一个文件\n\n>使用线程池处理客户端请求\n\n>使用nio处理客户端请求\n\n>支持简单的rewrite规则\n\n>上述功能在实现的时候需要满足“开闭原则”\n### 2.3.3. 了解nginx和apache服务器的特性并搭建一个对应的服务器\n>http://nginx.org/\n\n>http://httpd.apache.org/\n### 2.3.4. 用Java实现FTP、SMTP协议\n### 2.3.5. 什么是CDN？如果实现？DNS起到什么作用？\n>搭建一个DNS服务器\n\n>搭建一个 Squid 或 Apache Traffic Server 服务器\n\n>http://www.squid-cache.org/\n\n>http://trafficserver.apache.org/\n\n>http://en.wikipedia.org/wiki/Domain_Name_System\n### 2.3.6. 参考资料\n>http://www.ietf.org/rfc/rfc2616.txt\n\n>http://tools.ietf.org/rfc/rfc5321.txt\n\n>http://en.wikipedia.org/wiki/Open/closed_principle\n### 2.4. 框架知识\n>spring，spring mvc，阅读主要源码\n\n>ibatis，阅读主要源码\n\n>用spring和ibatis搭建java server\n### 2.5. 应用服务器知识\n>熟悉使用jboss，https://www.jboss.org/overview/\n\n>熟悉使用tomcat，http://tomcat.apache.org/\n\n>熟悉使用jetty，http://www.eclipse.org/jetty/\n# 三、 高级篇\n\n## 3.1. 编译原理知识\n\n### 3.1.1. 用Java实现以下表达式解析并返回结果（语法和Oracle中的select sysdate-1 from dual类似）\n>sysdate\nsysdate - 1\nsysdate - 1/24\nsysdate - 1/(12*2)\n### 3.1.2. 实现对一个List通过DSL筛选\n>```java\n>QList<Map<String, Object>> mapList = new QList<Map<String, Object>>;\nmapList.add({\"name\": \"hatter test\"});\nmapList.add({\"id\": -1,\"name\": \"hatter test\"});\nmapList.add({\"id\": 0, \"name\": \"hatter test\"});\nmapList.add({\"id\": 1, \"name\": \"test test\"});\nmapList.add({\"id\": 2, \"name\": \"hatter test\"});\nmapList.add({\"id\": 3, \"name\": \"test hatter\"});\nmapList.query(\"id is not null and id > 0 and name like '%hatter%'\");\n>```\n要求返回列表中匹配的对象，即最后两个对象；\n\n### 3.1.3. 用Java实现以下程序（语法和变量作用域处理都和JavaScript类似）：\n>代码：\n>```javascript\nvar a = 1;\nvar b = 2;\nvar c = function() {\nvar a = 3;\nprintln(a);\nprintln(b);\n};\nc();\nprintln(a);\nprintln(b);\n>```\n输出：\n>```java\n3\n2\n1\n2\n>```\n### 3.1.4. 参考资料\n>http://en.wikipedia.org/wiki/Abstract_syntax_tree\n\n>https://javacc.java.net/\n\n>http://www.antlr.org/\n## 3.2. 操作系统知识\n>Ubuntu\n\n>Centos\n\n>使用linux，熟悉shell脚本\n## 3.3. 数据存储知识\n\n### 3.3.1. 关系型数据库\n>MySQL\n\n>如何看执行计划\n\n>如何搭建MySQL主备\n\n>binlog是什么\n\n>Derby，H2，PostgreSQL\n\n>SQLite\n### 3.3.2. NoSQL\n>Cache\n\n>Redis\n\n>Memcached\n\n>Leveldb\n\n>Bigtable\n\n>HBase\n\n>Cassandra\n\n>Mongodb\n\n>图数据库\n\n>neo4j\n### 3.3.3. 参考资料\n>http://db-engines.com/en/ranking\n\n>http://redis.io/\n\n>https://code.google.com/p/leveldb/\n\n>http://hbase.apache.org/\n\n>http://cassandra.apache.org/\n\n>http://www.mongodb.org/\n\n>http://www.neo4j.org/\n## 3.4. 大数据知识\n\n### 3.4.1. Zookeeper，在linux上部署zk\n### 3.4.2. Solr，Lucene，ElasticSearch\n>在linux上部署solr，solrcloud，，新增、删除、查询索引\n### 3.4.3. Storm，流式计算，了解Spark，S4\n>在linux上部署storm，用zookeeper做协调，运行storm hello world，local和remote模式运行调试storm topology。\n### 3.4.4. Hadoop，离线计算\n>Hdfs：部署NameNode，SecondaryNameNode，DataNode，上传文件、打开文件、更改文件、删除文件\n\n>MapReduce：部署JobTracker，TaskTracker，编写mr job\n\n>Hive：部署hive，书写hive sql，得到结果\n\n>Presto：类hive，不过比hive快，非常值得学习\n### 3.4.5. 分布式日志收集flume，kafka，logstash\n### 3.4.6. 数据挖掘，mahout\n### 3.4.7. 参考资料\n>http://zookeeper.apache.org/\n\n>https://lucene.apache.org/solr/\n\n>https://github.com/nathanmarz/storm/wiki\n\n>http://hadoop.apache.org/\n\n>http://prestodb.io/\n\n>http://flume.apache.org/，http://logstash.net/，http://kafka.apache.org/\n\n>http://mahout.apache.org/\n## 3.5. 网络安全知识\n\n### 3.5.1. 什么是DES、AES\n### 3.5.2. 什么是RSA、DSA\n### 3.5.3. 什么是MD5，SHA1\n### 3.5.4. 什么是SSL、TLS，为什么HTTPS相对比较安全\n### 3.5.5. 什么是中间人攻击、如果避免中间人攻击\n### 3.5.6. 什么是DOS、DDOS、CC攻击\n### 3.5.7. 什么是CSRF攻击\n### 3.5.8. 什么是CSS攻击\n### 3.5.9. 什么是SQL注入攻击\n### 3.5.10. 什么是Hash碰撞拒绝服务攻击\n### 3.5.11. 了解并学习下面几种增强安全的技术\n\n>http://www.openauthentication.org/\n\n>HOTP http://www.ietf.org/rfc/rfc4226.txt\n\n>TOTP http://tools.ietf.org/rfc/rfc6238.txt\n\n>OCRA http://tools.ietf.org/rfc/rfc6287.txt\n\n>http://en.wikipedia.org/wiki/Salt_(cryptography)\n### 3.5.12. 用openssl签一个证书部署到apache或nginx\n### 3.5.13. 参考资料\n>http://en.wikipedia.org/wiki/Cryptographic_hash_function\n\n>http://en.wikipedia.org/wiki/Block_cipher\n\n>http://en.wikipedia.org/wiki/Public-key_cryptography\n\n>http://en.wikipedia.org/wiki/Transport_Layer_Security\n\n>http://www.openssl.org/\n\n>https://code.google.com/p/google-authenticator/\n# 四、 扩展篇\n\n## 4.1. 相关知识\n\n### 4.1.1. 云计算，分布式，高可用，可扩展\n### 4.1.2. 虚拟化\n>https://linuxcontainers.org/\n\n>http://www.linux-kvm.org/page/Main_Page\n\n>http://www.xenproject.org/\n\n>https://www.docker.io/\n### 4.1.3. 监控\n>http://www.nagios.org/\n\n>http://ganglia.info/\n### 4.1.4. 负载均衡\n>http://www.linuxvirtualserver.org/\n### 4.1.5. 学习使用git\n>https://github.com/\n\n>https://git.oschina.net/\n### 4.1.6. 学习使用maven\n>http://maven.apache.org/\n### 4.1.7. 学习使用gradle\n>http://www.gradle.org/\n### 4.1.8. 学习一个小语种语言\n>Groovy\n\n>Scala\n\n>LISP, Common LISP, Schema, Clojure\n\n>R\n\n>Julia\n\n>Lua\n\n>Ruby\n### 4.1.9. 尝试了解编码的本质\n\n>了解以下概念\n>ASCII, ISO-8859-1\n\n>GB2312, GBK, GB18030\n\n>Unicode, UTF-8\n\n>不使用 String.getBytes() 等其他工具类/函数完成下面功能\n\n>```java\npublic static void main(String[] args) throws IOException {\nString str = \"Hello, 我们是中国人。\";\nbyte[] utf8Bytes = toUTF8Bytes(str);\nFileOutputStream fos = new FileOutputStream(\"f.txt\");\nfos.write(utf8Bytes);\nfos.close();\n}\npublic static byte[] toUTF8Bytes(String str) {\nreturn null; // TODO\n}\n>```\n\n>想一下上面的程序能不能写一个转GBK的？\n\n>写个程序自动判断一个文件是哪种编码\n### 4.1.10. 尝试了解时间的本质\n>时区 & 冬令时、夏令时\n\n>http://en.wikipedia.org/wiki/Time_zone\n\n>ftp://ftp.iana.org/tz/data/asia\n\n>http://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9C%8B%E6%99%82%E5%8D%80\n\n>闰年\n\n>http://en.wikipedia.org/wiki/Leap_year\n\n>闰秒\n\n>ftp://ftp.iana.org/tz/data/leapseconds\n\n>System.currentTimeMillis() 返回的时间是什么\n### 4.1.11. 参考资料\n>http://git-scm.com/\n\n>http://en.wikipedia.org/wiki/UTF-8\n\n>http://www.iana.org/time-zones\n## 4.2. 扩展学习\n### 4.2.1. JavaScript知识\n### 4.2.1.1. 什么是prototype\n>修改代码，使程序输出“1 3 5”：\n\n>http://jsfiddle.net/Ts7Fk/\n### 4.2.1.2. 什么是闭包\n>看一下这段代码，并解释一下为什么按Button1时没有alert出“This is button: 1”，如何修改：\n\n>http://jsfiddle.net/FDPj3/1/\n### 4.2.1.3. 了解并学习一个JS框架\n>jQuery\n\n>ExtJS\n\n>ArgularJS\n### 4.2.1.4. 写一个Greasemonkey插件\n>http://en.wikipedia.org/wiki/Greasemonkey\n### 4.2.1.5. 学习node.js\n>http://nodejs.org/\n### 4.2.2. 学习html5\n>ArgularJS，https://docs.angularjs.org/api\n### 4.2.3. 参考资料\n>http://www.ecmascript.org/\n\n>http://jsfiddle.net/\n\n>http://jsbin.com/\n\n>http://runjs.cn/\n\n>http://userscripts.org/\n# 五、 推荐书籍\n>《深入Java虚拟机》\n\n>《深入理解Java虚拟机》\n\n>《Effective Java》\n\n>《七周七语言》\n\n>《七周七数据》\n\n>《Hadoop技术内幕》\n\n>《Hbase In Action》\n\n>《Mahout In Action》\n\n>《这就是搜索引擎》\n\n>《Solr In Action》\n\n>《深入分析Java Web技术内幕》\n\n>《大型网站技术架构》\n\n>《高性能MySQL》\n\n>《算法导论》\n\n>《计算机程序设计艺术》\n\n>《代码大全》\n\n>《JavaScript权威指南》\n\n\n\n\n","source":"_posts/如何成为一个牛掰的Java大神.md","raw":"title: 如何成为一个牛掰的Java大神\ndate: 2015-12-24 22:17:44\npermalink: java00003\ntags:\n- java\ncategories:\n- java\n\n---\n\n>来自：HollisChuang's Blog\n\n>链接：http://www.hollischuang.com/archives/489\n\n# 一、基础篇\n\n## 1.1 JVM\n\n### 1.1.1. Java内存模型，Java内存管理，Java堆和栈，垃圾回收\n>http://www.jcp.org/en/jsr/detail?id=133\n\n>http://ifeve.com/jmm-faq/\n\n### 1.1.2. 了解JVM各种参数及调优\n\n### 1.1.3. 学习使用Java工具\n>jps, jstack, jmap, jconsole, jinfo, jhat, javap, …\n\n>http://kenai.com/projects/btrace\n\n>http://www.crashub.org/\n\n>https://github.com/taobao/TProfiler\n\n>https://github.com/CSUG/HouseMD\n\n>http://wiki.cyclopsgroup.org/jmxterm\n\n>https://github.com/jlusdy/TBJMap\n\n### 1.1.4. 学习Java诊断工具\n>http://www.eclipse.org/mat/\n\n>http://visualvm.java.net/oqlhelp.html\n\n### 1.1.5. 自己编写各种outofmemory，stackoverflow程序\n>HeapOutOfMemory\n\n>Young OutOfMemory\n\n>MethodArea OutOfMemory\n\n>ConstantPool OutOfMemory\n\n>DirectMemory OutOfMemory\n\n>Stack OutOfMemory\n\n>Stack OverFlow\n\n### 1.1.6. 使用工具尝试解决以下问题，并写下总结\n>当一个Java程序响应很慢时如何查找问题\n\n>当一个Java程序频繁FullGC时如何解决问题，如何查看垃圾回收日志\n\n>当一个Java应用发生OutOfMemory时该如何解决，年轻代、年老代、永久代解决办法不同，导致原因也不同\n\n### 1.1.7. 参考资料\n>http://docs.oracle.com/javase/specs/jvms/se7/html/\n\n>http://www.cs.umd.edu/~pugh/java/memoryModel/\n\n>http://gee.cs.oswego.edu/dl/jmm/cookbook.html\n\n## 1.2. Java基础知识\n\n### 1.2.1. 阅读源代码\n>java.lang.String\n\n>java.lang.Integer\n\n>java.lang.Long\n\n>java.lang.Enum\n\n>java.math.BigDecimal\n\n>java.lang.ThreadLocal\n\n>java.lang.ClassLoader & java.net.URLClassLoader\n\n>java.util.ArrayList & java.util.LinkedList\n\n>java.util.HashMap & java.util.LinkedHashMap & java.util.TreeMap\n\n>java.util.HashSet & java.util.LinkedHashSet & java.util.TreeSet\n\n### 1.2.2. 熟悉Java中各种变量类型\n### 1.2.3. 熟悉Java String的使用，熟悉String的各种函数\n### 1.2.4. 熟悉Java中各种关键字\n### 1.2.5. 学会使用List，Map，Stack，Queue，Set\n>上述数据结构的遍历\n\n>上述数据结构的使用场景\n\n>Java实现对Array/List排序\n\n>java.uti.Arrays.sort()\n\n>java.util.Collections.sort()\n\n>Java实现对List去重\n\n>Java实现对List去重，并且需要保留数据原始的出现顺序\n\n>Java实现最近最少使用cache，用LinkedHashMap\n\n### 1.2.6. Java IO&Java NIO，并学会使用\n>java.io.*\n\n>java.nio.*\n\n>nio和reactor设计模式\n\n>文件编码，字符集\n\n### 1.2.7. Java反射与javassist\n>反射与工厂模式\n\n>java.lang.reflect.*\n\n### 1.2.8. Java序列化\n>java.io. Serializable\n\n>什么是序列化，为什么序列化\n\n>序列化与单例模式\n\n>google序列化protobuf\n\n### 1.2.9. 虚引用，弱引用，软引用\n>java.lang.ref.*\n\n>实验这些引用的回收\n\n### 1.2.10. 熟悉Java系统属性\n>java.util.Properties\n\n### 1.2.11. 熟悉Annotation用法\n>java.lang.annotation.*\n\n### 1.2.12. JMS\n>javax.jms.*\n\n### 1.2.13. JMX\n>java.lang.management.*\n\n>javax.management.*\n\n### 1.2.14. 泛型和继承，泛型和擦除\n### 1.2.15. 自动拆箱装箱与字节码\n### 1.2.16. 实现Callback\n### 1.2.17. java.lang.Void类使用\n### 1.2.18. Java Agent，premain函数\n>java.lang.instrument\n\n### 1.2.19. 单元测试\n>Junit，http://junit.org/\n\n>Jmockit，https://code.google.com/p/jmockit/\n\n>djUnit，http://works.dgic.co.jp/djunit/\n\n### 1.2.20. Java实现通过正则表达式提取一段文本中的电子邮件，并将@替换为#输出\n>java.lang.util.regex.*\n\n### 1.2.21. 学习使用常用的Java工具库\n>commons.lang, commons.*…\n\n>guava-libraries\n\n>netty\n\n### 1.2.22. 什么是API&SPI\n>http://en.wikipedia.org/wiki/Application_programming_interface\n\n>http://en.wikipedia.org/wiki/Service_provider_interface\n\n### 1.2.23. 参考资料\n>JDK src.zip 源代码\n\n>http://openjdk.java.net/\n\n>http://commons.apache.org/\n\n>https://code.google.com/p/guava-libraries/\n\n>http://netty.io/\n\n>http://stackoverflow.com/questions/2954372/difference-between-spi-and-api\n\n>http://stackoverflow.com/questions/11404230/how-to-implement-the-api-spi-pattern-in-java\n\n## 1.3. Java并发编程\n\n### 1.3.1. 阅读源代码，并学会使用\n\n>java.lang.Thread\n\n>java.lang.Runnable\n\n>java.util.concurrent.Callable\n\n>java.util.concurrent.locks.ReentrantLock\n\n>java.util.concurrent.locks.ReentrantReadWriteLock\n\n>java.util.concurrent.atomic.Atomic*\n\n>java.util.concurrent.Semaphore\n\n>java.util.concurrent.CountDownLatch\n\n>java.util.concurrent.CyclicBarrier\n\n>java.util.concurrent.ConcurrentHashMap\n\n>java.util.concurrent.Executors\n\n### 1.3.2. 学习使用线程池，自己设计线程池需要注意什么\n### 1.3.3. 锁\n>什么是锁，锁的种类有哪些，每种锁有什么特点，适用场景是什么\n\n>在并发编程中锁的意义是什么\n\n### 1.3.4. synchronized的作用是什么，synchronized和lock\n### 1.3.5. sleep和wait\n### 1.3.6. wait和notify\n### 1.3.7. 写一个死锁的程序\n### 1.3.8. 什么是守护线程，守护线程和非守护线程的区别以及用法\n### 1.3.9. volatile关键字的理解\n>C++ volatile关键字和Java volatile关键字\n\n>happens-before语义\n编译器指令重排和CPU指令重排\n>http://en.wikipedia.org/wiki/Memory_ordering\n\n>http://en.wikipedia.org/wiki/Volatile_variable\n\n>http://preshing.com/20130702/the-happens-before-relation/\n\n### 1.3.10. 以下代码是不是线程安全？为什么？如果为count加上volatile修饰是否能够做到线程安全？你觉得该怎么做是线程安全的？\n>```java\npublic class Sample {\nprivate static int count = 0;\npublic static void increment() {\ncount++;\n}\n}\n```\n\n\n### 1.3.11. 解释一下下面两段代码的差别\n>代码1\n>```java\n>public class Sample {\nprivate static int count = 0;\nsynchronized public static void increment() {\ncount++;\n}\n}\n>```\n代码2\n>```java\npublic class Sample {\nprivate static AtomicInteger count = new AtomicInteger(0);\npublic static void increment() {\ncount.getAndIncrement();\n}\n}\n>```\n\n### 1.3.12. 参考资料\n>http://book.douban.com/subject/10484692/\n\n>http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html\n# 二、 进阶篇\n\n## 2.1. Java底层知识\n\n### 2.1.1. 学习了解字节码、class文件格式\n>http://en.wikipedia.org/wiki/Java_class_file\n\n>http://en.wikipedia.org/wiki/Java_bytecode\n\n>http://en.wikipedia.org/wiki/Java_bytecode_instruction_listings\n\n>http://www.csg.ci.i.u-tokyo.ac.jp/~chiba/javassist/\n\n>http://asm.ow2.org/\n\n### 2.1.2. 写一个程序要求实现javap的功能（手工完成，不借助ASM等工具）\n>如Java源代码：\n>```java\n>public static void main(String[] args) {\nint i = 0;\ni += 1;\ni *= 1;\nSystem.out.println(i);\n}\n>```\n编译后读取class文件输出以下代码：\n>```java\npublic static void main(java.lang.String[]);\nCode:\nStack=2, Locals=2, Args_size=1\n0: iconst_0\n1: istore_1\n2: iinc 1, 1\n5: iload_1\n6: iconst_1\n7: imul\n8: istore_1\n9: getstatic #2; //Field java/lang/System.out:Ljava/io/PrintStream;\n12: iload_1\n13: invokevirtual #3; //Method java/io/PrintStream.println:(I)V\n16: return\nLineNumberTable:\nline 4: 0\nline 5: 2\nline 6: 5\nline 7: 9\nline 8: 16\n>```\n\n### 2.1.3. CPU缓存，L1，L2，L3和伪共享\n>http://duartes.org/gustavo/blog/post/intel-cpu-caches/\n\n>http://mechanical-sympathy.blogspot.com/2011/07/false-sharing.html\n### 2.1.4. 什么是尾递归\n### 2.1.5. 熟悉位运算\n>用位运算实现加、减、乘、除、取余\n### 2.1.6. 参考资料\n>http://book.douban.com/subject/1138768/\n\n>http://book.douban.com/subject/6522893/\n\n>http://en.wikipedia.org/wiki/Java_class_file\n\n>http://en.wikipedia.org/wiki/Java_bytecode\n\n>http://en.wikipedia.org/wiki/Java_bytecode_instruction_listings\n## 2.2. 设计模式\n\n### 2.2.1. 实现AOP\n>#### CGLIB和InvocationHandler的区别\n>>http://cglib.sourceforge.net/\n\n>#### 动态代理模式\n>#### Javassist实现AOP\n>>http://www.csg.ci.i.u-tokyo.ac.jp/~chiba/javassist/\n>#### ASM实现AOP\n>>http://asm.ow2.org/\n\n### 2.2.2. 使用模板方法设计模式和策略设计模式实现IOC\n### 2.2.3. 不用synchronized和lock，实现线程安全的单例模式\n### 2.2.4. nio和reactor设计模式\n### 2.2.5. 参考资料\n>http://asm.ow2.org/\n\n>http://cglib.sourceforge.net/\n\n>http://www.javassist.org/\n\n## 2.3. 网络编程知识\n### 2.3.1. Java RMI，Socket，HttpClient\n### 2.3.2. 用Java写一个简单的静态文件的HTTP服务器\n>实现客户端缓存功能，支持返回304\n\n>实现可并发下载一个文件\n\n>使用线程池处理客户端请求\n\n>使用nio处理客户端请求\n\n>支持简单的rewrite规则\n\n>上述功能在实现的时候需要满足“开闭原则”\n### 2.3.3. 了解nginx和apache服务器的特性并搭建一个对应的服务器\n>http://nginx.org/\n\n>http://httpd.apache.org/\n### 2.3.4. 用Java实现FTP、SMTP协议\n### 2.3.5. 什么是CDN？如果实现？DNS起到什么作用？\n>搭建一个DNS服务器\n\n>搭建一个 Squid 或 Apache Traffic Server 服务器\n\n>http://www.squid-cache.org/\n\n>http://trafficserver.apache.org/\n\n>http://en.wikipedia.org/wiki/Domain_Name_System\n### 2.3.6. 参考资料\n>http://www.ietf.org/rfc/rfc2616.txt\n\n>http://tools.ietf.org/rfc/rfc5321.txt\n\n>http://en.wikipedia.org/wiki/Open/closed_principle\n### 2.4. 框架知识\n>spring，spring mvc，阅读主要源码\n\n>ibatis，阅读主要源码\n\n>用spring和ibatis搭建java server\n### 2.5. 应用服务器知识\n>熟悉使用jboss，https://www.jboss.org/overview/\n\n>熟悉使用tomcat，http://tomcat.apache.org/\n\n>熟悉使用jetty，http://www.eclipse.org/jetty/\n# 三、 高级篇\n\n## 3.1. 编译原理知识\n\n### 3.1.1. 用Java实现以下表达式解析并返回结果（语法和Oracle中的select sysdate-1 from dual类似）\n>sysdate\nsysdate - 1\nsysdate - 1/24\nsysdate - 1/(12*2)\n### 3.1.2. 实现对一个List通过DSL筛选\n>```java\n>QList<Map<String, Object>> mapList = new QList<Map<String, Object>>;\nmapList.add({\"name\": \"hatter test\"});\nmapList.add({\"id\": -1,\"name\": \"hatter test\"});\nmapList.add({\"id\": 0, \"name\": \"hatter test\"});\nmapList.add({\"id\": 1, \"name\": \"test test\"});\nmapList.add({\"id\": 2, \"name\": \"hatter test\"});\nmapList.add({\"id\": 3, \"name\": \"test hatter\"});\nmapList.query(\"id is not null and id > 0 and name like '%hatter%'\");\n>```\n要求返回列表中匹配的对象，即最后两个对象；\n\n### 3.1.3. 用Java实现以下程序（语法和变量作用域处理都和JavaScript类似）：\n>代码：\n>```javascript\nvar a = 1;\nvar b = 2;\nvar c = function() {\nvar a = 3;\nprintln(a);\nprintln(b);\n};\nc();\nprintln(a);\nprintln(b);\n>```\n输出：\n>```java\n3\n2\n1\n2\n>```\n### 3.1.4. 参考资料\n>http://en.wikipedia.org/wiki/Abstract_syntax_tree\n\n>https://javacc.java.net/\n\n>http://www.antlr.org/\n## 3.2. 操作系统知识\n>Ubuntu\n\n>Centos\n\n>使用linux，熟悉shell脚本\n## 3.3. 数据存储知识\n\n### 3.3.1. 关系型数据库\n>MySQL\n\n>如何看执行计划\n\n>如何搭建MySQL主备\n\n>binlog是什么\n\n>Derby，H2，PostgreSQL\n\n>SQLite\n### 3.3.2. NoSQL\n>Cache\n\n>Redis\n\n>Memcached\n\n>Leveldb\n\n>Bigtable\n\n>HBase\n\n>Cassandra\n\n>Mongodb\n\n>图数据库\n\n>neo4j\n### 3.3.3. 参考资料\n>http://db-engines.com/en/ranking\n\n>http://redis.io/\n\n>https://code.google.com/p/leveldb/\n\n>http://hbase.apache.org/\n\n>http://cassandra.apache.org/\n\n>http://www.mongodb.org/\n\n>http://www.neo4j.org/\n## 3.4. 大数据知识\n\n### 3.4.1. Zookeeper，在linux上部署zk\n### 3.4.2. Solr，Lucene，ElasticSearch\n>在linux上部署solr，solrcloud，，新增、删除、查询索引\n### 3.4.3. Storm，流式计算，了解Spark，S4\n>在linux上部署storm，用zookeeper做协调，运行storm hello world，local和remote模式运行调试storm topology。\n### 3.4.4. Hadoop，离线计算\n>Hdfs：部署NameNode，SecondaryNameNode，DataNode，上传文件、打开文件、更改文件、删除文件\n\n>MapReduce：部署JobTracker，TaskTracker，编写mr job\n\n>Hive：部署hive，书写hive sql，得到结果\n\n>Presto：类hive，不过比hive快，非常值得学习\n### 3.4.5. 分布式日志收集flume，kafka，logstash\n### 3.4.6. 数据挖掘，mahout\n### 3.4.7. 参考资料\n>http://zookeeper.apache.org/\n\n>https://lucene.apache.org/solr/\n\n>https://github.com/nathanmarz/storm/wiki\n\n>http://hadoop.apache.org/\n\n>http://prestodb.io/\n\n>http://flume.apache.org/，http://logstash.net/，http://kafka.apache.org/\n\n>http://mahout.apache.org/\n## 3.5. 网络安全知识\n\n### 3.5.1. 什么是DES、AES\n### 3.5.2. 什么是RSA、DSA\n### 3.5.3. 什么是MD5，SHA1\n### 3.5.4. 什么是SSL、TLS，为什么HTTPS相对比较安全\n### 3.5.5. 什么是中间人攻击、如果避免中间人攻击\n### 3.5.6. 什么是DOS、DDOS、CC攻击\n### 3.5.7. 什么是CSRF攻击\n### 3.5.8. 什么是CSS攻击\n### 3.5.9. 什么是SQL注入攻击\n### 3.5.10. 什么是Hash碰撞拒绝服务攻击\n### 3.5.11. 了解并学习下面几种增强安全的技术\n\n>http://www.openauthentication.org/\n\n>HOTP http://www.ietf.org/rfc/rfc4226.txt\n\n>TOTP http://tools.ietf.org/rfc/rfc6238.txt\n\n>OCRA http://tools.ietf.org/rfc/rfc6287.txt\n\n>http://en.wikipedia.org/wiki/Salt_(cryptography)\n### 3.5.12. 用openssl签一个证书部署到apache或nginx\n### 3.5.13. 参考资料\n>http://en.wikipedia.org/wiki/Cryptographic_hash_function\n\n>http://en.wikipedia.org/wiki/Block_cipher\n\n>http://en.wikipedia.org/wiki/Public-key_cryptography\n\n>http://en.wikipedia.org/wiki/Transport_Layer_Security\n\n>http://www.openssl.org/\n\n>https://code.google.com/p/google-authenticator/\n# 四、 扩展篇\n\n## 4.1. 相关知识\n\n### 4.1.1. 云计算，分布式，高可用，可扩展\n### 4.1.2. 虚拟化\n>https://linuxcontainers.org/\n\n>http://www.linux-kvm.org/page/Main_Page\n\n>http://www.xenproject.org/\n\n>https://www.docker.io/\n### 4.1.3. 监控\n>http://www.nagios.org/\n\n>http://ganglia.info/\n### 4.1.4. 负载均衡\n>http://www.linuxvirtualserver.org/\n### 4.1.5. 学习使用git\n>https://github.com/\n\n>https://git.oschina.net/\n### 4.1.6. 学习使用maven\n>http://maven.apache.org/\n### 4.1.7. 学习使用gradle\n>http://www.gradle.org/\n### 4.1.8. 学习一个小语种语言\n>Groovy\n\n>Scala\n\n>LISP, Common LISP, Schema, Clojure\n\n>R\n\n>Julia\n\n>Lua\n\n>Ruby\n### 4.1.9. 尝试了解编码的本质\n\n>了解以下概念\n>ASCII, ISO-8859-1\n\n>GB2312, GBK, GB18030\n\n>Unicode, UTF-8\n\n>不使用 String.getBytes() 等其他工具类/函数完成下面功能\n\n>```java\npublic static void main(String[] args) throws IOException {\nString str = \"Hello, 我们是中国人。\";\nbyte[] utf8Bytes = toUTF8Bytes(str);\nFileOutputStream fos = new FileOutputStream(\"f.txt\");\nfos.write(utf8Bytes);\nfos.close();\n}\npublic static byte[] toUTF8Bytes(String str) {\nreturn null; // TODO\n}\n>```\n\n>想一下上面的程序能不能写一个转GBK的？\n\n>写个程序自动判断一个文件是哪种编码\n### 4.1.10. 尝试了解时间的本质\n>时区 & 冬令时、夏令时\n\n>http://en.wikipedia.org/wiki/Time_zone\n\n>ftp://ftp.iana.org/tz/data/asia\n\n>http://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9C%8B%E6%99%82%E5%8D%80\n\n>闰年\n\n>http://en.wikipedia.org/wiki/Leap_year\n\n>闰秒\n\n>ftp://ftp.iana.org/tz/data/leapseconds\n\n>System.currentTimeMillis() 返回的时间是什么\n### 4.1.11. 参考资料\n>http://git-scm.com/\n\n>http://en.wikipedia.org/wiki/UTF-8\n\n>http://www.iana.org/time-zones\n## 4.2. 扩展学习\n### 4.2.1. JavaScript知识\n### 4.2.1.1. 什么是prototype\n>修改代码，使程序输出“1 3 5”：\n\n>http://jsfiddle.net/Ts7Fk/\n### 4.2.1.2. 什么是闭包\n>看一下这段代码，并解释一下为什么按Button1时没有alert出“This is button: 1”，如何修改：\n\n>http://jsfiddle.net/FDPj3/1/\n### 4.2.1.3. 了解并学习一个JS框架\n>jQuery\n\n>ExtJS\n\n>ArgularJS\n### 4.2.1.4. 写一个Greasemonkey插件\n>http://en.wikipedia.org/wiki/Greasemonkey\n### 4.2.1.5. 学习node.js\n>http://nodejs.org/\n### 4.2.2. 学习html5\n>ArgularJS，https://docs.angularjs.org/api\n### 4.2.3. 参考资料\n>http://www.ecmascript.org/\n\n>http://jsfiddle.net/\n\n>http://jsbin.com/\n\n>http://runjs.cn/\n\n>http://userscripts.org/\n# 五、 推荐书籍\n>《深入Java虚拟机》\n\n>《深入理解Java虚拟机》\n\n>《Effective Java》\n\n>《七周七语言》\n\n>《七周七数据》\n\n>《Hadoop技术内幕》\n\n>《Hbase In Action》\n\n>《Mahout In Action》\n\n>《这就是搜索引擎》\n\n>《Solr In Action》\n\n>《深入分析Java Web技术内幕》\n\n>《大型网站技术架构》\n\n>《高性能MySQL》\n\n>《算法导论》\n\n>《计算机程序设计艺术》\n\n>《代码大全》\n\n>《JavaScript权威指南》\n\n\n\n\n","slug":"java00003","published":1,"updated":"2016-04-22T16:27:06.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cincmjy8y000nogo0inr2gq8v"},{"title":"test.md","date":"2016-04-22T17:19:03.000Z","_content":"","source":"_posts/test-md.md","raw":"title: test.md\ndate: 2016-04-23 01:19:03\ntags:\n---\n","slug":"test-md","published":1,"updated":"2016-04-22T17:19:03.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cincmjy8y000sogo0els4ptid"},{"title":"Hello World","_content":"Welcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"title: Hello World\n---\nWelcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-04-22T17:02:50.651Z","updated":"2016-04-22T17:02:50.651Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cincmjy8y000togo0dy2huak9"},{"title":"SpringMVC Controller接收List< Map>或List< Object>","date":"2015-12-23T12:58:44.000Z","_content":"google了一个下午，暂时找到两种解决办法，虽然这两种方法都不是很方便，暂时先这么用着吧！\n## 1.全部参数封装为一个对象\n### controller类\n```java\n/**\n * 批量新增用户\n *\n * 不能直接传List  < Map> 数组对象，只能用两个法子传参数，一个是把数组对象在前端变为String传到后台再解析，另外一个就是把所有参数封装成一个对象，前端JSON.stringify(params)后变为字符串传到后台，后台会自动转换为对象\n *\n * @param batchCreateVO 封装好的对象\n * @param request\n * @param session\n * @return\n */\n@RequestMapping(value = \"/batchCreate\", produces = MediaTypes.JSON_UTF_8)\n@ResponseBody\nprotected String batchCreate(\n        @RequestBody BatchCreateVO batchCreateVO,\n        HttpServletRequest request, HttpSession session) {\n        //dosomething\n\t}\n```\n\n### 封装的对象\n```java\npackage com.miracle.mby.account.vo;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * 移动端批量创建用户封装对象\n * <p/>\n * ticket       身份校验ticket\n * mac          身份校验mac\n * refDeptId    企业顶级部门\n * usersString  用户对象数组字符串\n *\n * @author dongxiaoxia\n * @create 2015-12-22 14:33\n */\npublic class BatchCreateVO {\n    private String ticket;\n    private String mac;\n    private String refDeptId;\n    private List<Map> users;\n\n    public String getTicket() {\n        return ticket;\n    }\n\n    public void setTicket(String ticket) {\n        this.ticket = ticket;\n    }\n\n    public String getMac() {\n        return mac;\n    }\n\n    public void setMac(String mac) {\n        this.mac = mac;\n    }\n\n    public String getRefDeptId() {\n        return refDeptId;\n    }\n\n    public void setRefDeptId(String refDeptId) {\n        this.refDeptId = refDeptId;\n    }\n\n    public List<Map> getUsers() {\n        return users;\n    }\n\n    public void setUsers(List<Map> users) {\n        this.users = users;\n    }\n}\n```\n\n### 页面请求\n```javascript\nvar users = [{\"userName\": \"测试用户1\",\"sex\":0,\"mobile\":\"15432343213\",\"email\":\"123@123.com\",\"phone\":\"123213\",\"departmentIds\":[]}];\nvar params ={\n    \"ticket\":\"test\",\n    \"mac\":\"test\",\n    \"refDeptId\":\"fa0823254d6011e58434ac220bcd3c54\",\n    \"users\":users\n};\n$.ajax({\n    type: 'POST',\n    url: 'http://localhost:8081/api/mobile/user/batchCreate',\n    data: JSON.stringify(params),\n    dataType: 'json', contentType: \"application/json; charset=utf-8\"\n});\n```\n\n\n## 2.单独转换需要的List\n单独把List< Map>或List< Object> 参数转换为json字符串，然后传到后台之后再把字符串转换会对象\n\n\n\n\n\n","source":"_posts/SpringMVC Controller接收List Map或List Object.md","raw":"title: SpringMVC Controller接收List< Map>或List< Object>\ndate: 2015-12-23 20:58:44\npermalink: spring00001\ntags:\n- Spring\ncategories:\n- Spring\n\n---\ngoogle了一个下午，暂时找到两种解决办法，虽然这两种方法都不是很方便，暂时先这么用着吧！\n## 1.全部参数封装为一个对象\n### controller类\n```java\n/**\n * 批量新增用户\n *\n * 不能直接传List  < Map> 数组对象，只能用两个法子传参数，一个是把数组对象在前端变为String传到后台再解析，另外一个就是把所有参数封装成一个对象，前端JSON.stringify(params)后变为字符串传到后台，后台会自动转换为对象\n *\n * @param batchCreateVO 封装好的对象\n * @param request\n * @param session\n * @return\n */\n@RequestMapping(value = \"/batchCreate\", produces = MediaTypes.JSON_UTF_8)\n@ResponseBody\nprotected String batchCreate(\n        @RequestBody BatchCreateVO batchCreateVO,\n        HttpServletRequest request, HttpSession session) {\n        //dosomething\n\t}\n```\n\n### 封装的对象\n```java\npackage com.miracle.mby.account.vo;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * 移动端批量创建用户封装对象\n * <p/>\n * ticket       身份校验ticket\n * mac          身份校验mac\n * refDeptId    企业顶级部门\n * usersString  用户对象数组字符串\n *\n * @author dongxiaoxia\n * @create 2015-12-22 14:33\n */\npublic class BatchCreateVO {\n    private String ticket;\n    private String mac;\n    private String refDeptId;\n    private List<Map> users;\n\n    public String getTicket() {\n        return ticket;\n    }\n\n    public void setTicket(String ticket) {\n        this.ticket = ticket;\n    }\n\n    public String getMac() {\n        return mac;\n    }\n\n    public void setMac(String mac) {\n        this.mac = mac;\n    }\n\n    public String getRefDeptId() {\n        return refDeptId;\n    }\n\n    public void setRefDeptId(String refDeptId) {\n        this.refDeptId = refDeptId;\n    }\n\n    public List<Map> getUsers() {\n        return users;\n    }\n\n    public void setUsers(List<Map> users) {\n        this.users = users;\n    }\n}\n```\n\n### 页面请求\n```javascript\nvar users = [{\"userName\": \"测试用户1\",\"sex\":0,\"mobile\":\"15432343213\",\"email\":\"123@123.com\",\"phone\":\"123213\",\"departmentIds\":[]}];\nvar params ={\n    \"ticket\":\"test\",\n    \"mac\":\"test\",\n    \"refDeptId\":\"fa0823254d6011e58434ac220bcd3c54\",\n    \"users\":users\n};\n$.ajax({\n    type: 'POST',\n    url: 'http://localhost:8081/api/mobile/user/batchCreate',\n    data: JSON.stringify(params),\n    dataType: 'json', contentType: \"application/json; charset=utf-8\"\n});\n```\n\n\n## 2.单独转换需要的List\n单独把List< Map>或List< Object> 参数转换为json字符串，然后传到后台之后再把字符串转换会对象\n\n\n\n\n\n","slug":"spring00001","published":1,"updated":"2016-04-22T16:27:06.576Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cincmjy9d000uogo0xd4h83q4"},{"title":"Java程序员的就业指导","date":"2015-12-24T14:03:44.000Z","_content":">来自 CDSN博客 java那些事\n\n  想要成为合格的Java程序员或工程师到底需要具备哪些专业技能，面试者在面试之前到底需要准备哪些东西呢？本文陈列的这些内容既可以作为个人简历中的内容，也可以作为面试的时候跟面试官聊的东西，你可以把这些内容写到你的简历中，当然更需要的是你在面试的时候向面试官展示这些专业技能。相信此文对正在寻觅Java程序员（Java工程师）职位的freshman以及希望成为中高级Java开发者的junior都会有所帮助。\n\n#### 专业技能\n\n>熟练的使用Java语言进行面向对象程序设计，有良好的编程习惯，熟悉常用的Java API，包括集合框架、多线程（并发编程）、I/O（NIO）、Socket、JDBC、XML、反射等。\n\n>熟悉基于JSP和Servlet的Java Web开发，对Servlet和JSP的工作原理和生命周期有深入了解，熟练的使用JSTL和EL编写无脚本动态页面，有使用监听器、过滤器等Web组件以及MVC架构模式进行Java Web项目开发的经验。\n\n>对Spring的IoC容器和AOP原理有深入了解，熟练的运用Spring框架管理各种Web组件及其依赖关系，熟练的使用Spring进行事务、日志、安全性等的管理，有使用Spring MVC作为表示层技术以及使用Spring提供的持久化支持进行Web项目开发的经验，熟悉Spring对其他框架的整合。\n\n>熟练的使用Hibernate、MyBatis等ORM框架，熟悉Hibernate和MyBatis的核心API，对Hibernate的关联映射、继承映射、组件映射、缓存机制、事务管理以及性能调优等有深入的理解。\n\n>熟练的使用HTML、CSS和JavaScript进行Web前端开发，熟悉jQuery和Bootstrap，对Ajax技术在Web项目中的应用有深入理解，有使用前端MVC框架（AngularJS）和JavaScript模板引擎（HandleBars）进行项目开发的经验。\n\n>熟悉常用的关系型数据库产品（MySQL、Oracle），熟练的使用SQL和PL/SQL进行数据库编程。\n\n>熟悉面向对象的设计原则，对GoF设计模式和企业应用架构模式有深入的了解和实际开发的相关经验，熟练的使用UML进行面向对象的分析和设计，有TDD（测试驱动开发）和DDD（领域驱动设计）的经验。\n\n>熟悉Apache、NginX、Tomcat、WildFly、Weblogic等Web服务器和应用服务器的使用，熟悉多种服务器整合、集群和负载均衡的配置。\n\n>熟练的使用产品原型工具Axure，熟练的使用设计建模工具PowerDesigner和Enterprise Architect，熟练的使用Java开发环境Eclipse和IntelliJ，熟练的使用前端开发环境WebStorm，熟练的使用软件版本控制工具SVN和Git，熟练的使用项目构建和管理工具Maven和Gradle。\n\n>`说明：`上面罗列的这些东西并不是每一项你都要烂熟于心，根据企业招聘的具体要求可以做相应的有针对性的准备。我个人觉得前6项应该是最低要求，是作为一个Java开发者必须要具备的专业技能。\n项目经验\n\n#### 项目介绍\n\n>  本系统是X委托Y开发的用于Z的系统，系统包括A、B、C、D等模块。系统使用了Java企业级开发的开源框架E以及前端技术F。表示层运用了G架构，使用H作为视图I作为控制器并实现了REST风格的请求；业务逻辑层运用了J模式，并通过K实现事务、日志和安全性等功能，通过L实现缓存服务；持久层使用了M封装CRUD操作，底层使用N实现数据存取。整个项目采用了P开发模型。\n\n>`说明：`上面的描述中，E通常指Spring（Java企业级开发的一站式选择）；F最有可能是jQuery库及其插件或者是Bootstrap框架，当然如果要构建单页应用（SPA）最佳的方案是前端MVC框架（如AngularJS）和JavaScript模板引擎（如HandleBars）；G显然是MVC（模型-视图-控制），最有可能的实现框架是Spring MVC，除此之外还有Struts 2、JSF以及Apache为JSF提供的MyFaces实现，可以使用JSP作为MVC中的V，也可使用模板引擎（如Freemarker和Velocity）来生成视图，还可以是各种文档或报表（如Excel和PDF等），而Servlet和自定义的控制器是MVC中的C，当然Spring MVC中提供了作为前端控制器的DispatcherServlet；J通常是事务脚本，K应该是AOP（面向切面编程）技术，L目前广泛使用的有memcached和Redis；M的选择方案很多，最有可能的是Hibernate和MyBatis，也可以两种技术同时运用，但通常是将增删改交给Hibernate来处理，而复杂的查询则由MyBatis完成，此外TopLink、jOOQ也是优秀的持久层解决方案；底层的数据存取传统上是使用关系型数据库，可以是MySQL、Oracle、SQLServer、DB2等，随着大数据时代的来临，也可以采用NoSQL（如MongoDB、MemBase、BigTable等）和其他大数据存取方案（如GFS、HDFS等）；项目的开发模型P可以是瀑布模型、快速原型模型、增量模型、螺旋模型、喷泉模型、RAD模型等。\n\n#### 项目开发流程\n\n>可行性分析 >>> 可行性分析报告 / 项目开发计划书\n\n>需求分析 >>> 需求规格说明书 \n\n>OOAD（用例图、时序图、活动图）\n\n>界面原型：帮助理解需求、业务层设计时推导事务脚本\n\n>设计 >>> 概要设计说明书/详细设计说明书 \n\n>抽取业务实体（领域对象）：类图、E-R图（概念设计阶段）\n\n>分层架构：确定各层的技术实现方案（具体到使用的框架、数据库服务器、应用服务器等）。业务层设计：事务脚本模式（事务：用户发送一次请求就是一个事务；脚本：一个方法或一个函数；事务脚本：把一次请求封装为一个方法或一个函数；事务脚本模式：一个事务开始于脚本的打开，终止于脚本的关闭）。业务层涉及的对象有三种类型：事务脚本类（封装了业务的流程）、数据访问对象（DAO，封装了持久化操作）、数据传输对象（DTO，封装了失血/贫血领域对象），三者之间的关系是事务脚本类组合（聚合）数据访问对象，这二者都依赖了数据传输对象\n\n>正向工程（UML类图生成Java代码）和逆向工程（Java代码生成UML类图）\n\n>数据库物理设计（ER图转换成表间关系图、建库和建表、使用工具插入测试数据）\n\n>编码\n\n#### 测试 >>> 测试报告 / 缺陷报告 \n\n>单元测试：对软件中的最小可测试单元进行检查和验证，在Java中是对类中的方法进行测试，可以使用JUnit工具来实施。\n\n>集成测试：集成测试也叫组装测试或联合测试。在单元测试的基础上，将所有模块按照设计要求组装成为子系统进行测试。\n\n>系统测试：将已经确认的软件、硬件、外设、网络等元素结合在一起，进行信息系统的各种组装测试和确认测试，系统测试是针对整个产品系统进行的测试，目的是验证系统是否满足了需求规格的定义，找出与需求规格不符或与之矛盾的地方，从而提出更加完善的方案。\n\n>验收测试：在软件产品完成了单元测试、集成测试和系统测试之后，产品发布之前所进行的软件测试活动。它是技术测试的最后一个阶段，也称为交付测试。验收测试的目的是确保软件准备就绪，并且可以让最终用户将其用于执行软件的既定功能和任务。\n\n#### 交付和维护 >>> 用户手册 / 操作手册\n\n#### 项目管理\n\n>版本控制：CVS/SVN/Git\n\n>自动构建：Ant/Maven/Ivy/Gradle\n\n>持续集成：Hudson/Jenkins\n\n>系统架构\n\n>负载均衡服务器：F5、A10\n\n#### 应用服务器： \n\n>HTTP服务器：Apache、NginX（HTTP、反向代理、邮件代理服务器）\n\n>Servlet容器：Tomcat、Resin\n\n>EJB容器：WildFly（JBoss Application Server）、GlassFish、Weblogic、Websphere\n\n>数据库服务器：MySQL、Oracle\n\n#### 第三方工具（插件）应用\n\n>图表工具：基于jQuery的图表插件（如jQchart、Flot、Charted等）、Chart.js、Highcharts等。\n\n>报表工具：Pentaho Reporting、iReport、DynamicReports等。\n\n>文档处理：POI、iText等。\n\n>工作流引擎：jBPM、OpenWFE、Snaker、SWAMP等。\n\n>作业调度：Quartz、JobServer、Oddjob等。\n\n>缓存服务：EhCache、memcached、SwarmCache等。\n\n>消息队列：Open-MQ、ZeroMQ等。\n\n>安全框架：Shiro、PicketBox等。\n\n>搜索引擎：IndexTank、Lucene、ElasticSearch等。\n\n>Ajax框架：jQuery、ExtJS、DWR等。\n\n>UI插件：EasyUI、MiniUI等。\n\n>富文本框：UEditor、CKEditor等。\n\n#### 面试提问\n\n>项目是为哪个公司开发的？项目的投入是多少？\n\n>有多少人参与了项目开发？整个团队中，测试人员、开发人员、项目经理比例是多少？\n\n>项目开发了多长时间？项目总的代码量有多少？你的代码量有多少？\n\n>项目采用了怎样的开发模型或开发流程？项目的架构是怎样的？项目的技术选型是怎样的？\n\n>你在项目中承担了怎样的职责？是否经常开会或加班？项目完成后有哪些收获或是经验教训？\n\n>项目中最困难的部分是什么？如何解决团队开发时遇到的各种冲突？\n\n>说明：对于没有实际项目经验的，可以在前程无忧、智联招聘、拉勾网等网站上搜索招聘Java程序员的公司，找到他们的官方网站了解他们做的项目，查看项目的详细介绍，然后尝试完成其中一部分功能，最好请教一下高人看看自己的设计和代码是否恰当，这样相当于积累了一定的项目经验。\n面试题\n\n>  Java常见的面试题已经总结成《Java面试题集》、《Java面试题全集》以及《面试编程题拾遗》等文章陆续发布在我的CSDN博客，各大公司的面试题我会继续整理发布。\n\n### 其他\n\n#### 常见错误\n\n>只在计算机上练习\n不做行为面试题演练\n不做模拟面试训练\n试图死记硬背答案\n不大声说出你的解题思路\n代码不够严谨\n不写测试代码\n轻言放弃\n\n#### 面试时可以反问面试官的问题\n\n> 我注意到你们使用了X技术，请问你们是如何解决Y问题的？\n\n>为什么你们的产品使用了X技术而不是Y技术？据我所知，X技术虽然有A、B、C等好处，但也存在D和E问题，而Y技术可以解决D和E问题。\n\n>我对您说的X技术不是太熟悉，但我感觉它是一个不错的解决方案，您能多讲讲它的工作原理吗？\n\n>你们团队是如何进行项目规划的？一周会有几次例会？每周的代码量大概是多少？\n\n>就X问题我能想到的解决方案目前就只有Y了，请问您会怎么解决这个问题？\n\n#### S.A.R.法则\n\n>  S.A.R法则是指先描述问题的场景，然后解释你采取的行动，最后陈述结果。\n\n#### 算法题的五种解法\n\n>举例法：通过举例子发现其中的一般规则。\n\n>例子：圆内接三角形是锐角三角形的概率是多少？这是搜狗的一个面试题，可以在圆上随意画三个点连接成三角形就可以知道答案了。\n\n>模式匹配法\n\n>例子：一个有序数组的元素经过循环移动，元素的顺序变成\"3 4 5 6 1 2\"。怎样找到数组中最小的那个元素，假设数组中的元素各不相同。这个题目和折半查找看起来是那么相似，因此可以借鉴折半查找的算法，最小元素显然出现在\"mid > right\"的转折点。\n\n>简化推广法\n\n>说明：简化问题规模和数据类型，然后再发现通用的解法。\n\n>简单构造法\n\n>例子：找出\"abcde\"的所有可能的排列组合。先考虑只有\"a\"的情况，再考虑\"ab\"的情况，以此类推。最终你可能会得到一个递归公式。这种方法往往会演变成递归法。\n\n>数据结构头脑风暴法\n\n>例子：随机生成一些数字，并找出其中位数。这种问题可以在头脑中将你了解的数据结构过一遍，看看哪种是最合适的数据结构。上面的题目可以建立两个堆，一个大根堆和一个小根堆，较小的元素放在大根堆，较大的元素放在小根堆，如果两个堆不平衡，可以从其中一个堆取出元素放入另一个堆即可。最后中位数应该是两个堆的根之一。\n\n#### 录用谈判\n\n>要理直气壮的提出具体的待遇要求\n\n>开出比预期稍高的价码\n\n>不要只盯着薪水（很多公司更愿意就薪水之外的条件做出让步）\n\n>使用最合适的方法（可以尝试在电话或E-mail中谈判待遇）\n\n#### 自我评价\n\n>学习能力（搞IT行业的人需要不断的了解新的技术、工具和方法）\n\n>团队意识（相比个人英雄主义，IT行业更倡导团队合作）\n\n>抗压能力（很多IT企业的工作强度相对来说还是比较大的）\n\n\n","source":"_posts/Java程序员的就业指导.md","raw":"title: Java程序员的就业指导\ndate: 2015-12-24 22:03:44\npermalink: java00002\ntags:\n- Hexo\ncategories:\n- Hexo\n\n---\n>来自 CDSN博客 java那些事\n\n  想要成为合格的Java程序员或工程师到底需要具备哪些专业技能，面试者在面试之前到底需要准备哪些东西呢？本文陈列的这些内容既可以作为个人简历中的内容，也可以作为面试的时候跟面试官聊的东西，你可以把这些内容写到你的简历中，当然更需要的是你在面试的时候向面试官展示这些专业技能。相信此文对正在寻觅Java程序员（Java工程师）职位的freshman以及希望成为中高级Java开发者的junior都会有所帮助。\n\n#### 专业技能\n\n>熟练的使用Java语言进行面向对象程序设计，有良好的编程习惯，熟悉常用的Java API，包括集合框架、多线程（并发编程）、I/O（NIO）、Socket、JDBC、XML、反射等。\n\n>熟悉基于JSP和Servlet的Java Web开发，对Servlet和JSP的工作原理和生命周期有深入了解，熟练的使用JSTL和EL编写无脚本动态页面，有使用监听器、过滤器等Web组件以及MVC架构模式进行Java Web项目开发的经验。\n\n>对Spring的IoC容器和AOP原理有深入了解，熟练的运用Spring框架管理各种Web组件及其依赖关系，熟练的使用Spring进行事务、日志、安全性等的管理，有使用Spring MVC作为表示层技术以及使用Spring提供的持久化支持进行Web项目开发的经验，熟悉Spring对其他框架的整合。\n\n>熟练的使用Hibernate、MyBatis等ORM框架，熟悉Hibernate和MyBatis的核心API，对Hibernate的关联映射、继承映射、组件映射、缓存机制、事务管理以及性能调优等有深入的理解。\n\n>熟练的使用HTML、CSS和JavaScript进行Web前端开发，熟悉jQuery和Bootstrap，对Ajax技术在Web项目中的应用有深入理解，有使用前端MVC框架（AngularJS）和JavaScript模板引擎（HandleBars）进行项目开发的经验。\n\n>熟悉常用的关系型数据库产品（MySQL、Oracle），熟练的使用SQL和PL/SQL进行数据库编程。\n\n>熟悉面向对象的设计原则，对GoF设计模式和企业应用架构模式有深入的了解和实际开发的相关经验，熟练的使用UML进行面向对象的分析和设计，有TDD（测试驱动开发）和DDD（领域驱动设计）的经验。\n\n>熟悉Apache、NginX、Tomcat、WildFly、Weblogic等Web服务器和应用服务器的使用，熟悉多种服务器整合、集群和负载均衡的配置。\n\n>熟练的使用产品原型工具Axure，熟练的使用设计建模工具PowerDesigner和Enterprise Architect，熟练的使用Java开发环境Eclipse和IntelliJ，熟练的使用前端开发环境WebStorm，熟练的使用软件版本控制工具SVN和Git，熟练的使用项目构建和管理工具Maven和Gradle。\n\n>`说明：`上面罗列的这些东西并不是每一项你都要烂熟于心，根据企业招聘的具体要求可以做相应的有针对性的准备。我个人觉得前6项应该是最低要求，是作为一个Java开发者必须要具备的专业技能。\n项目经验\n\n#### 项目介绍\n\n>  本系统是X委托Y开发的用于Z的系统，系统包括A、B、C、D等模块。系统使用了Java企业级开发的开源框架E以及前端技术F。表示层运用了G架构，使用H作为视图I作为控制器并实现了REST风格的请求；业务逻辑层运用了J模式，并通过K实现事务、日志和安全性等功能，通过L实现缓存服务；持久层使用了M封装CRUD操作，底层使用N实现数据存取。整个项目采用了P开发模型。\n\n>`说明：`上面的描述中，E通常指Spring（Java企业级开发的一站式选择）；F最有可能是jQuery库及其插件或者是Bootstrap框架，当然如果要构建单页应用（SPA）最佳的方案是前端MVC框架（如AngularJS）和JavaScript模板引擎（如HandleBars）；G显然是MVC（模型-视图-控制），最有可能的实现框架是Spring MVC，除此之外还有Struts 2、JSF以及Apache为JSF提供的MyFaces实现，可以使用JSP作为MVC中的V，也可使用模板引擎（如Freemarker和Velocity）来生成视图，还可以是各种文档或报表（如Excel和PDF等），而Servlet和自定义的控制器是MVC中的C，当然Spring MVC中提供了作为前端控制器的DispatcherServlet；J通常是事务脚本，K应该是AOP（面向切面编程）技术，L目前广泛使用的有memcached和Redis；M的选择方案很多，最有可能的是Hibernate和MyBatis，也可以两种技术同时运用，但通常是将增删改交给Hibernate来处理，而复杂的查询则由MyBatis完成，此外TopLink、jOOQ也是优秀的持久层解决方案；底层的数据存取传统上是使用关系型数据库，可以是MySQL、Oracle、SQLServer、DB2等，随着大数据时代的来临，也可以采用NoSQL（如MongoDB、MemBase、BigTable等）和其他大数据存取方案（如GFS、HDFS等）；项目的开发模型P可以是瀑布模型、快速原型模型、增量模型、螺旋模型、喷泉模型、RAD模型等。\n\n#### 项目开发流程\n\n>可行性分析 >>> 可行性分析报告 / 项目开发计划书\n\n>需求分析 >>> 需求规格说明书 \n\n>OOAD（用例图、时序图、活动图）\n\n>界面原型：帮助理解需求、业务层设计时推导事务脚本\n\n>设计 >>> 概要设计说明书/详细设计说明书 \n\n>抽取业务实体（领域对象）：类图、E-R图（概念设计阶段）\n\n>分层架构：确定各层的技术实现方案（具体到使用的框架、数据库服务器、应用服务器等）。业务层设计：事务脚本模式（事务：用户发送一次请求就是一个事务；脚本：一个方法或一个函数；事务脚本：把一次请求封装为一个方法或一个函数；事务脚本模式：一个事务开始于脚本的打开，终止于脚本的关闭）。业务层涉及的对象有三种类型：事务脚本类（封装了业务的流程）、数据访问对象（DAO，封装了持久化操作）、数据传输对象（DTO，封装了失血/贫血领域对象），三者之间的关系是事务脚本类组合（聚合）数据访问对象，这二者都依赖了数据传输对象\n\n>正向工程（UML类图生成Java代码）和逆向工程（Java代码生成UML类图）\n\n>数据库物理设计（ER图转换成表间关系图、建库和建表、使用工具插入测试数据）\n\n>编码\n\n#### 测试 >>> 测试报告 / 缺陷报告 \n\n>单元测试：对软件中的最小可测试单元进行检查和验证，在Java中是对类中的方法进行测试，可以使用JUnit工具来实施。\n\n>集成测试：集成测试也叫组装测试或联合测试。在单元测试的基础上，将所有模块按照设计要求组装成为子系统进行测试。\n\n>系统测试：将已经确认的软件、硬件、外设、网络等元素结合在一起，进行信息系统的各种组装测试和确认测试，系统测试是针对整个产品系统进行的测试，目的是验证系统是否满足了需求规格的定义，找出与需求规格不符或与之矛盾的地方，从而提出更加完善的方案。\n\n>验收测试：在软件产品完成了单元测试、集成测试和系统测试之后，产品发布之前所进行的软件测试活动。它是技术测试的最后一个阶段，也称为交付测试。验收测试的目的是确保软件准备就绪，并且可以让最终用户将其用于执行软件的既定功能和任务。\n\n#### 交付和维护 >>> 用户手册 / 操作手册\n\n#### 项目管理\n\n>版本控制：CVS/SVN/Git\n\n>自动构建：Ant/Maven/Ivy/Gradle\n\n>持续集成：Hudson/Jenkins\n\n>系统架构\n\n>负载均衡服务器：F5、A10\n\n#### 应用服务器： \n\n>HTTP服务器：Apache、NginX（HTTP、反向代理、邮件代理服务器）\n\n>Servlet容器：Tomcat、Resin\n\n>EJB容器：WildFly（JBoss Application Server）、GlassFish、Weblogic、Websphere\n\n>数据库服务器：MySQL、Oracle\n\n#### 第三方工具（插件）应用\n\n>图表工具：基于jQuery的图表插件（如jQchart、Flot、Charted等）、Chart.js、Highcharts等。\n\n>报表工具：Pentaho Reporting、iReport、DynamicReports等。\n\n>文档处理：POI、iText等。\n\n>工作流引擎：jBPM、OpenWFE、Snaker、SWAMP等。\n\n>作业调度：Quartz、JobServer、Oddjob等。\n\n>缓存服务：EhCache、memcached、SwarmCache等。\n\n>消息队列：Open-MQ、ZeroMQ等。\n\n>安全框架：Shiro、PicketBox等。\n\n>搜索引擎：IndexTank、Lucene、ElasticSearch等。\n\n>Ajax框架：jQuery、ExtJS、DWR等。\n\n>UI插件：EasyUI、MiniUI等。\n\n>富文本框：UEditor、CKEditor等。\n\n#### 面试提问\n\n>项目是为哪个公司开发的？项目的投入是多少？\n\n>有多少人参与了项目开发？整个团队中，测试人员、开发人员、项目经理比例是多少？\n\n>项目开发了多长时间？项目总的代码量有多少？你的代码量有多少？\n\n>项目采用了怎样的开发模型或开发流程？项目的架构是怎样的？项目的技术选型是怎样的？\n\n>你在项目中承担了怎样的职责？是否经常开会或加班？项目完成后有哪些收获或是经验教训？\n\n>项目中最困难的部分是什么？如何解决团队开发时遇到的各种冲突？\n\n>说明：对于没有实际项目经验的，可以在前程无忧、智联招聘、拉勾网等网站上搜索招聘Java程序员的公司，找到他们的官方网站了解他们做的项目，查看项目的详细介绍，然后尝试完成其中一部分功能，最好请教一下高人看看自己的设计和代码是否恰当，这样相当于积累了一定的项目经验。\n面试题\n\n>  Java常见的面试题已经总结成《Java面试题集》、《Java面试题全集》以及《面试编程题拾遗》等文章陆续发布在我的CSDN博客，各大公司的面试题我会继续整理发布。\n\n### 其他\n\n#### 常见错误\n\n>只在计算机上练习\n不做行为面试题演练\n不做模拟面试训练\n试图死记硬背答案\n不大声说出你的解题思路\n代码不够严谨\n不写测试代码\n轻言放弃\n\n#### 面试时可以反问面试官的问题\n\n> 我注意到你们使用了X技术，请问你们是如何解决Y问题的？\n\n>为什么你们的产品使用了X技术而不是Y技术？据我所知，X技术虽然有A、B、C等好处，但也存在D和E问题，而Y技术可以解决D和E问题。\n\n>我对您说的X技术不是太熟悉，但我感觉它是一个不错的解决方案，您能多讲讲它的工作原理吗？\n\n>你们团队是如何进行项目规划的？一周会有几次例会？每周的代码量大概是多少？\n\n>就X问题我能想到的解决方案目前就只有Y了，请问您会怎么解决这个问题？\n\n#### S.A.R.法则\n\n>  S.A.R法则是指先描述问题的场景，然后解释你采取的行动，最后陈述结果。\n\n#### 算法题的五种解法\n\n>举例法：通过举例子发现其中的一般规则。\n\n>例子：圆内接三角形是锐角三角形的概率是多少？这是搜狗的一个面试题，可以在圆上随意画三个点连接成三角形就可以知道答案了。\n\n>模式匹配法\n\n>例子：一个有序数组的元素经过循环移动，元素的顺序变成\"3 4 5 6 1 2\"。怎样找到数组中最小的那个元素，假设数组中的元素各不相同。这个题目和折半查找看起来是那么相似，因此可以借鉴折半查找的算法，最小元素显然出现在\"mid > right\"的转折点。\n\n>简化推广法\n\n>说明：简化问题规模和数据类型，然后再发现通用的解法。\n\n>简单构造法\n\n>例子：找出\"abcde\"的所有可能的排列组合。先考虑只有\"a\"的情况，再考虑\"ab\"的情况，以此类推。最终你可能会得到一个递归公式。这种方法往往会演变成递归法。\n\n>数据结构头脑风暴法\n\n>例子：随机生成一些数字，并找出其中位数。这种问题可以在头脑中将你了解的数据结构过一遍，看看哪种是最合适的数据结构。上面的题目可以建立两个堆，一个大根堆和一个小根堆，较小的元素放在大根堆，较大的元素放在小根堆，如果两个堆不平衡，可以从其中一个堆取出元素放入另一个堆即可。最后中位数应该是两个堆的根之一。\n\n#### 录用谈判\n\n>要理直气壮的提出具体的待遇要求\n\n>开出比预期稍高的价码\n\n>不要只盯着薪水（很多公司更愿意就薪水之外的条件做出让步）\n\n>使用最合适的方法（可以尝试在电话或E-mail中谈判待遇）\n\n#### 自我评价\n\n>学习能力（搞IT行业的人需要不断的了解新的技术、工具和方法）\n\n>团队意识（相比个人英雄主义，IT行业更倡导团队合作）\n\n>抗压能力（很多IT企业的工作强度相对来说还是比较大的）\n\n\n","slug":"java00002","published":1,"updated":"2016-04-22T16:27:06.576Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cincmjy9d000zogo08vhqwlep"},{"title":"演示：HTML5应用之文件拖拽上传","date":"2015-08-18T15:22:44.000Z","_content":"一个HTML5拖拽上传的小例子。\nHTML5可以实现文件的拖拽上传与下载。但是目前技术有限，只能操作单个文件或拖拽多个文件通过循环遍历实现多个文件上传下载，至于文件夹的操作，由于技术水平有限，暂时还没有找到资料。\n\n需要注意的知识点有三个\n1. 拖拽事件的监听。取消浏览器默认的监听行为，重新添加拖拽监听事件。\n\n2. `formdata`的操作。通过`e.dataTransfer.files`获取文件对象，通过`formdata`实现表单的数据处理。\n\n3. `XMLHttpRequest`的操作。主要通过send方法发送到服务器。\n\n\n```html\n<!DOCTYPE HTML>\n<html>\n<head>\n<meta charset=\"gbk\">\n<title>演示：HTML5应用之文件拖拽上传</title>\n<script type=\"text/javascript\" src=\"http://www.helloweba.com/demo/js/jquery-1.7.2.min.js\"></script>\n<style type=\"text/css\">\n.demo{width:500px; margin:50px auto}\n#drop_area{width:100%; height:100px; border:3px dashed silver; line-height:100px; text-align:center; font-size:36px; color:#d3d3d3}\n#preview{width:500px; overflow:hidden}\n</style>\n</head>\n\n<body>\n\n\n<div id=\"main\">\n<div class=\"demo\">\n<div id=\"drop_area\">将图片拖拽到此区域</div>\n<div id=\"preview\"></div>\n</div>\n</div>\n\n<script type=\"text/javascript\">\n$(function(){\n//阻止浏览器默认行。\n$(document).on({\ndragleave:function(e){ //拖离\ne.preventDefault();\n},\ndrop:function(e){ //拖后放\ne.preventDefault();\n},\ndragenter:function(e){ //拖进\ne.preventDefault();\n},\ndragover:function(e){ //拖来拖去\ne.preventDefault();\n}\n});\n\n//================上传的实现\nvar box = document.getElementById('drop_area'); //拖拽区域\ndebugger\nbox.addEventListener(\"drop\",function(e){\ne.preventDefault(); //取消默认浏览器拖拽效果\nvar fileList = e.dataTransfer.files; //获取文件对象\n//检测是否是拖拽文件到页面的操作\nif(fileList.length == 0){\nreturn false;\n}\n//检测文件是不是图片\nif(fileList[0].type.indexOf('image') === -1){\nalert(\"您拖的不是图片！\");\nreturn false;\n}\n\n//拖拉图片到浏览器，可以实现预览功能\nvar img = window.webkitURL.createObjectURL(fileList[0]);\nvar filename = fileList[0].name; //图片名称\nvar filesize = Math.floor((fileList[0].size)/1024); \nif(filesize>500){\nalert(\"上传大小不能超过500K.\");\nreturn false;\n}\n//alert(filesize);\nvar str = \"<img src='\"+img+\"'><p>图片名称：\"+filename+\"</p><p>大小：\"+filesize+\"KB</p>\";\n$(\"#preview\").html(str);\n\n//上传\nxhr = new XMLHttpRequest();\nxhr.open(\"post\", \"upload.php\", true);\nxhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\nvar fd = new FormData();\nfd.append('mypic', fileList[0]);\n\nxhr.send(fd);\n\n\n},false);\n});\n</script>\n\n</body>\n</html>\n```","source":"_posts/HTML5应用之文件拖拽上传.md","raw":"title: 演示：HTML5应用之文件拖拽上传\ndate: 2015-08-018 23:22:44\npermalink: dropPic\ntags:\n- java\n- html5\ncategories:\n- java\n\n---\n一个HTML5拖拽上传的小例子。\nHTML5可以实现文件的拖拽上传与下载。但是目前技术有限，只能操作单个文件或拖拽多个文件通过循环遍历实现多个文件上传下载，至于文件夹的操作，由于技术水平有限，暂时还没有找到资料。\n\n需要注意的知识点有三个\n1. 拖拽事件的监听。取消浏览器默认的监听行为，重新添加拖拽监听事件。\n\n2. `formdata`的操作。通过`e.dataTransfer.files`获取文件对象，通过`formdata`实现表单的数据处理。\n\n3. `XMLHttpRequest`的操作。主要通过send方法发送到服务器。\n\n\n```html\n<!DOCTYPE HTML>\n<html>\n<head>\n<meta charset=\"gbk\">\n<title>演示：HTML5应用之文件拖拽上传</title>\n<script type=\"text/javascript\" src=\"http://www.helloweba.com/demo/js/jquery-1.7.2.min.js\"></script>\n<style type=\"text/css\">\n.demo{width:500px; margin:50px auto}\n#drop_area{width:100%; height:100px; border:3px dashed silver; line-height:100px; text-align:center; font-size:36px; color:#d3d3d3}\n#preview{width:500px; overflow:hidden}\n</style>\n</head>\n\n<body>\n\n\n<div id=\"main\">\n<div class=\"demo\">\n<div id=\"drop_area\">将图片拖拽到此区域</div>\n<div id=\"preview\"></div>\n</div>\n</div>\n\n<script type=\"text/javascript\">\n$(function(){\n//阻止浏览器默认行。\n$(document).on({\ndragleave:function(e){ //拖离\ne.preventDefault();\n},\ndrop:function(e){ //拖后放\ne.preventDefault();\n},\ndragenter:function(e){ //拖进\ne.preventDefault();\n},\ndragover:function(e){ //拖来拖去\ne.preventDefault();\n}\n});\n\n//================上传的实现\nvar box = document.getElementById('drop_area'); //拖拽区域\ndebugger\nbox.addEventListener(\"drop\",function(e){\ne.preventDefault(); //取消默认浏览器拖拽效果\nvar fileList = e.dataTransfer.files; //获取文件对象\n//检测是否是拖拽文件到页面的操作\nif(fileList.length == 0){\nreturn false;\n}\n//检测文件是不是图片\nif(fileList[0].type.indexOf('image') === -1){\nalert(\"您拖的不是图片！\");\nreturn false;\n}\n\n//拖拉图片到浏览器，可以实现预览功能\nvar img = window.webkitURL.createObjectURL(fileList[0]);\nvar filename = fileList[0].name; //图片名称\nvar filesize = Math.floor((fileList[0].size)/1024); \nif(filesize>500){\nalert(\"上传大小不能超过500K.\");\nreturn false;\n}\n//alert(filesize);\nvar str = \"<img src='\"+img+\"'><p>图片名称：\"+filename+\"</p><p>大小：\"+filesize+\"KB</p>\";\n$(\"#preview\").html(str);\n\n//上传\nxhr = new XMLHttpRequest();\nxhr.open(\"post\", \"upload.php\", true);\nxhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\nvar fd = new FormData();\nfd.append('mypic', fileList[0]);\n\nxhr.send(fd);\n\n\n},false);\n});\n</script>\n\n</body>\n</html>\n```","slug":"dropPic","published":1,"updated":"2016-04-22T16:27:06.576Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cincmjy9d0012ogo0hwitn2rv"},{"title":"Date、String、Calendar三种时间类型的转换","date":"2015-12-23T15:22:44.000Z","_content":"常见的三种java时间类型的转换，好记性不如烂笔头！\n```java\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Calendar;\nimport java.util.Date;\n\n/**\n * Created by dongxiaoxia on 2015/7/31.\n * 三种常见时间类型转换\n */\npublic class Test {\n    public static void main(String arg0[]){\n        System.out.println(getLastDayOfMonth());\n        System.out.println(CalendarToString(Calendar.getInstance(), \"yyyy-MM-dd HH:mm:ss\"));\n\n    }\n\n    public static Date getLastDayOfMonth(){\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        Calendar calendar = Calendar.getInstance();\n        calendar.set(Calendar.DAY_OF_MONTH, calendar\n                .getActualMaximum(Calendar.DAY_OF_MONTH));\n        calendar.set(Calendar.HOUR,23);\n        calendar.set(Calendar.MINUTE, 59);\n        calendar.set(Calendar.SECOND, 59);\n        return calendar.getTime();\n    }\n\n\t//String 转换为 Date\n    public static Date StringToDate(String strDate,String pattern) {\n        java.text.SimpleDateFormat sdf = new  java.text.SimpleDateFormat(pattern);//yyyy-mm-dd\n        Date date = null;\n        try {\n            date = sdf.parse(strDate);\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        return date;\n    }\n    \n\t//Date 转换为String\n    public static String DateToString(Date date,String pattern){\n        SimpleDateFormat sdf= new SimpleDateFormat(pattern);\n        String dateStr=sdf.format(date);\n        return dateStr;\n    }\n\n\t//Date 转换为 Calendar\n    public static Calendar DateToCalendar(Date date){\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        return  calendar;\n    }\n\n\t//Calendar 转换为 Date\n    public static Date CalendarToDate(Calendar calendar){\n       Date date =calendar.getTime();\n        return  date;\n    }\n\n\t//Calendar 转换为 String\n    public static String CalendarToString(Calendar calendar,String pattern){\n        //获取当前时间的具体情况,如年,月,日,week,date,分,秒等\n        Calendar calendat = Calendar.getInstance();\n        SimpleDateFormat sdf = new SimpleDateFormat(pattern);\n        String dateStr = sdf.format(calendar.getTime());\n        return dateStr;\n    }\n\n\t//String 转换为 Calendar\n    public static Calendar StringToCalendar(String strDate,String pattern){\n        SimpleDateFormat sdf= new SimpleDateFormat(pattern);\n        Date date = null;\n        try {\n            date = sdf.parse(strDate);\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        return calendar;\n    }\n\n}\n```\n\n\n\n\n","source":"_posts/Date、String、Calendar三种时间类型的转换.md","raw":"title: Date、String、Calendar三种时间类型的转换\ndate: 2015-12-23 23:22:44\npermalink: java00001\ntags:\n- Java\ncategories:\n- Java\n\n---\n常见的三种java时间类型的转换，好记性不如烂笔头！\n```java\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Calendar;\nimport java.util.Date;\n\n/**\n * Created by dongxiaoxia on 2015/7/31.\n * 三种常见时间类型转换\n */\npublic class Test {\n    public static void main(String arg0[]){\n        System.out.println(getLastDayOfMonth());\n        System.out.println(CalendarToString(Calendar.getInstance(), \"yyyy-MM-dd HH:mm:ss\"));\n\n    }\n\n    public static Date getLastDayOfMonth(){\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        Calendar calendar = Calendar.getInstance();\n        calendar.set(Calendar.DAY_OF_MONTH, calendar\n                .getActualMaximum(Calendar.DAY_OF_MONTH));\n        calendar.set(Calendar.HOUR,23);\n        calendar.set(Calendar.MINUTE, 59);\n        calendar.set(Calendar.SECOND, 59);\n        return calendar.getTime();\n    }\n\n\t//String 转换为 Date\n    public static Date StringToDate(String strDate,String pattern) {\n        java.text.SimpleDateFormat sdf = new  java.text.SimpleDateFormat(pattern);//yyyy-mm-dd\n        Date date = null;\n        try {\n            date = sdf.parse(strDate);\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        return date;\n    }\n    \n\t//Date 转换为String\n    public static String DateToString(Date date,String pattern){\n        SimpleDateFormat sdf= new SimpleDateFormat(pattern);\n        String dateStr=sdf.format(date);\n        return dateStr;\n    }\n\n\t//Date 转换为 Calendar\n    public static Calendar DateToCalendar(Date date){\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        return  calendar;\n    }\n\n\t//Calendar 转换为 Date\n    public static Date CalendarToDate(Calendar calendar){\n       Date date =calendar.getTime();\n        return  date;\n    }\n\n\t//Calendar 转换为 String\n    public static String CalendarToString(Calendar calendar,String pattern){\n        //获取当前时间的具体情况,如年,月,日,week,date,分,秒等\n        Calendar calendat = Calendar.getInstance();\n        SimpleDateFormat sdf = new SimpleDateFormat(pattern);\n        String dateStr = sdf.format(calendar.getTime());\n        return dateStr;\n    }\n\n\t//String 转换为 Calendar\n    public static Calendar StringToCalendar(String strDate,String pattern){\n        SimpleDateFormat sdf= new SimpleDateFormat(pattern);\n        Date date = null;\n        try {\n            date = sdf.parse(strDate);\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        return calendar;\n    }\n\n}\n```\n\n\n\n\n","slug":"java00001","published":1,"updated":"2016-04-22T16:27:06.567Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cincmjy9d0017ogo09exc1fyo"}],"PostAsset":[],"PostCategory":[{"post_id":"cincmjy8i0008ogo0kvcgpg1x","category_id":"cincmjy8i0009ogo02xdr0fzv","_id":"cincmjy8i000cogo0uqagli3l"},{"post_id":"cincmjy8i000dogo0dh0tnpgf","category_id":"cincmjy8i000eogo0a6f9sz67","_id":"cincmjy8y000hogo0vb5exvar"},{"post_id":"cincmjy8y000iogo02bhpsqsy","category_id":"cincmjy8y000jogo00e59xe5h","_id":"cincmjy8y000mogo0d56y6liu"},{"post_id":"cincmjy8y000nogo0inr2gq8v","category_id":"cincmjy8y000oogo0ivfgac3u","_id":"cincmjy8y000rogo0r3e1rck8"},{"post_id":"cincmjy9d000uogo0xd4h83q4","category_id":"cincmjy9d000vogo0hnu0l9a2","_id":"cincmjy9d000yogo0u1jth927"},{"post_id":"cincmjy9d000zogo08vhqwlep","category_id":"cincmjy8i000eogo0a6f9sz67","_id":"cincmjy9d0010ogo0ck2feeik"},{"post_id":"cincmjy9d0012ogo0hwitn2rv","category_id":"cincmjy8y000oogo0ivfgac3u","_id":"cincmjy9d0013ogo0rb4kahto"},{"post_id":"cincmjy9d0017ogo09exc1fyo","category_id":"cincmjy9d0018ogo0suv9oetu","_id":"cincmjy9d001bogo0k9xbr4kl"}],"PostTag":[{"post_id":"cincmjy8i0008ogo0kvcgpg1x","tag_id":"cincmjy8i000aogo0bdmyr764","_id":"cincmjy8i000bogo06fw77u4e"},{"post_id":"cincmjy8i000dogo0dh0tnpgf","tag_id":"cincmjy8y000fogo0pxb0bi2d","_id":"cincmjy8y000gogo0kqt1kf6l"},{"post_id":"cincmjy8y000iogo02bhpsqsy","tag_id":"cincmjy8y000kogo0aw70cs5i","_id":"cincmjy8y000logo0hc48r9tv"},{"post_id":"cincmjy8y000nogo0inr2gq8v","tag_id":"cincmjy8y000pogo0q58xhy3w","_id":"cincmjy8y000qogo0se4os471"},{"post_id":"cincmjy9d000uogo0xd4h83q4","tag_id":"cincmjy9d000wogo0km5rzmhi","_id":"cincmjy9d000xogo0z7rpen04"},{"post_id":"cincmjy9d000zogo08vhqwlep","tag_id":"cincmjy8y000fogo0pxb0bi2d","_id":"cincmjy9d0011ogo0mx2c81ey"},{"post_id":"cincmjy9d0012ogo0hwitn2rv","tag_id":"cincmjy8y000pogo0q58xhy3w","_id":"cincmjy9d0015ogo046a1pkyq"},{"post_id":"cincmjy9d0012ogo0hwitn2rv","tag_id":"cincmjy9d0014ogo0artpdnqm","_id":"cincmjy9d0016ogo0gh1ldfjv"},{"post_id":"cincmjy9d0017ogo09exc1fyo","tag_id":"cincmjy9d0019ogo0dgttxgrc","_id":"cincmjy9d001aogo0pubot7fm"}],"Tag":[{"name":"html","_id":"cincmjy8i000aogo0bdmyr764"},{"name":"Hexo","_id":"cincmjy8y000fogo0pxb0bi2d"},{"name":"hexo","_id":"cincmjy8y000kogo0aw70cs5i"},{"name":"java","_id":"cincmjy8y000pogo0q58xhy3w"},{"name":"Spring","_id":"cincmjy9d000wogo0km5rzmhi"},{"name":"html5","_id":"cincmjy9d0014ogo0artpdnqm"},{"name":"Java","_id":"cincmjy9d0019ogo0dgttxgrc"}]}}