{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"themes/pacman/source/js/jquery-2.1.0.min.js","path":"js/jquery-2.1.0.min.js","modified":0},{"_id":"themes/pacman/source/img/touxiang.jpg","path":"img/touxiang.jpg","modified":0},{"_id":"themes/pacman/source/img/pacman.jpg","path":"img/pacman.jpg","modified":0},{"_id":"themes/pacman/source/img/logo.svg","path":"img/logo.svg","modified":0},{"_id":"themes/pacman/source/img/favicon.ico","path":"img/favicon.ico","modified":0},{"_id":"themes/pacman/source/img/author.jpg","path":"img/author.jpg","modified":0},{"_id":"themes/pacman/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":0},{"_id":"themes/pacman/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":0},{"_id":"themes/pacman/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":0},{"_id":"themes/pacman/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":0},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":0},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":0},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":0},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":0},{"_id":"themes/pacman/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":0},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/pacman/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/pacman/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0},{"_id":"themes/pacman/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/pacman/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/pacman/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0},{"_id":"themes/pacman/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/pacman/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/pacman/source/css/style.styl","path":"css/style.styl","modified":0}],"Cache":[{"_id":"source/404.md","shasum":"4c694b948cc61020be6774960b030f3c3a2e74fd","modified":1439716350505},{"_id":"source/_posts/HTML5应用之文件拖拽上传.md","shasum":"bad97dc5fdf54c5cf1c84c7e7591ecb78838e36c","modified":1439912318464},{"_id":"source/_posts/SpringMVC Controller接收List Map或List Object.md","shasum":"61caf392940b876647d2ff4d01b1dcece5f95520","modified":1450880896334},{"_id":"source/_posts/hello-world.md","shasum":"774b507901d9b17991ace2a70263b6dd6d11999a","modified":1438434706899},{"_id":"source/_posts/新的开始.md","shasum":"ef114439e9d6ee906b493b88bd8a008c0383f21f","modified":1439715473683},{"_id":"source/_posts/用Hexo与GitHub打造属于自己的博客.md","shasum":"ca4b8fceec9af66df30441bda7754b7ebfc642f7","modified":1439567747743},{"_id":"source/_posts/网站后台页面左侧收缩折叠效果.md","shasum":"184974f43fd71fa5bc602318b768756fc9a93858","modified":1439997390674},{"_id":"source/about/index.md","shasum":"c3fe57d960536e6c66a41333b0e51082cf88430a","modified":1439112129731},{"_id":"source/categories/index.md","shasum":"f6b05f97bed3a2acfbe0287536d3902991748c58","modified":1439092962620},{"_id":"source/scaffolds/draft.md","shasum":"deb6a1b7eff376185f860a645d8cc28d75e6c28a","modified":1438434706884},{"_id":"source/scaffolds/page.md","shasum":"083e87c9cabf786d358a46a9652dc20349421d56","modified":1438434706874},{"_id":"source/scaffolds/post.md","shasum":"1819e73bbcc49718d8947a64da249ff2dacb5592","modified":1438434706874},{"_id":"source/search/index.md","shasum":"569876de89dff5211a5448b1bb65a5857173cf3c","modified":1439108684833},{"_id":"source/tags/index.md","shasum":"a59df0a497bf9f98fe3e6c8d9e9022e1c5795205","modified":1439092907711},{"_id":"themes/pacman/LICENSE","shasum":"4847e5a63399a0ef85af6844fd19a48c69a8869c","modified":1439045514925},{"_id":"themes/pacman/README.md","shasum":"9f0be78dbd1f34f44a955cf02bbe03f979c7a1e6","modified":1439045514925},{"_id":"themes/pacman/_config.yml","shasum":"f7cb5af169889cb582d6c21d0bb284879fbb2f24","modified":1439115765571},{"_id":"themes/pacman/languages/default.yml","shasum":"9ffaaf4dbe83f1f343ea702e59493dc6f3f46877","modified":1439107186311},{"_id":"themes/pacman/languages/zh-CN.yml","shasum":"d74f0eba966afe7b973d3ac2a8554b72a439ed1b","modified":1439106296998},{"_id":"themes/pacman/languages/zh-TW.yml","shasum":"08a6eae3c1e48f96690ca4c29ce67f8d6ff9a8bd","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/after_footer.ejs","shasum":"db09ae62aa29b4c6495c698f9bb14d718a637423","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/archive.ejs","shasum":"2241d64f001c96cffa4a129ebea177a5421d147d","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/article.ejs","shasum":"8e446ec97c30774807657fc9fb7bceb6905699aa","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/categories.ejs","shasum":"2b77ff6cbc8571cab27c3bdc4ad51a79510bbca2","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/footer.ejs","shasum":"65ce8a0a491867e957c350a44ab20e1b39692b95","modified":1439114920590},{"_id":"themes/pacman/layout/_partial/google_analytics.ejs","shasum":"7ebccafcfdaca5cb5b8f4f06548f1d50958726ef","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/head.ejs","shasum":"dc9ecf58ae7990f16089784e33753dd94ed4becc","modified":1439115000722},{"_id":"themes/pacman/layout/_partial/header.ejs","shasum":"7efdecef83e50cff1c66ed5f47c619f69c9dde63","modified":1439114828312},{"_id":"themes/pacman/layout/_partial/pagination.ejs","shasum":"6cf37f844f150af4bbe212610da61e5140317de9","modified":1439108910048},{"_id":"themes/pacman/layout/_partial/post/article.ejs","shasum":"d6f989cf2be408cb8573629f260c75b20df42982","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/post/catetags.ejs","shasum":"fa03892b35dc344de7a722b9393978286c0376fe","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/post/comment.ejs","shasum":"f0e21c685c0e3fe78c9b5f5f6d4eb9c1b5cf036f","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/post/footer.ejs","shasum":"a4dc14cd47d22f1b73860bc3c7f424eae3d282dd","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/post/gallery.ejs","shasum":"6bd8723f24b192158e6e840bf14028503ad50045","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/post/header.ejs","shasum":"953e6feaf7b156fab79165342e9bca0ef54384ba","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/post/jiathis.ejs","shasum":"5043a5058887cf6ad15182cfde345d36cb6ab323","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/post/pagination.ejs","shasum":"0ce7318c7fda0e787d2b0cb13d24b566bdb0921f","modified":1439106409344},{"_id":"themes/pacman/layout/_partial/search.ejs","shasum":"1d84fc23d6b7095fe513dc0707877b237d013d6a","modified":1439110328064},{"_id":"themes/pacman/layout/_partial/sidebar.ejs","shasum":"565979955cecaab9105b23f668aa63bf97e9c20e","modified":1439045514941},{"_id":"themes/pacman/layout/_partial/tags.ejs","shasum":"c5c858742b29e6364da2e1d098e7d6cd8cef038f","modified":1439045514941},{"_id":"themes/pacman/layout/_widget/category.ejs","shasum":"ab647b97f55e550af54598dee0c4bb132ef43c46","modified":1439045514941},{"_id":"themes/pacman/layout/_widget/links.ejs","shasum":"0d5ef5c05694fb61020fedffbdebe02cb6361c8d","modified":1439045514941},{"_id":"themes/pacman/layout/_widget/rss.ejs","shasum":"ebfb11bdd603cd6e4dcf3949cc52e38009615c25","modified":1439045514941},{"_id":"themes/pacman/layout/_widget/tag.ejs","shasum":"b994f8c43b190b852568e355944d5af151dcefe6","modified":1439045514941},{"_id":"themes/pacman/layout/_widget/tagcloud.ejs","shasum":"317d420f5448c7452290e37f0ed8516cb73f4068","modified":1439045514941},{"_id":"themes/pacman/layout/archive.ejs","shasum":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1439045514941},{"_id":"themes/pacman/layout/category.ejs","shasum":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1439045514941},{"_id":"themes/pacman/layout/index.ejs","shasum":"dc463eb532313dcdddea9c1a0c8f5a35dbd55f6e","modified":1439045514941},{"_id":"themes/pacman/layout/_widget/archive.ejs","shasum":"b82d7fb0d1119738a9f9bb747d415e8c99e454ae","modified":1439045514941},{"_id":"themes/pacman/layout/page.ejs","shasum":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1439045514941},{"_id":"themes/pacman/layout/post.ejs","shasum":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1439045514941},{"_id":"themes/pacman/layout/tag.ejs","shasum":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1439045514941},{"_id":"themes/pacman/layout/layout.ejs","shasum":"4a5ff6004214906b9ca159fc4187b8923c7bcd11","modified":1439045514941},{"_id":"themes/pacman/scripts/fancybox.js","shasum":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1439045514941},{"_id":"themes/pacman/source/css/_base/code.styl","shasum":"577798b3c101be20b7ceb3d1e0421b4c4426d0ce","modified":1439045514941},{"_id":"themes/pacman/source/css/_base/font.styl","shasum":"772749cc7c6a47410bb667f8127b37767d029283","modified":1439045514957},{"_id":"themes/pacman/source/css/_base/public.styl","shasum":"a9d7524315303734f3f47e5e875a14b867888a50","modified":1439045514957},{"_id":"themes/pacman/source/css/_partial/article.styl","shasum":"ffc40f735883bea18297dd380ad78ed554c9d5fb","modified":1439045514957},{"_id":"themes/pacman/source/css/_base/variable.styl","shasum":"07e46b4346982e51a5bd498d99976d28628d9f44","modified":1439094601105},{"_id":"themes/pacman/source/css/_partial/aside.styl","shasum":"ac937e5921c4084f29249819d51224ebc4296225","modified":1439045514957},{"_id":"themes/pacman/source/css/_partial/duoshuo.styl","shasum":"3ec423b734639614fbd11ec2c3445d3a03f5231d","modified":1439045514957},{"_id":"themes/pacman/source/css/_partial/footer.styl","shasum":"65c0ea98fdda93d266f9bc5b9af9032c46fb479b","modified":1439045514957},{"_id":"themes/pacman/source/css/_partial/header.styl","shasum":"7d4ef4b2b1916909f8f198519f576c3d712d7423","modified":1439045514957},{"_id":"themes/pacman/source/css/_partial/gallery.styl","shasum":"b85a32c4bc71f720d74143a17a202fe8fa067950","modified":1439045514957},{"_id":"themes/pacman/source/css/_partial/index.styl","shasum":"a00aafe86d0238bf58f093834b6ae7406e918ec0","modified":1439045514957},{"_id":"themes/pacman/source/css/_partial/helper.styl","shasum":"554a7bc576b1419f0055ff56113d4be803b118d1","modified":1439045514957},{"_id":"themes/pacman/source/css/style.styl","shasum":"fd9224ce13feac0a9b406c28d9bafbd4deda42f5","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"6394c48092085788a8c0ef72670b0652006231a1","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.css","shasum":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.js","shasum":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1439045514957},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.pack.js","shasum":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1439045514957},{"_id":"themes/pacman/source/font/FontAwesome.otf","shasum":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1439045514972},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.eot","shasum":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1439045514972},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.ttf","shasum":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1439045514972},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.woff","shasum":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1439045514972},{"_id":"themes/pacman/source/font/fontawesome-webfont.eot","shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1439045514972},{"_id":"themes/pacman/source/font/fontawesome-webfont.woff","shasum":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1439045514972},{"_id":"themes/pacman/source/img/author.jpg","shasum":"78f534fbda5eb4fdb4e4ce01dce0bfc39e2f729d","modified":1439045514972},{"_id":"themes/pacman/source/img/favicon.ico","shasum":"fa2c03e9eb35f2f423a1c85c85c278649a857532","modified":1439045514972},{"_id":"themes/pacman/source/img/logo.svg","shasum":"cef3f0bb4bf3661dd3a58c81b9a7be79601a0bfb","modified":1439045514972},{"_id":"themes/pacman/source/img/pacman.jpg","shasum":"7e873f2f40a52f8c679302b88bb0809a6abafe5c","modified":1439045514972},{"_id":"themes/pacman/source/img/touxiang.jpg","shasum":"cc7bd3acd034f0bacb53b0c57e7172d63f8486cf","modified":1399891514556},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.svg","shasum":"739808e56a56e10a03bc93d03eb55abd19590942","modified":1439045514972},{"_id":"themes/pacman/source/font/fontawesome-webfont.ttf","shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1439045514972},{"_id":"themes/pacman/source/js/jquery-2.1.0.min.js","shasum":"0faaa0c56f563693cdeafa299f97e3d5bd6fcdd8","modified":1439045514972},{"_id":"themes/pacman/source/font/fontawesome-webfont.svg","shasum":"a275426daefd3716c53561fad121d258a7f05b47","modified":1439045514972},{"_id":"public/404.html","modified":1450880906422,"shasum":"1e6e534e4a636c4d8825a44dc67bf9da6ccb6a43"},{"_id":"public/tags/index.html","modified":1450880906438,"shasum":"b57047ac3509d1f8d008faee62a1d72fcf510c85"},{"_id":"public/search/index.html","modified":1450880906453,"shasum":"fd4fc8c6cfb9d5ca4c0cbf2eb3f88b3e271d361d"},{"_id":"public/scaffolds/post.html","modified":1450880906453,"shasum":"599d5da2e5e972f878adc33233ff36d8371694d5"},{"_id":"public/scaffolds/page.html","modified":1450880906471,"shasum":"f8ee269c9f8015fc9f819d41d93e581916a9ee35"},{"_id":"public/scaffolds/draft.html","modified":1450880906471,"shasum":"daf9c52d069927680f2e504d63d4521e830c32f9"},{"_id":"public/categories/index.html","modified":1450880906486,"shasum":"6c7f7a6a681c7e790ea3509edf55cd8b66bfdc33"},{"_id":"public/about/index.html","modified":1450880906518,"shasum":"bba45c7b529af633443d12465133874fd5bf9d8b"},{"_id":"public/2015/12/23/hello-world/index.html","modified":1450880906533,"shasum":"1bc6f24668a72b5d9cb30be4fb85d53c11399790"},{"_id":"public/2015/12/23/spring00001/index.html","modified":1450880906580,"shasum":"0eea297ac1bfd4857db7e3413b16015215828b7f"},{"_id":"public/2015/08/19/hexo001/index.html","modified":1450880906611,"shasum":"52d615aa72665ae5009c7b8a99455ddaf7f813fb"},{"_id":"public/2015/08/18/dropPic/index.html","modified":1450880906627,"shasum":"de114ca76db04c133e061f267cddeeec0c90b6c0"},{"_id":"public/2015/08/15/hexo-writing/index.html","modified":1450880906658,"shasum":"761d2564bbe00650590d95dffb32e84aae769b2e"},{"_id":"public/2015/08/02/hexo001/index.html","modified":1450880906674,"shasum":"6f690b6e66a810bd0acfcf3a2b8b8c9c05d25b10"},{"_id":"public/archives/index.html","modified":1450880906689,"shasum":"c880489577f76a2c0b556ccae7a1c5ec258868e2"},{"_id":"public/archives/2015/index.html","modified":1450880906705,"shasum":"6b5bd97cd80c93085f048aba2fc15b423de80a88"},{"_id":"public/archives/2015/08/index.html","modified":1450880906720,"shasum":"763ffcfe367d982d69bdffcb26e177aeda41757b"},{"_id":"public/archives/2015/12/index.html","modified":1450880906720,"shasum":"65c4b7ccba06bde1f689e080a303a0dabd961de1"},{"_id":"public/index.html","modified":1450880906736,"shasum":"b31bcc4db2dc077137a0165e278848324f9712d8"},{"_id":"public/tags/html/index.html","modified":1450880906736,"shasum":"f0ba3f28e99fceb99fe90667be7d199795abf741"},{"_id":"public/tags/Hexo/index.html","modified":1450880906752,"shasum":"83884586fcbdaed021472bbf25e30cfe134a57e4"},{"_id":"public/tags/hexo/index.html","modified":1450880906752,"shasum":"55cae0f67f4eefdcd56f1ab4fbbb1ca68f0bde37"},{"_id":"public/tags/Spring/index.html","modified":1450880906767,"shasum":"56bae24c1bbc238a62b3c6fa9665effa85c6a9c8"},{"_id":"public/tags/java/index.html","modified":1450880906767,"shasum":"363b180e464103d5bd590b1dd9905d0ff404beac"},{"_id":"public/tags/html5/index.html","modified":1450880906767,"shasum":"ce06d08c6a435c51a23180013949095c3ab11446"},{"_id":"public/categories/html/index.html","modified":1450880906783,"shasum":"83e4125f8a86845edbb9508e5a664b6ef95a46e4"},{"_id":"public/categories/Hexo/index.html","modified":1450880906783,"shasum":"ff0b65de9809e0ce348956751153cf5cb1fc3fa9"},{"_id":"public/categories/hexo/index.html","modified":1450880906783,"shasum":"b51e3dcc4b09d8bc8606357e6fa3bf7cb8f52a9a"},{"_id":"public/categories/Spring/index.html","modified":1450880906798,"shasum":"d609e16d5e39d5cd7c86fa79793c70f683ac509a"},{"_id":"public/categories/java/index.html","modified":1450880906798,"shasum":"1f1c4eac515344be8a3f8f3f1c7e3ded9d6acbc7"}],"Category":[{"name":"html","_id":"ciiiwzraw0009momf03ysuj86"},{"name":"Hexo","_id":"ciiiwzrb5000emomfkfj0l5sp"},{"name":"hexo","_id":"ciiiwzrb9000jmomfyhkdh2yc"},{"name":"Spring","_id":"ciiiwzrbo000pmomfdsljjsty"},{"name":"java","_id":"ciiiwzrbw000umomf9wgvv9e6"}],"Data":[],"Page":[{"layout":"default","_content":"<html>\n    <head>\n         <meta charset=\"UTF-8\" />\n         <title>404</title>                                                                                                                                        \n    </head>\n    <body>\n         <script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"></script>\n    </body>\n</html>","source":"404.md","raw":"---\nlayout: default\n---\n<html>\n    <head>\n         <meta charset=\"UTF-8\" />\n         <title>404</title>                                                                                                                                        \n    </head>\n    <body>\n         <script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"></script>\n    </body>\n</html>","date":"2015-12-23T14:02:01.112Z","updated":"2015-08-16T09:12:30.505Z","path":"404.html","title":"","comments":1,"_id":"ciiiwzr9j0000momf2oakm3t2"},{"layout":"tags","title":"tags","_content":"","source":"tags/index.md","raw":"layout: tags\ntitle: tags\n---","date":"2015-12-23T14:02:01.128Z","updated":"2015-08-09T04:01:47.711Z","path":"tags/index.html","comments":1,"_id":"ciiiwzra50001momfg7fzb7hr"},{"layout":"search","title":"search","_content":"","source":"search/index.md","raw":"layout: search\ntitle: search\n----","date":"2015-12-23T14:02:01.128Z","updated":"2015-08-09T08:24:44.833Z","path":"search/index.html","comments":1,"_id":"ciiiwzra70002momfyvatzl2t"},{"title":"[object Object]","date":"2015-12-23T14:02:01.128Z","tags":null,"_content":"","source":"scaffolds/post.md","raw":"title: {{ title }}\ndate: {{ date }}\ntags:\n---\n","updated":"2015-08-01T13:11:46.874Z","path":"scaffolds/post.html","comments":1,"layout":"page","_id":"ciiiwzra90003momfrafsyrnf"},{"title":"[object Object]","date":"2015-12-23T14:02:01.128Z","_content":"","source":"scaffolds/page.md","raw":"title: {{ title }}\ndate: {{ date }}\n---\n","updated":"2015-08-01T13:11:46.874Z","path":"scaffolds/page.html","comments":1,"layout":"page","_id":"ciiiwzrad0004momft51vbeuk"},{"title":"[object Object]","tags":null,"_content":"","source":"scaffolds/draft.md","raw":"title: {{ title }}\ntags:\n---\n","date":"2015-12-23T14:02:01.128Z","updated":"2015-08-01T13:11:46.884Z","path":"scaffolds/draft.html","comments":1,"layout":"page","_id":"ciiiwzrae0005momfshg27xom"},{"layout":"categories","title":"categories","_content":"","source":"categories/index.md","raw":"layout: categories\ntitle: categories\n---","date":"2015-12-23T14:02:01.128Z","updated":"2015-08-09T04:02:42.620Z","path":"categories/index.html","comments":1,"_id":"ciiiwzrah0006momf3yjntnmz"},{"title":"Resume","layout":"post","date":"2015-08-09T07:23:59.000Z","_content":"# 陈文东(810196858@qq.com)\n## 个人信息\n - 本科/五邑大学大学(2011.9-2015.7)/电子信息工程\n - 工作年限：1年\n - 技术博客：http://www.dongxiaoxia.xyz\n - 地点：广州\n \n## 工作经历\n### 宇宙中心\n#### XXXX项目（2013.10-至今）\n - XXXXXXXXXXXXXXXXX\n - XXXXXXXXXXXXXXXXXX\n - XXXXXXX\n - XXXXXXXXXXXXXXXXXXXXXX \n \n## 技能列表\n熟悉：Android/Java\n了解：C#/WP，Python，HTML, Markdown等","source":"about/index.md","raw":"title: Resume  \nlayout: post  \ndate: 2015-08-09 15:23:59\n---\n# 陈文东(810196858@qq.com)\n## 个人信息\n - 本科/五邑大学大学(2011.9-2015.7)/电子信息工程\n - 工作年限：1年\n - 技术博客：http://www.dongxiaoxia.xyz\n - 地点：广州\n \n## 工作经历\n### 宇宙中心\n#### XXXX项目（2013.10-至今）\n - XXXXXXXXXXXXXXXXX\n - XXXXXXXXXXXXXXXXXX\n - XXXXXXX\n - XXXXXXXXXXXXXXXXXXXXXX \n \n## 技能列表\n熟悉：Android/Java\n了解：C#/WP，Python，HTML, Markdown等","updated":"2015-08-09T09:22:09.731Z","path":"about/index.html","comments":1,"_id":"ciiiwzran0007momf67ymwr4n"}],"Post":[{"title":"网站后台页面左侧收缩折叠效果","date":"2015-08-19T15:11:44.000Z","_content":"\n```\n<html>\n<head>\n<meta http-equiv=Content-Type content=\"text/html; charset=utf-8\">\n<title>网站后台页面左侧收缩折叠效果 - 源码之家</title>\n<style type=\"text/css\">\n*{margin:0;padding:0;list-style-type:none; font-size:12px}\n</style>\n<script type=\"text/javascript\">\nfunction switchSysBar(){\n\tif(switchPoint.innerText==3){\n\t\tswitchPoint.innerText=4\n\t\tdocument.all(\"frmtitle\").style.display=\"none\"\n\t}else{\n\t\tswitchPoint.innerText=3\n\t\tdocument.all(\"frmtitle\").style.display=\"\"\n\t}\n}\n\nfunction switchSysBarInfo(){\n\tswitchPoint.innerText=3\n\tdocument.all(\"frmtitle\").style.display=\"\"\n}\n</script>\n</head>\n<body>\n\n\t<table width=\"100%\" height=\"100%\" border=0 cellpadding=\"0\" cellSpacing=0 style=\"background:#000;\">\n\t\t<tr>\n\t\t\t<td height=\"80\" style=\"font-size:28px; color:#FFF;text-align:center;font-weight:800;\">顶部导航</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td height=\"100%\" bgcolor=\"#ffffff\">\n\t\t\t\t<table width=\"100%\" height=\"100%\" cellpadding=\"0\" cellSpacing=0 border=0 borderColor=\"#000\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr> \n\t\t\t\t\t\t\t<td width=\"200\" id=\"frmtitle\" style=\"font-size:28px;text-align:center;font-weight:800;\">左侧列表</td>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<td bgcolor=\"#000\" onClick=\"switchSysBar()\" style=\"height:100%;width:12px;text-align:center;cursor:pointer;\">\n\t\t\t\t\t\t\t\t<span id=\"switchPoint\" title=\"打开/关闭左边导航栏\" style=\"color:#666;cursor:hand;font-family:Webdings;font-size:12px;\">3</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<td style=\"font-size:28px;text-align:center;font-weight:800;\">\n\t\t\t\t\t\t     \n\t\t\t\t\t\t\t\t<h2 style=\"font-size:20px;color:#000;\">右侧正文部分</h2>\n                                \n       <div style=\"text-align:center;\">\n<p>来源：<a href=\"http://www.mycodes.net/\" target=\"_blank\">源码之家</a></p>\n</div>                         \n                                \n                                </td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\n</body>\n</html>\n```","source":"_posts/网站后台页面左侧收缩折叠效果.md","raw":"title: 网站后台页面左侧收缩折叠效果\ndate: 2015-08-19 23:11:44\npermalink: hexo001\ntags:\n- html\ncategories:\n- html\n\n---\n\n```\n<html>\n<head>\n<meta http-equiv=Content-Type content=\"text/html; charset=utf-8\">\n<title>网站后台页面左侧收缩折叠效果 - 源码之家</title>\n<style type=\"text/css\">\n*{margin:0;padding:0;list-style-type:none; font-size:12px}\n</style>\n<script type=\"text/javascript\">\nfunction switchSysBar(){\n\tif(switchPoint.innerText==3){\n\t\tswitchPoint.innerText=4\n\t\tdocument.all(\"frmtitle\").style.display=\"none\"\n\t}else{\n\t\tswitchPoint.innerText=3\n\t\tdocument.all(\"frmtitle\").style.display=\"\"\n\t}\n}\n\nfunction switchSysBarInfo(){\n\tswitchPoint.innerText=3\n\tdocument.all(\"frmtitle\").style.display=\"\"\n}\n</script>\n</head>\n<body>\n\n\t<table width=\"100%\" height=\"100%\" border=0 cellpadding=\"0\" cellSpacing=0 style=\"background:#000;\">\n\t\t<tr>\n\t\t\t<td height=\"80\" style=\"font-size:28px; color:#FFF;text-align:center;font-weight:800;\">顶部导航</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td height=\"100%\" bgcolor=\"#ffffff\">\n\t\t\t\t<table width=\"100%\" height=\"100%\" cellpadding=\"0\" cellSpacing=0 border=0 borderColor=\"#000\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr> \n\t\t\t\t\t\t\t<td width=\"200\" id=\"frmtitle\" style=\"font-size:28px;text-align:center;font-weight:800;\">左侧列表</td>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<td bgcolor=\"#000\" onClick=\"switchSysBar()\" style=\"height:100%;width:12px;text-align:center;cursor:pointer;\">\n\t\t\t\t\t\t\t\t<span id=\"switchPoint\" title=\"打开/关闭左边导航栏\" style=\"color:#666;cursor:hand;font-family:Webdings;font-size:12px;\">3</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<td style=\"font-size:28px;text-align:center;font-weight:800;\">\n\t\t\t\t\t\t     \n\t\t\t\t\t\t\t\t<h2 style=\"font-size:20px;color:#000;\">右侧正文部分</h2>\n                                \n       <div style=\"text-align:center;\">\n<p>来源：<a href=\"http://www.mycodes.net/\" target=\"_blank\">源码之家</a></p>\n</div>                         \n                                \n                                </td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\n</body>\n</html>\n```","slug":"hexo001","published":1,"updated":"2015-08-19T15:16:30.674Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiiwzraq0008momf766narln"},{"title":"用Hexo与Github打造属于自己的博客","date":"2015-08-02T12:22:44.000Z","_content":"根据转载：{% link 粉丝日志 http://blog.fens.me/hexo-blog-github/ true 粉丝日志 %}修改\n## Hexo介绍\n\n&emsp;&emsp;Hexo是一个简单的、轻量的、基于Node的一个静态博客框架。通过Hexo我们可以快速创建自己的博客，仅需要几条命令就可以完成。发布时，Hexo可以部署在自己的Node服务器上面，也可以部署github上面。对于个人用户来说，部署在github上好处颇多，不仅可以省去服务器的成本，还可以减少各种系统运维的麻烦事(系统管理、备份、网络)。所以，基于github的个人站点，正在开始流行起来….\n&emsp;&emsp;Hexo的官方网站：http://hexo.io/\n## Hexo安装\n### 安装Git\n&emsp;&emsp;自行百度\n### 安装node.js\n&emsp;&emsp;node.js官网https://nodejs.org/\n### 安装Hexo\n&emsp;&emsp;命令行输入*npm install -g hexo*，等待安装完成。\n\n&emsp;&emsp;可能会出现下载不了的问题，可以设置npm国内镜像。镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:\n1. 通过config命令\nnpm config set registry https://registry.npm.taobao.org \nnpm info underscore （如果上面配置正确这个命令会有字符串response）\n2. 命令行指定\nnpm --registry https://registry.npm.taobao.org info underscore \n3. 编辑 ~/.npmrc 加入下面内容\nregistry = https://registry.npm.taobao.org\n搜索镜像: https://npm.taobao.org\n\n&emsp;&emsp;建立或使用镜像,参考: https://github.com/cnpm/cnpmjs.org\n\n&emsp;&emsp;安装成功后在命令行输入hexo可以查看hexo的命令。\n\n## Hexo使用\n&emsp;&emsp;hexo使用超级简单，仅仅几个命令还就可以运行博客的各种操作。下面列出了hexo使用的一个简单流程与命令。\n1. 创建项目主目录\n&emsp;&emsp;可以在电脑上任意创建作为hexo博客项目的文件夹，以后所有的hexo操作都要cd到项目文件夹根目录下运行。\n3. 运行命令hexo init\n&emsp;&emsp;我们看到当前在目录下，出现项目的各个文件夹与文。\n4. 运行命令hexo g\n&emsp;&emsp;在本地目录下，会生成一个public的目录，里面包括了所有静态化的文件。\n&emsp;&emsp;要说明的一点是hexo的静态博客框架，那什么是静态博客呢？静态博客，是只包含html, javascript, css文件的网站，没有动态的脚本。虽然我们是用Node进行的开发，但博客的发布后就与Node无关了。在发布之前，我们要通过一条命令，把所有的文章都做静态化处理，就是生成对应的html, javascript, css，使得所有的文章都是由静态文件组成的。\n5. 运行命令npm install\n&emsp;&emsp;注意不要漏了运行*npm install*命令，否则hexo s命令将报错。\n6. 运行命令hexo s\n&emsp;&emsp;在命令行窗口会提示：Hexo is running iat http://localhost:4000 Press Ctrl+C to stop.。这时我们就可以打开连接访问我们的博客了。\n\n&emsp;&emsp;是不是很简单呢！接下来，我们要对Hexo做更全面的了解，才能做出个性化的博客。\n\n## 部署Hexo到github\n### 配置Git\n&emsp;&emsp;Git是分布式的代码管理工具，远程的代码管理是基于SSH的，所以要使用远程的Git则需要SSH的配置。github的SSH配置如下：\n1. 设置Git的user name和email：\n$ git config --global user.name \"dongxiaoxia\"\n$ git config --global user.email \"dongxiaoxia@example.com\"\n2. 生成SSH密钥过程：\n查看是否已经有了ssh密钥：cd ~/.ssh\n如果没有密钥则不会有此文件夹，有则备份删除\n2. 生成密钥：\n运行命令$ ssh-keygen -t rsa -C “dongxiaoxia@example.com”\n文件夹默认，输入两次密码即可。\nYour identification has been saved in /home/tekkub/.ssh/id_rsa.\nYour public key has been saved in /home/tekkub/.ssh/id_rsa.pub.\nThe key fingerprint is:\n………………\n最后得到了两个文件：id_rsa和id_rsa.pub\n4. 在github上添加ssh密钥：\n这要添加的是“id_rsa.pub”里面的公钥。登录github，打开项目主页，在setting页面上找到SSH KEY设置，然后添加ssh，标题随意。\n5. 接着打开git ，输入命令*$ ssh -T git@github.com*测试连接是否成功。\n\n### 部署到github\n&emsp;&emsp;首先在github上创建一个项目dongxiaoxia.github.io，项目地址为https://github.com/dongxiaoxia.dongxiaoxia.github.io 。这里dongxiaoxia为用户名，项目名称必须为username.github.io.\n&emsp;&emsp;编辑全局配置文件：_config.yml，找到deploy的部分，设置github的项目地址。\n+ deploy:\n  type: git\n  repository: https://github.com/dongxiaoxia/dongxiaoxia.github.io.git\n  branch: master\n  \n&emsp;&emsp;然后通过命令hexo d部署\n&emsp;&emsp;如果提示count not find github，则deploy的type改成git，然后运行命令npm install hexo-deployer-git --save 再 hexo d。\n\n&emsp;&emsp;就这样这个静态的web网站就被部署到了github,点击”Settings”，找到GitHub Pages，提示“Your site is published at http://dongxiaoxia.github.io ”，打开网页http://dongxiaoxia.github.io ，就是我们刚刚发布的站点。\n## 绑定域名\n&emsp;&emsp;首先得有一个自己的域名，如果没有则可以跳过这步。\n1. 在域名解析页面设置主机记录，类型为CNAME，到dongxiaoxia.github.io。\n2. 在项目根目录上新建一个文件CNAME，文件内容为域名如www.dongxiaoxia.xyz。\n3. 然后通过浏览器打开www.dongxiaoxia.xyz就可以直接访问博客站点了。\n\n&emsp;&emsp;到这里为止，博客的搭建与Hexo的基本操作都已经掌握啦！剩下的就是怎么去搭建自己独一无二的博客了。\n\n\n\n\n\n","source":"_posts/用Hexo与GitHub打造属于自己的博客.md","raw":"title: 用Hexo与Github打造属于自己的博客\ndate: 2015-08-02 20:22:44\npermalink: hexo001\ntags:\n- Hexo\ncategories:\n- Hexo\n\n---\n根据转载：{% link 粉丝日志 http://blog.fens.me/hexo-blog-github/ true 粉丝日志 %}修改\n## Hexo介绍\n\n&emsp;&emsp;Hexo是一个简单的、轻量的、基于Node的一个静态博客框架。通过Hexo我们可以快速创建自己的博客，仅需要几条命令就可以完成。发布时，Hexo可以部署在自己的Node服务器上面，也可以部署github上面。对于个人用户来说，部署在github上好处颇多，不仅可以省去服务器的成本，还可以减少各种系统运维的麻烦事(系统管理、备份、网络)。所以，基于github的个人站点，正在开始流行起来….\n&emsp;&emsp;Hexo的官方网站：http://hexo.io/\n## Hexo安装\n### 安装Git\n&emsp;&emsp;自行百度\n### 安装node.js\n&emsp;&emsp;node.js官网https://nodejs.org/\n### 安装Hexo\n&emsp;&emsp;命令行输入*npm install -g hexo*，等待安装完成。\n\n&emsp;&emsp;可能会出现下载不了的问题，可以设置npm国内镜像。镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:\n1. 通过config命令\nnpm config set registry https://registry.npm.taobao.org \nnpm info underscore （如果上面配置正确这个命令会有字符串response）\n2. 命令行指定\nnpm --registry https://registry.npm.taobao.org info underscore \n3. 编辑 ~/.npmrc 加入下面内容\nregistry = https://registry.npm.taobao.org\n搜索镜像: https://npm.taobao.org\n\n&emsp;&emsp;建立或使用镜像,参考: https://github.com/cnpm/cnpmjs.org\n\n&emsp;&emsp;安装成功后在命令行输入hexo可以查看hexo的命令。\n\n## Hexo使用\n&emsp;&emsp;hexo使用超级简单，仅仅几个命令还就可以运行博客的各种操作。下面列出了hexo使用的一个简单流程与命令。\n1. 创建项目主目录\n&emsp;&emsp;可以在电脑上任意创建作为hexo博客项目的文件夹，以后所有的hexo操作都要cd到项目文件夹根目录下运行。\n3. 运行命令hexo init\n&emsp;&emsp;我们看到当前在目录下，出现项目的各个文件夹与文。\n4. 运行命令hexo g\n&emsp;&emsp;在本地目录下，会生成一个public的目录，里面包括了所有静态化的文件。\n&emsp;&emsp;要说明的一点是hexo的静态博客框架，那什么是静态博客呢？静态博客，是只包含html, javascript, css文件的网站，没有动态的脚本。虽然我们是用Node进行的开发，但博客的发布后就与Node无关了。在发布之前，我们要通过一条命令，把所有的文章都做静态化处理，就是生成对应的html, javascript, css，使得所有的文章都是由静态文件组成的。\n5. 运行命令npm install\n&emsp;&emsp;注意不要漏了运行*npm install*命令，否则hexo s命令将报错。\n6. 运行命令hexo s\n&emsp;&emsp;在命令行窗口会提示：Hexo is running iat http://localhost:4000 Press Ctrl+C to stop.。这时我们就可以打开连接访问我们的博客了。\n\n&emsp;&emsp;是不是很简单呢！接下来，我们要对Hexo做更全面的了解，才能做出个性化的博客。\n\n## 部署Hexo到github\n### 配置Git\n&emsp;&emsp;Git是分布式的代码管理工具，远程的代码管理是基于SSH的，所以要使用远程的Git则需要SSH的配置。github的SSH配置如下：\n1. 设置Git的user name和email：\n$ git config --global user.name \"dongxiaoxia\"\n$ git config --global user.email \"dongxiaoxia@example.com\"\n2. 生成SSH密钥过程：\n查看是否已经有了ssh密钥：cd ~/.ssh\n如果没有密钥则不会有此文件夹，有则备份删除\n2. 生成密钥：\n运行命令$ ssh-keygen -t rsa -C “dongxiaoxia@example.com”\n文件夹默认，输入两次密码即可。\nYour identification has been saved in /home/tekkub/.ssh/id_rsa.\nYour public key has been saved in /home/tekkub/.ssh/id_rsa.pub.\nThe key fingerprint is:\n………………\n最后得到了两个文件：id_rsa和id_rsa.pub\n4. 在github上添加ssh密钥：\n这要添加的是“id_rsa.pub”里面的公钥。登录github，打开项目主页，在setting页面上找到SSH KEY设置，然后添加ssh，标题随意。\n5. 接着打开git ，输入命令*$ ssh -T git@github.com*测试连接是否成功。\n\n### 部署到github\n&emsp;&emsp;首先在github上创建一个项目dongxiaoxia.github.io，项目地址为https://github.com/dongxiaoxia.dongxiaoxia.github.io 。这里dongxiaoxia为用户名，项目名称必须为username.github.io.\n&emsp;&emsp;编辑全局配置文件：_config.yml，找到deploy的部分，设置github的项目地址。\n+ deploy:\n  type: git\n  repository: https://github.com/dongxiaoxia/dongxiaoxia.github.io.git\n  branch: master\n  \n&emsp;&emsp;然后通过命令hexo d部署\n&emsp;&emsp;如果提示count not find github，则deploy的type改成git，然后运行命令npm install hexo-deployer-git --save 再 hexo d。\n\n&emsp;&emsp;就这样这个静态的web网站就被部署到了github,点击”Settings”，找到GitHub Pages，提示“Your site is published at http://dongxiaoxia.github.io ”，打开网页http://dongxiaoxia.github.io ，就是我们刚刚发布的站点。\n## 绑定域名\n&emsp;&emsp;首先得有一个自己的域名，如果没有则可以跳过这步。\n1. 在域名解析页面设置主机记录，类型为CNAME，到dongxiaoxia.github.io。\n2. 在项目根目录上新建一个文件CNAME，文件内容为域名如www.dongxiaoxia.xyz。\n3. 然后通过浏览器打开www.dongxiaoxia.xyz就可以直接访问博客站点了。\n\n&emsp;&emsp;到这里为止，博客的搭建与Hexo的基本操作都已经掌握啦！剩下的就是怎么去搭建自己独一无二的博客了。\n\n\n\n\n\n","slug":"hexo001","published":1,"updated":"2015-08-14T15:55:47.743Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiiwzrb4000dmomf5ec81qg9"},{"title":"Markdown写作常用语法","date":"2015-08-14T16:04:12.000Z","_content":"这是**新的开始**，我用hexo创建了第一篇文章。\n\n\n# 标题\n+ 使用 # 表示标题，一级标题使用一个 # ，二级标题使用两个 ## ，以此类推，共有六级标题。\n+ 使用 ===== 表示高阶标题，使用 --------- 表示次阶标题。\n\n  示例：\n<pre><code># 这是一级标题  \n## 这是二级标题  \n### 这是三级标题  \n###### 这是六级标题  \n这是一级标题  \n========  \n这是二级标题  \n--------------</code></pre>\n\n  页面显示：\n> # 这是一级标题\n## 这是二级标题\n### 这是三级标题\n###### 这是六级标题\n这是一级标题\n========\n这是二级标题\n\n  注意：\n\t+ #和标题之间加一个空格。\n\t+ ==== 和 ---- 表示标题时，大于等于2个都可以表示。\n\n\n\n\n\n------------------------------\n\n------------------------------\n\n------------------------------\n\n------------------------------\n\n\n\n\n\n\n\n\n\n\n\n\n# 引用\n    使用 > 表示引用， >> 表示引用里面再套一层引用，依次类推。\n**示例**：\n<pre><code> > 这是一级引用\n>> 这是二级引用\n>>> 这是三级引用\n\n>这是一级引用</code></pre>\n\t\n**页面显示**：\n> 这是一级引用\n>> 这是二级引用\n>>> 这是三级引用\n\n>这是一级引用\n\n**注意**：\n+ 如果 > 和 >> 嵌套使用的话，从 >> 退到 > 时，必须之间要加一个空格或者 > 作为过渡，否则默认为下一行和上一行是同一级别的引用。\n+ 引用标记里可以使用其他标记，如：有序列表或无序列表标记，代码标记等。\n------------------------------\n# 代码块\n　　使用\\`\\`\\`表示代码块。\n\n　　**示例**：\n　　\\`\\`\\`javascript\n　　var canvas = document.getElementById(\"canvas\");\n　　var context = canvas.getContext(\"2d\");\n　　\\`\\`\\`</code></pre>\n\n　　**页面显示**：\n　　```javascript\n　　var canvas = document.getElementById(\"canvas\");\n　　var context = canvas.getContext(\"2d\");\n　　```\n\n　　**示例**：\n　　　　这是\\`javascript\\`代码\n　　**页面显示**：\n　　　　这是`javascript`代码\n\n　　**注意**：\n+ \\`这个符号是在 Esc 键下面，切换到英文下即可。\n+ \\`\\`\\`后面的 javascript 表示此段代码为javascript代码，Markdown会自行使用javascript代码颜色渲染。\n\n## **Code Block**\n在文章中插入代码。\n  \n### **快捷方式**：code\n\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n### **普通的代码块**\n{% codeblock %}\n{% codeblock %}\n{% endcodeblock %}\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n{% codeblock %}\n{% endcodeblock %}\n{% endcodeblock %}\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n指定语言\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n附加说明\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\nArray.map\narray.map(callback[, thisArg])\n附加说明和网址\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n_.compactUnderscore.js\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n\n\n------------------------------\n# 列表\n　　使用`1. 2. 3. `表示有序列表，使用`*`或`-`或`+`表示无序列表。\n　　**示例1**：\n　　有序列表：\n\n　　1\\. 第一点\n　　2\\. 第二点\n　　4\\. 第三点\n\n　　**页面显示**：\n1. 第一点\n2. 第二点\n4. 第三点\n\n　　**示例2**：\n　　无序列表：\n\\+ 呵呵\n  　　\\* 嘉嘉\n  　　\\- 嘻嘻\n 　　 \\- 吼吼\n   　　　　 \\- 嘎嘎\n   　　　　 \\+ 桀桀\n\\* 哈哈\n　　**页面显示**：\n+ 呵呵\n  * 嘉嘉\n  - 嘻嘻\n  - 吼吼\n    - 嘎嘎\n    + 桀桀\n* 哈哈\n\n　　**注意**：\n+ 无序列表或有序列表标记和后面的文字之间要有一个空格隔开。\n+ 有序列表标记不是按照你写的数字进行显示的，而是根据当前有序列表标记所在位置显示的，如示例1所示。\n+ 无序列表的项目符号是按照实心圆、空心圆、实心方格的层级关系递进的，如例2所示。通常情况下，同一层级使用同一种标记表示，便于自己查看和管理。\n------------------------------\n# 粗体和斜体\n　　使用 `**` 或者 `__` 表示粗体。\n　　使用 `*` 或者 `_` 表示斜体。\n\n　　**示例**：\n　　　　\\*\\*粗体1\\*\\*　　\\_\\_粗体2\\_\\_\n　　　　\\*斜体1\\*　　\\_斜体2\\_\n\t\n　　**页面显示**：\n　　　　**粗体1**　　__粗体2__\n　　　　*斜体1*　　_斜体2_\n\n　　**注意**：\n　　前后的 * 或 _ 与要 加粗或倾斜 的字体之间不能有空格。\n\n------------------------------\n# 表格\n+ ------: 为右对齐。\n+ :------ 为左对齐。\n+ :------: 为居中对齐。\n+ ------- 为使用默认居中对齐。\n\n　　**示例**：\n\n\n\n\n\n```\n|         序号    |    交易名    |    交易说明    |    备注    |\n|    ------: |    :-------:    |    :---------   |    ------    |\n|    1    |    prfcfg    |    菜单配置    |    可以通过此交易查询到所有交易码和菜单的对应关系    |\n|    2    |    gentmo    |    编译所有交易    |    |\n|    100000    |    sysdba    |    数据库表模型汇总    |    |\n```\t\n　　**页面显示**：\n\n\n|         序号    |    交易名    |    交易说明    |    备注    |\n|------:|:-------:|:---------|------|\n|    1    |    prfcfg    |    菜单配置    |    可以通过此交易查询到所有交易码和菜单的对应关系    |\n|    2    |    gentmo    |    编译所有交易    |    |\n|    100000    |    sysdba    |    数据库表模型汇总    |    |\n\n　　**注意**：\n+ 每个Markdown解析器都不一样，可能左右居中对齐方式的表示方式不一样。\n+ 可以使用`<table>`标签\n\n---\n# 分割线\n　　使用 `---` 或者 `***` 或者 `* * *` 表示水平分割线。\n　　**示例**：\n\n\n\\-\\-\\-\n 　　\n\n\\*\\*\\*\n 　　\n\n\\* \\* \\*\n\n　　**页面显示**：\n\n\n\n---\n 　　\n\n***\n 　　\n\n* * *\n　　**注意**：\n+ 只要 * 或者 - 大于等于三个就可组成一条平行线。\n+ 使用 --- 作为水平分割线时，要在它的前后都空一行，防止 --- 被当成标题标记的表示方式。\n* * *\n# 链接\n　　使用 `[](link \"Optional title\")` 表示行内链接。其中：\n* [] 内的内容为要添加链接的文字。\n* link 为链接地址。\n* Optional title 为显示标题。显示效果为在你将鼠标放到链接上后，会显示一个小框提示，提示的内容就是 Optional title 里的内容。\n\n　　**示例**：\n\n　　`这是我的博客地址：[Hello World](http://www.dongxiaoxia.xyz \"Hello World\" )`\n\n　　`这是我的博客地址：[Hello World][1]`\n\n　　`[1]:http://www.dongxiaoxia.xyz \"Hello World\" `\n\n　　**页面显示**：\n\n　　这是我的博客地址：[Hello World](http://www.dongxiaoxia.xyz \"Hello World\" )\n\n　　这是我的博客地址：[Hello World][1]\n[1]:http://www.dongxiaoxia.xyz \"Hello World\" \n　　**注意**：\n+ 参考式链接和行内链接的效果是一样的，各有利弊。行内连接清晰易懂，可以清楚的知道链接的地址，但是不便于多次利用。参考式链接可以重复使用，但不能即刻知道链接的地址。\n+ 是在本窗口打开链接还是新建一个窗口还待研究。\n+ Markdown是支持HTML语法的，所以可以直接使用`<a>`标签,例如`<a href=\"http://www.dongxiaoxia.xyz\">Hello World</a>`，显示<a href=\"http://www.dongxiaoxia.xyz\">Hello World</a>。\n+ 如果想直接显示链接地址，可以使用`<http://www.dongxiaoxia.xyz>`写法，显示<http://www.dongxiaoxia.xyz>\n+ 还可以连`<>`都省略，直接使用http://www.dongxiaoxia.xyz 写法，显示http://www.dongxiaoxia.xyz ，注意链接后面接一个空格。\n------------------------------\n# 导入图片\n　　使用 `![Alt text](/path/to/img.jpg \"Optional title\")` 导入图片。其中：\n+ Alt text 为如果图片无法显示时显示的文字；\n+ /path/to/img.jpg 为图片所在路径；\n+ Optional title 为显示标题。显示效果为在你将鼠标放到图片上后，会显示一个小框提示，提示的内容就是 Optional title 里的内容。\n\n　　**示例**：\n\n![Markdown](/img/touxiang.jpg \"这是我的头像，帅不帅\")\n\n　　**注意**：\n+ 导入的图片路径可以使用绝对路径也可以使用相对路径，建议使用相对路径。\n+ 我通常的做法是Markdown文档的同级目录下建立一个pictures文件夹，里面放置所有所需的图片，如果图片多的话，你也可以在pictures文件夹里建立子文件夹归类\n***\n# 反斜杠\n　　使用` \\ `表示反斜杠。在你不想显示Markdown标记时可以使用反斜杠。\n　　**示例**：\n　　　　\\\\\\*这里不会显示斜体\\\\\\*\n\n　　**页面显示**：\n　　　　\\*这里不会显示斜体\\*\n***\n# 空格\n　　Markdown语法会忽略首行开头的空格，如果要体现出首行开头空两个的效果，可以使用**全角符号下的空格**，windows下使用`shift+空格`切换。\n***\n# 删除线\n　　使用`~~`表示删除线。\n　　**示例**：\n　　　　\\~\\~这是一条删除线\\~\\~\n\n　　**页面显示**：\n　　　　~~这是一条删除线~~\n***\n# 页内跳转\n　　使用html代码实现页内跳转。在要跳转到的位置定义个锚`<span id = \"jump\">hehe</span>`，然后使用`[你好](#jump)`将`你好`设置为一单击即跳转到`hehe`所在位置的效果。\n　　**示例**：\n　　　　`[你好](#jump)`\n　　　　`<span id = \"jump\">hehe</span>`\n\n　　**页面显示**：\n　　　　[你好](#jump)\n　　　　<span id = \"jump\">hehe</span>\n***\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{% post_path slug %}\nhttp://www.cnblogs.com/crazyant007/p/4220066.html?utm_source=tuicool\n{% post_link slug [title] %}\n\n\n***\n参考http://www.cnblogs.com/crazyant007/p/4220066.html?utm_source=tuicool 改写","source":"_posts/新的开始.md","raw":"title: Markdown写作常用语法\ndate: 2015-08-15 00:04:12\npermalink: hexo-writing\ntags:\n- hexo\ncategories:\n- hexo\n---\n这是**新的开始**，我用hexo创建了第一篇文章。\n\n\n# 标题\n+ 使用 # 表示标题，一级标题使用一个 # ，二级标题使用两个 ## ，以此类推，共有六级标题。\n+ 使用 ===== 表示高阶标题，使用 --------- 表示次阶标题。\n\n  示例：\n<pre><code># 这是一级标题  \n## 这是二级标题  \n### 这是三级标题  \n###### 这是六级标题  \n这是一级标题  \n========  \n这是二级标题  \n--------------</code></pre>\n\n  页面显示：\n> # 这是一级标题\n## 这是二级标题\n### 这是三级标题\n###### 这是六级标题\n这是一级标题\n========\n这是二级标题\n\n  注意：\n\t+ #和标题之间加一个空格。\n\t+ ==== 和 ---- 表示标题时，大于等于2个都可以表示。\n\n\n\n\n\n------------------------------\n\n------------------------------\n\n------------------------------\n\n------------------------------\n\n\n\n\n\n\n\n\n\n\n\n\n# 引用\n    使用 > 表示引用， >> 表示引用里面再套一层引用，依次类推。\n**示例**：\n<pre><code> > 这是一级引用\n>> 这是二级引用\n>>> 这是三级引用\n\n>这是一级引用</code></pre>\n\t\n**页面显示**：\n> 这是一级引用\n>> 这是二级引用\n>>> 这是三级引用\n\n>这是一级引用\n\n**注意**：\n+ 如果 > 和 >> 嵌套使用的话，从 >> 退到 > 时，必须之间要加一个空格或者 > 作为过渡，否则默认为下一行和上一行是同一级别的引用。\n+ 引用标记里可以使用其他标记，如：有序列表或无序列表标记，代码标记等。\n------------------------------\n# 代码块\n　　使用\\`\\`\\`表示代码块。\n\n　　**示例**：\n　　\\`\\`\\`javascript\n　　var canvas = document.getElementById(\"canvas\");\n　　var context = canvas.getContext(\"2d\");\n　　\\`\\`\\`</code></pre>\n\n　　**页面显示**：\n　　```javascript\n　　var canvas = document.getElementById(\"canvas\");\n　　var context = canvas.getContext(\"2d\");\n　　```\n\n　　**示例**：\n　　　　这是\\`javascript\\`代码\n　　**页面显示**：\n　　　　这是`javascript`代码\n\n　　**注意**：\n+ \\`这个符号是在 Esc 键下面，切换到英文下即可。\n+ \\`\\`\\`后面的 javascript 表示此段代码为javascript代码，Markdown会自行使用javascript代码颜色渲染。\n\n## **Code Block**\n在文章中插入代码。\n  \n### **快捷方式**：code\n\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n### **普通的代码块**\n{% codeblock %}\n{% codeblock %}\n{% endcodeblock %}\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n{% codeblock %}\n{% endcodeblock %}\n{% endcodeblock %}\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n指定语言\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n附加说明\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\nArray.map\narray.map(callback[, thisArg])\n附加说明和网址\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n_.compactUnderscore.js\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n\n\n------------------------------\n# 列表\n　　使用`1. 2. 3. `表示有序列表，使用`*`或`-`或`+`表示无序列表。\n　　**示例1**：\n　　有序列表：\n\n　　1\\. 第一点\n　　2\\. 第二点\n　　4\\. 第三点\n\n　　**页面显示**：\n1. 第一点\n2. 第二点\n4. 第三点\n\n　　**示例2**：\n　　无序列表：\n\\+ 呵呵\n  　　\\* 嘉嘉\n  　　\\- 嘻嘻\n 　　 \\- 吼吼\n   　　　　 \\- 嘎嘎\n   　　　　 \\+ 桀桀\n\\* 哈哈\n　　**页面显示**：\n+ 呵呵\n  * 嘉嘉\n  - 嘻嘻\n  - 吼吼\n    - 嘎嘎\n    + 桀桀\n* 哈哈\n\n　　**注意**：\n+ 无序列表或有序列表标记和后面的文字之间要有一个空格隔开。\n+ 有序列表标记不是按照你写的数字进行显示的，而是根据当前有序列表标记所在位置显示的，如示例1所示。\n+ 无序列表的项目符号是按照实心圆、空心圆、实心方格的层级关系递进的，如例2所示。通常情况下，同一层级使用同一种标记表示，便于自己查看和管理。\n------------------------------\n# 粗体和斜体\n　　使用 `**` 或者 `__` 表示粗体。\n　　使用 `*` 或者 `_` 表示斜体。\n\n　　**示例**：\n　　　　\\*\\*粗体1\\*\\*　　\\_\\_粗体2\\_\\_\n　　　　\\*斜体1\\*　　\\_斜体2\\_\n\t\n　　**页面显示**：\n　　　　**粗体1**　　__粗体2__\n　　　　*斜体1*　　_斜体2_\n\n　　**注意**：\n　　前后的 * 或 _ 与要 加粗或倾斜 的字体之间不能有空格。\n\n------------------------------\n# 表格\n+ ------: 为右对齐。\n+ :------ 为左对齐。\n+ :------: 为居中对齐。\n+ ------- 为使用默认居中对齐。\n\n　　**示例**：\n\n\n\n\n\n```\n|         序号    |    交易名    |    交易说明    |    备注    |\n|    ------: |    :-------:    |    :---------   |    ------    |\n|    1    |    prfcfg    |    菜单配置    |    可以通过此交易查询到所有交易码和菜单的对应关系    |\n|    2    |    gentmo    |    编译所有交易    |    |\n|    100000    |    sysdba    |    数据库表模型汇总    |    |\n```\t\n　　**页面显示**：\n\n\n|         序号    |    交易名    |    交易说明    |    备注    |\n|------:|:-------:|:---------|------|\n|    1    |    prfcfg    |    菜单配置    |    可以通过此交易查询到所有交易码和菜单的对应关系    |\n|    2    |    gentmo    |    编译所有交易    |    |\n|    100000    |    sysdba    |    数据库表模型汇总    |    |\n\n　　**注意**：\n+ 每个Markdown解析器都不一样，可能左右居中对齐方式的表示方式不一样。\n+ 可以使用`<table>`标签\n\n---\n# 分割线\n　　使用 `---` 或者 `***` 或者 `* * *` 表示水平分割线。\n　　**示例**：\n\n\n\\-\\-\\-\n 　　\n\n\\*\\*\\*\n 　　\n\n\\* \\* \\*\n\n　　**页面显示**：\n\n\n\n---\n 　　\n\n***\n 　　\n\n* * *\n　　**注意**：\n+ 只要 * 或者 - 大于等于三个就可组成一条平行线。\n+ 使用 --- 作为水平分割线时，要在它的前后都空一行，防止 --- 被当成标题标记的表示方式。\n* * *\n# 链接\n　　使用 `[](link \"Optional title\")` 表示行内链接。其中：\n* [] 内的内容为要添加链接的文字。\n* link 为链接地址。\n* Optional title 为显示标题。显示效果为在你将鼠标放到链接上后，会显示一个小框提示，提示的内容就是 Optional title 里的内容。\n\n　　**示例**：\n\n　　`这是我的博客地址：[Hello World](http://www.dongxiaoxia.xyz \"Hello World\" )`\n\n　　`这是我的博客地址：[Hello World][1]`\n\n　　`[1]:http://www.dongxiaoxia.xyz \"Hello World\" `\n\n　　**页面显示**：\n\n　　这是我的博客地址：[Hello World](http://www.dongxiaoxia.xyz \"Hello World\" )\n\n　　这是我的博客地址：[Hello World][1]\n[1]:http://www.dongxiaoxia.xyz \"Hello World\" \n　　**注意**：\n+ 参考式链接和行内链接的效果是一样的，各有利弊。行内连接清晰易懂，可以清楚的知道链接的地址，但是不便于多次利用。参考式链接可以重复使用，但不能即刻知道链接的地址。\n+ 是在本窗口打开链接还是新建一个窗口还待研究。\n+ Markdown是支持HTML语法的，所以可以直接使用`<a>`标签,例如`<a href=\"http://www.dongxiaoxia.xyz\">Hello World</a>`，显示<a href=\"http://www.dongxiaoxia.xyz\">Hello World</a>。\n+ 如果想直接显示链接地址，可以使用`<http://www.dongxiaoxia.xyz>`写法，显示<http://www.dongxiaoxia.xyz>\n+ 还可以连`<>`都省略，直接使用http://www.dongxiaoxia.xyz 写法，显示http://www.dongxiaoxia.xyz ，注意链接后面接一个空格。\n------------------------------\n# 导入图片\n　　使用 `![Alt text](/path/to/img.jpg \"Optional title\")` 导入图片。其中：\n+ Alt text 为如果图片无法显示时显示的文字；\n+ /path/to/img.jpg 为图片所在路径；\n+ Optional title 为显示标题。显示效果为在你将鼠标放到图片上后，会显示一个小框提示，提示的内容就是 Optional title 里的内容。\n\n　　**示例**：\n\n![Markdown](/img/touxiang.jpg \"这是我的头像，帅不帅\")\n\n　　**注意**：\n+ 导入的图片路径可以使用绝对路径也可以使用相对路径，建议使用相对路径。\n+ 我通常的做法是Markdown文档的同级目录下建立一个pictures文件夹，里面放置所有所需的图片，如果图片多的话，你也可以在pictures文件夹里建立子文件夹归类\n***\n# 反斜杠\n　　使用` \\ `表示反斜杠。在你不想显示Markdown标记时可以使用反斜杠。\n　　**示例**：\n　　　　\\\\\\*这里不会显示斜体\\\\\\*\n\n　　**页面显示**：\n　　　　\\*这里不会显示斜体\\*\n***\n# 空格\n　　Markdown语法会忽略首行开头的空格，如果要体现出首行开头空两个的效果，可以使用**全角符号下的空格**，windows下使用`shift+空格`切换。\n***\n# 删除线\n　　使用`~~`表示删除线。\n　　**示例**：\n　　　　\\~\\~这是一条删除线\\~\\~\n\n　　**页面显示**：\n　　　　~~这是一条删除线~~\n***\n# 页内跳转\n　　使用html代码实现页内跳转。在要跳转到的位置定义个锚`<span id = \"jump\">hehe</span>`，然后使用`[你好](#jump)`将`你好`设置为一单击即跳转到`hehe`所在位置的效果。\n　　**示例**：\n　　　　`[你好](#jump)`\n　　　　`<span id = \"jump\">hehe</span>`\n\n　　**页面显示**：\n　　　　[你好](#jump)\n　　　　<span id = \"jump\">hehe</span>\n***\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{% post_path slug %}\nhttp://www.cnblogs.com/crazyant007/p/4220066.html?utm_source=tuicool\n{% post_link slug [title] %}\n\n\n***\n参考http://www.cnblogs.com/crazyant007/p/4220066.html?utm_source=tuicool 改写","slug":"hexo-writing","published":1,"updated":"2015-08-16T08:57:53.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiiwzrb8000imomfvhw89vvs"},{"title":"Hello World","_content":"Welcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"title: Hello World\n---\nWelcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2015-12-23T14:02:01.128Z","updated":"2015-08-01T13:11:46.899Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiiwzrbg000nmomf3pc1zdik"},{"title":"SpringMVC Controller接收List< Map>或List< Object>","date":"2015-12-23T12:58:44.000Z","_content":"google了一个下午，暂时找到两种解决办法，虽然这两种方法都不是很方便，暂时先这么用着吧！\n## 1.全部参数封装为一个对象\n### controller类\n```java\n/**\n * 批量新增用户\n *\n * 不能直接传List  < Map> 数组对象，只能用两个法子传参数，一个是把数组对象在前端变为String传到后台再解析，另外一个就是把所有参数封装成一个对象，前端JSON.stringify(params)后变为字符串传到后台，后台会自动转换为对象\n *\n * @param batchCreateVO 封装好的对象\n * @param request\n * @param session\n * @return\n */\n@RequestMapping(value = \"/batchCreate\", produces = MediaTypes.JSON_UTF_8)\n@ResponseBody\nprotected String batchCreate(\n        @RequestBody BatchCreateVO batchCreateVO,\n        HttpServletRequest request, HttpSession session) {\n        //dosomething\n\t}\n```\n\n### 封装的对象\n```java\npackage com.miracle.mby.account.vo;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * 移动端批量创建用户封装对象\n * <p/>\n * ticket       身份校验ticket\n * mac          身份校验mac\n * refDeptId    企业顶级部门\n * usersString  用户对象数组字符串\n *\n * @author dongxiaoxia\n * @create 2015-12-22 14:33\n */\npublic class BatchCreateVO {\n    private String ticket;\n    private String mac;\n    private String refDeptId;\n    private List<Map> users;\n\n    public String getTicket() {\n        return ticket;\n    }\n\n    public void setTicket(String ticket) {\n        this.ticket = ticket;\n    }\n\n    public String getMac() {\n        return mac;\n    }\n\n    public void setMac(String mac) {\n        this.mac = mac;\n    }\n\n    public String getRefDeptId() {\n        return refDeptId;\n    }\n\n    public void setRefDeptId(String refDeptId) {\n        this.refDeptId = refDeptId;\n    }\n\n    public List<Map> getUsers() {\n        return users;\n    }\n\n    public void setUsers(List<Map> users) {\n        this.users = users;\n    }\n}\n```\n\n### 页面请求\n```javascript\nvar users = [{\"userName\": \"测试用户1\",\"sex\":0,\"mobile\":\"15432343213\",\"email\":\"123@123.com\",\"phone\":\"123213\",\"departmentIds\":[]}];\nvar params ={\n    \"ticket\":\"test\",\n    \"mac\":\"test\",\n    \"refDeptId\":\"fa0823254d6011e58434ac220bcd3c54\",\n    \"users\":users\n};\n$.ajax({\n    type: 'POST',\n    url: 'http://localhost:8081/api/mobile/user/batchCreate',\n    data: JSON.stringify(params),\n    dataType: 'json', contentType: \"application/json; charset=utf-8\"\n});\n```\n\n\n## 2.单独转换需要的List\n单独把List< Map>或List< Object> 参数转换为json字符串，然后传到后台之后再把字符串转换会对象\n\n\n\n\n\n","source":"_posts/SpringMVC Controller接收List Map或List Object.md","raw":"title: SpringMVC Controller接收List< Map>或List< Object>\ndate: 2015-12-23 20:58:44\npermalink: spring00001\ntags:\n- Spring\ncategories:\n- Spring\n\n---\ngoogle了一个下午，暂时找到两种解决办法，虽然这两种方法都不是很方便，暂时先这么用着吧！\n## 1.全部参数封装为一个对象\n### controller类\n```java\n/**\n * 批量新增用户\n *\n * 不能直接传List  < Map> 数组对象，只能用两个法子传参数，一个是把数组对象在前端变为String传到后台再解析，另外一个就是把所有参数封装成一个对象，前端JSON.stringify(params)后变为字符串传到后台，后台会自动转换为对象\n *\n * @param batchCreateVO 封装好的对象\n * @param request\n * @param session\n * @return\n */\n@RequestMapping(value = \"/batchCreate\", produces = MediaTypes.JSON_UTF_8)\n@ResponseBody\nprotected String batchCreate(\n        @RequestBody BatchCreateVO batchCreateVO,\n        HttpServletRequest request, HttpSession session) {\n        //dosomething\n\t}\n```\n\n### 封装的对象\n```java\npackage com.miracle.mby.account.vo;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * 移动端批量创建用户封装对象\n * <p/>\n * ticket       身份校验ticket\n * mac          身份校验mac\n * refDeptId    企业顶级部门\n * usersString  用户对象数组字符串\n *\n * @author dongxiaoxia\n * @create 2015-12-22 14:33\n */\npublic class BatchCreateVO {\n    private String ticket;\n    private String mac;\n    private String refDeptId;\n    private List<Map> users;\n\n    public String getTicket() {\n        return ticket;\n    }\n\n    public void setTicket(String ticket) {\n        this.ticket = ticket;\n    }\n\n    public String getMac() {\n        return mac;\n    }\n\n    public void setMac(String mac) {\n        this.mac = mac;\n    }\n\n    public String getRefDeptId() {\n        return refDeptId;\n    }\n\n    public void setRefDeptId(String refDeptId) {\n        this.refDeptId = refDeptId;\n    }\n\n    public List<Map> getUsers() {\n        return users;\n    }\n\n    public void setUsers(List<Map> users) {\n        this.users = users;\n    }\n}\n```\n\n### 页面请求\n```javascript\nvar users = [{\"userName\": \"测试用户1\",\"sex\":0,\"mobile\":\"15432343213\",\"email\":\"123@123.com\",\"phone\":\"123213\",\"departmentIds\":[]}];\nvar params ={\n    \"ticket\":\"test\",\n    \"mac\":\"test\",\n    \"refDeptId\":\"fa0823254d6011e58434ac220bcd3c54\",\n    \"users\":users\n};\n$.ajax({\n    type: 'POST',\n    url: 'http://localhost:8081/api/mobile/user/batchCreate',\n    data: JSON.stringify(params),\n    dataType: 'json', contentType: \"application/json; charset=utf-8\"\n});\n```\n\n\n## 2.单独转换需要的List\n单独把List< Map>或List< Object> 参数转换为json字符串，然后传到后台之后再把字符串转换会对象\n\n\n\n\n\n","slug":"spring00001","published":1,"updated":"2015-12-23T14:28:16.334Z","_id":"ciiiwzrbl000omomf07pt0jto","comments":1,"layout":"post","photos":[],"link":""},{"title":"演示：HTML5应用之文件拖拽上传","date":"2015-08-18T15:22:44.000Z","_content":"一个HTML5拖拽上传的小例子。\nHTML5可以实现文件的拖拽上传与下载。但是目前技术有限，只能操作单个文件或拖拽多个文件通过循环遍历实现多个文件上传下载，至于文件夹的操作，由于技术水平有限，暂时还没有找到资料。\n\n需要注意的知识点有三个\n1. 拖拽事件的监听。取消浏览器默认的监听行为，重新添加拖拽监听事件。\n\n2. `formdata`的操作。通过`e.dataTransfer.files`获取文件对象，通过`formdata`实现表单的数据处理。\n\n3. `XMLHttpRequest`的操作。主要通过send方法发送到服务器。\n\n\n```\n<!DOCTYPE HTML>\n<html>\n<head>\n<meta charset=\"gbk\">\n<title>演示：HTML5应用之文件拖拽上传</title>\n<script type=\"text/javascript\" src=\"http://www.helloweba.com/demo/js/jquery-1.7.2.min.js\"></script>\n<style type=\"text/css\">\n.demo{width:500px; margin:50px auto}\n#drop_area{width:100%; height:100px; border:3px dashed silver; line-height:100px; text-align:center; font-size:36px; color:#d3d3d3}\n#preview{width:500px; overflow:hidden}\n</style>\n</head>\n\n<body>\n\n\n<div id=\"main\">\n<div class=\"demo\">\n<div id=\"drop_area\">将图片拖拽到此区域</div>\n<div id=\"preview\"></div>\n</div>\n</div>\n\n<script type=\"text/javascript\">\n$(function(){\n//阻止浏览器默认行。\n$(document).on({\ndragleave:function(e){ //拖离\ne.preventDefault();\n},\ndrop:function(e){ //拖后放\ne.preventDefault();\n},\ndragenter:function(e){ //拖进\ne.preventDefault();\n},\ndragover:function(e){ //拖来拖去\ne.preventDefault();\n}\n});\n\n//================上传的实现\nvar box = document.getElementById('drop_area'); //拖拽区域\ndebugger\nbox.addEventListener(\"drop\",function(e){\ne.preventDefault(); //取消默认浏览器拖拽效果\nvar fileList = e.dataTransfer.files; //获取文件对象\n//检测是否是拖拽文件到页面的操作\nif(fileList.length == 0){\nreturn false;\n}\n//检测文件是不是图片\nif(fileList[0].type.indexOf('image') === -1){\nalert(\"您拖的不是图片！\");\nreturn false;\n}\n\n//拖拉图片到浏览器，可以实现预览功能\nvar img = window.webkitURL.createObjectURL(fileList[0]);\nvar filename = fileList[0].name; //图片名称\nvar filesize = Math.floor((fileList[0].size)/1024); \nif(filesize>500){\nalert(\"上传大小不能超过500K.\");\nreturn false;\n}\n//alert(filesize);\nvar str = \"<img src='\"+img+\"'><p>图片名称：\"+filename+\"</p><p>大小：\"+filesize+\"KB</p>\";\n$(\"#preview\").html(str);\n\n//上传\nxhr = new XMLHttpRequest();\nxhr.open(\"post\", \"upload.php\", true);\nxhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\nvar fd = new FormData();\nfd.append('mypic', fileList[0]);\n\nxhr.send(fd);\n\n\n},false);\n});\n</script>\n\n</body>\n</html>\n```","source":"_posts/HTML5应用之文件拖拽上传.md","raw":"title: 演示：HTML5应用之文件拖拽上传\ndate: 2015-08-018 23:22:44\npermalink: dropPic\ntags:\n- java\n- html5\ncategories:\n- java\n\n---\n一个HTML5拖拽上传的小例子。\nHTML5可以实现文件的拖拽上传与下载。但是目前技术有限，只能操作单个文件或拖拽多个文件通过循环遍历实现多个文件上传下载，至于文件夹的操作，由于技术水平有限，暂时还没有找到资料。\n\n需要注意的知识点有三个\n1. 拖拽事件的监听。取消浏览器默认的监听行为，重新添加拖拽监听事件。\n\n2. `formdata`的操作。通过`e.dataTransfer.files`获取文件对象，通过`formdata`实现表单的数据处理。\n\n3. `XMLHttpRequest`的操作。主要通过send方法发送到服务器。\n\n\n```\n<!DOCTYPE HTML>\n<html>\n<head>\n<meta charset=\"gbk\">\n<title>演示：HTML5应用之文件拖拽上传</title>\n<script type=\"text/javascript\" src=\"http://www.helloweba.com/demo/js/jquery-1.7.2.min.js\"></script>\n<style type=\"text/css\">\n.demo{width:500px; margin:50px auto}\n#drop_area{width:100%; height:100px; border:3px dashed silver; line-height:100px; text-align:center; font-size:36px; color:#d3d3d3}\n#preview{width:500px; overflow:hidden}\n</style>\n</head>\n\n<body>\n\n\n<div id=\"main\">\n<div class=\"demo\">\n<div id=\"drop_area\">将图片拖拽到此区域</div>\n<div id=\"preview\"></div>\n</div>\n</div>\n\n<script type=\"text/javascript\">\n$(function(){\n//阻止浏览器默认行。\n$(document).on({\ndragleave:function(e){ //拖离\ne.preventDefault();\n},\ndrop:function(e){ //拖后放\ne.preventDefault();\n},\ndragenter:function(e){ //拖进\ne.preventDefault();\n},\ndragover:function(e){ //拖来拖去\ne.preventDefault();\n}\n});\n\n//================上传的实现\nvar box = document.getElementById('drop_area'); //拖拽区域\ndebugger\nbox.addEventListener(\"drop\",function(e){\ne.preventDefault(); //取消默认浏览器拖拽效果\nvar fileList = e.dataTransfer.files; //获取文件对象\n//检测是否是拖拽文件到页面的操作\nif(fileList.length == 0){\nreturn false;\n}\n//检测文件是不是图片\nif(fileList[0].type.indexOf('image') === -1){\nalert(\"您拖的不是图片！\");\nreturn false;\n}\n\n//拖拉图片到浏览器，可以实现预览功能\nvar img = window.webkitURL.createObjectURL(fileList[0]);\nvar filename = fileList[0].name; //图片名称\nvar filesize = Math.floor((fileList[0].size)/1024); \nif(filesize>500){\nalert(\"上传大小不能超过500K.\");\nreturn false;\n}\n//alert(filesize);\nvar str = \"<img src='\"+img+\"'><p>图片名称：\"+filename+\"</p><p>大小：\"+filesize+\"KB</p>\";\n$(\"#preview\").html(str);\n\n//上传\nxhr = new XMLHttpRequest();\nxhr.open(\"post\", \"upload.php\", true);\nxhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\nvar fd = new FormData();\nfd.append('mypic', fileList[0]);\n\nxhr.send(fd);\n\n\n},false);\n});\n</script>\n\n</body>\n</html>\n```","slug":"dropPic","published":1,"updated":"2015-08-18T15:38:38.464Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiiwzrbs000tmomf8k8w8tza"}],"PostAsset":[],"PostCategory":[{"post_id":"ciiiwzraq0008momf766narln","category_id":"ciiiwzraw0009momf03ysuj86","_id":"ciiiwzrb1000cmomfur815yp5"},{"post_id":"ciiiwzrb4000dmomf5ec81qg9","category_id":"ciiiwzrb5000emomfkfj0l5sp","_id":"ciiiwzrb7000hmomfbuhj9d8r"},{"post_id":"ciiiwzrb8000imomfvhw89vvs","category_id":"ciiiwzrb9000jmomfyhkdh2yc","_id":"ciiiwzrba000mmomftesnjnm7"},{"post_id":"ciiiwzrbs000tmomf8k8w8tza","category_id":"ciiiwzrbw000umomf9wgvv9e6","_id":"ciiiwzrby000xmomftit23ud8"},{"post_id":"ciiiwzrbl000omomf07pt0jto","category_id":"ciiiwzrbo000pmomfdsljjsty","_id":"ciiix12zk0000m0mfjclulo6v"}],"PostTag":[{"post_id":"ciiiwzraq0008momf766narln","tag_id":"ciiiwzrax000amomffae1gmon","_id":"ciiiwzrb0000bmomf8cb8cisd"},{"post_id":"ciiiwzrb4000dmomf5ec81qg9","tag_id":"ciiiwzrb6000fmomf0duqc9f2","_id":"ciiiwzrb7000gmomfmoq8iq0c"},{"post_id":"ciiiwzrb8000imomfvhw89vvs","tag_id":"ciiiwzrba000kmomfknf5ygrp","_id":"ciiiwzrba000lmomfekrl4x5m"},{"post_id":"ciiiwzrbl000omomf07pt0jto","tag_id":"ciiiwzrbp000qmomflahn34tt","_id":"ciiiwzrbq000rmomfus2i2yr2"},{"post_id":"ciiiwzrbs000tmomf8k8w8tza","tag_id":"ciiiwzrbx000vmomfdua8rlop","_id":"ciiiwzrbz000ymomfvowg7ppo"},{"post_id":"ciiiwzrbs000tmomf8k8w8tza","tag_id":"ciiiwzrby000wmomfg4smzozw","_id":"ciiiwzrbz000zmomfrodwll0s"}],"Tag":[{"name":"html","_id":"ciiiwzrax000amomffae1gmon"},{"name":"Hexo","_id":"ciiiwzrb6000fmomf0duqc9f2"},{"name":"hexo","_id":"ciiiwzrba000kmomfknf5ygrp"},{"name":"Spring","_id":"ciiiwzrbp000qmomflahn34tt"},{"name":"java","_id":"ciiiwzrbx000vmomfdua8rlop"},{"name":"html5","_id":"ciiiwzrby000wmomfg4smzozw"}]}}